ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"cyfitter_cfg.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CyClockStartupError,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CyClockStartupError, %function
  24              	CyClockStartupError:
  25              	.LFB187:
  26              		.file 1 "Generated_Source\\PSoC6\\cyfitter_cfg.c"
   1:Generated_Source\PSoC6/cyfitter_cfg.c **** 
   2:Generated_Source\PSoC6/cyfitter_cfg.c **** /*******************************************************************************
   3:Generated_Source\PSoC6/cyfitter_cfg.c **** * File Name: cyfitter_cfg.c
   4:Generated_Source\PSoC6/cyfitter_cfg.c **** * 
   5:Generated_Source\PSoC6/cyfitter_cfg.c **** * PSoC Creator  4.3 Early Access
   6:Generated_Source\PSoC6/cyfitter_cfg.c **** *
   7:Generated_Source\PSoC6/cyfitter_cfg.c **** * Description:
   8:Generated_Source\PSoC6/cyfitter_cfg.c **** * This file contains device initialization code.
   9:Generated_Source\PSoC6/cyfitter_cfg.c **** * Except for the user defined sections in CyClockStartupError(), this file should not be modified.
  10:Generated_Source\PSoC6/cyfitter_cfg.c **** * This file is automatically generated by PSoC Creator.
  11:Generated_Source\PSoC6/cyfitter_cfg.c **** *
  12:Generated_Source\PSoC6/cyfitter_cfg.c **** ********************************************************************************
  13:Generated_Source\PSoC6/cyfitter_cfg.c **** * Copyright (c) 2007-2019 Cypress Semiconductor.  All rights reserved.
  14:Generated_Source\PSoC6/cyfitter_cfg.c **** * You may use this file only in accordance with the license, terms, conditions, 
  15:Generated_Source\PSoC6/cyfitter_cfg.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  16:Generated_Source\PSoC6/cyfitter_cfg.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC6/cyfitter_cfg.c **** ********************************************************************************/
  18:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  19:Generated_Source\PSoC6/cyfitter_cfg.c **** #include <string.h>
  20:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "cydevice_trm.h"
  21:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "cyfitter.h"
  22:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "gpio/cy_gpio.h"
  23:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "syslib/cy_syslib.h"
  24:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "cyfitter_cfg.h"
  25:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "cyapicallbacks.h"
  26:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "sysclk/cy_sysclk.h"
  27:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "systick/cy_systick.h"
  28:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  29:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CY_NEED_CYCLOCKSTARTUPERROR 1
  30:Generated_Source\PSoC6/cyfitter_cfg.c **** #include "syspm/cy_syspm.h"
  31:Generated_Source\PSoC6/cyfitter_cfg.c **** 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 2


  32:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  33:Generated_Source\PSoC6/cyfitter_cfg.c **** #if defined(__GNUC__) || defined(__ARMCC_VERSION)
  34:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYPACKED 
  35:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYPACKED_ATTR __attribute__ ((packed))
  36:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYALIGNED __attribute__ ((aligned))
  37:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CY_CFG_UNUSED __attribute__ ((unused))
  38:Generated_Source\PSoC6/cyfitter_cfg.c ****     #ifndef CY_CFG_SECTION
  39:Generated_Source\PSoC6/cyfitter_cfg.c ****         #define CY_CFG_SECTION __attribute__ ((section(".psocinit")))
  40:Generated_Source\PSoC6/cyfitter_cfg.c ****     #endif
  41:Generated_Source\PSoC6/cyfitter_cfg.c ****     
  42:Generated_Source\PSoC6/cyfitter_cfg.c ****     #if defined(__ARMCC_VERSION)
  43:Generated_Source\PSoC6/cyfitter_cfg.c ****         #define CY_CFG_MEMORY_BARRIER() __memory_changed()
  44:Generated_Source\PSoC6/cyfitter_cfg.c ****     #else
  45:Generated_Source\PSoC6/cyfitter_cfg.c ****         #define CY_CFG_MEMORY_BARRIER() __sync_synchronize()
  46:Generated_Source\PSoC6/cyfitter_cfg.c ****     #endif
  47:Generated_Source\PSoC6/cyfitter_cfg.c ****     
  48:Generated_Source\PSoC6/cyfitter_cfg.c **** #elif defined(__ICCARM__)
  49:Generated_Source\PSoC6/cyfitter_cfg.c ****     #include <intrinsics.h>
  50:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  51:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYPACKED __packed
  52:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYPACKED_ATTR 
  53:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYALIGNED _Pragma("data_alignment=4")
  54:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CY_CFG_UNUSED _Pragma("diag_suppress=Pe177")
  55:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CY_CFG_SECTION _Pragma("location=\".psocinit\"")
  56:Generated_Source\PSoC6/cyfitter_cfg.c ****     
  57:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CY_CFG_MEMORY_BARRIER() __DMB()
  58:Generated_Source\PSoC6/cyfitter_cfg.c ****     
  59:Generated_Source\PSoC6/cyfitter_cfg.c **** #else
  60:Generated_Source\PSoC6/cyfitter_cfg.c ****     #error Unsupported toolchain
  61:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif
  62:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  63:Generated_Source\PSoC6/cyfitter_cfg.c **** #ifndef CYCODE
  64:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYCODE
  65:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif
  66:Generated_Source\PSoC6/cyfitter_cfg.c **** #ifndef CYDATA
  67:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYDATA
  68:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif
  69:Generated_Source\PSoC6/cyfitter_cfg.c **** #ifndef CYFAR
  70:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYFAR
  71:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif
  72:Generated_Source\PSoC6/cyfitter_cfg.c **** #ifndef CYXDATA
  73:Generated_Source\PSoC6/cyfitter_cfg.c ****     #define CYXDATA
  74:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif
  75:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  76:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  77:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
  78:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CYMEMZERO(void *s, size_t n);
  79:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
  80:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CYMEMZERO(void *s, size_t n)
  81:Generated_Source\PSoC6/cyfitter_cfg.c **** {
  82:Generated_Source\PSoC6/cyfitter_cfg.c **** 	(void)memset(s, 0, n);
  83:Generated_Source\PSoC6/cyfitter_cfg.c **** }
  84:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
  85:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CYCONFIGCPY(void *dest, const void *src, size_t n);
  86:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
  87:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CYCONFIGCPY(void *dest, const void *src, size_t n)
  88:Generated_Source\PSoC6/cyfitter_cfg.c **** {
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 3


  89:Generated_Source\PSoC6/cyfitter_cfg.c **** 	(void)memcpy(dest, src, n);
  90:Generated_Source\PSoC6/cyfitter_cfg.c **** }
  91:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
  92:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CYCONFIGCPYCODE(void *dest, const void *src, size_t n);
  93:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
  94:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CYCONFIGCPYCODE(void *dest, const void *src, size_t n)
  95:Generated_Source\PSoC6/cyfitter_cfg.c **** {
  96:Generated_Source\PSoC6/cyfitter_cfg.c **** 	(void)memcpy(dest, src, n);
  97:Generated_Source\PSoC6/cyfitter_cfg.c **** }
  98:Generated_Source\PSoC6/cyfitter_cfg.c **** 
  99:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 100:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 101:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 102:Generated_Source\PSoC6/cyfitter_cfg.c **** /* Clock startup error codes                                                   */
 103:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CYCLOCKSTART_NO_ERROR    0u
 104:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CYCLOCKSTART_XTAL_ERROR  1u
 105:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CYCLOCKSTART_32KHZ_ERROR 2u
 106:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CYCLOCKSTART_PLL_ERROR   3u
 107:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CYCLOCKSTART_FLL_ERROR   4u
 108:Generated_Source\PSoC6/cyfitter_cfg.c **** #define CYCLOCKSTART_WCO_ERROR   5u
 109:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 110:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 111:Generated_Source\PSoC6/cyfitter_cfg.c **** #ifdef CY_NEED_CYCLOCKSTARTUPERROR
 112:Generated_Source\PSoC6/cyfitter_cfg.c **** /*******************************************************************************
 113:Generated_Source\PSoC6/cyfitter_cfg.c **** * Function Name: CyClockStartupError
 114:Generated_Source\PSoC6/cyfitter_cfg.c **** ********************************************************************************
 115:Generated_Source\PSoC6/cyfitter_cfg.c **** * Summary:
 116:Generated_Source\PSoC6/cyfitter_cfg.c **** *  If an error is encountered during clock configuration (crystal startup error,
 117:Generated_Source\PSoC6/cyfitter_cfg.c **** *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
 118:Generated_Source\PSoC6/cyfitter_cfg.c **** *  the customer, this function will stop in an infinite loop.
 119:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 120:Generated_Source\PSoC6/cyfitter_cfg.c **** * Parameters:
 121:Generated_Source\PSoC6/cyfitter_cfg.c **** *   void
 122:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 123:Generated_Source\PSoC6/cyfitter_cfg.c **** * Return:
 124:Generated_Source\PSoC6/cyfitter_cfg.c **** *   void
 125:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 126:Generated_Source\PSoC6/cyfitter_cfg.c **** *******************************************************************************/
 127:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
 128:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CyClockStartupError(uint8 errorCode);
 129:Generated_Source\PSoC6/cyfitter_cfg.c **** CY_CFG_UNUSED
 130:Generated_Source\PSoC6/cyfitter_cfg.c **** static void CyClockStartupError(uint8 errorCode)
 131:Generated_Source\PSoC6/cyfitter_cfg.c **** {
  27              		.loc 1 131 0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              	.L2:
  35 0000 FEE7     		b	.L2
  36              		.cfi_endproc
  37              	.LFE187:
  38              		.size	CyClockStartupError, .-CyClockStartupError
  39 0002 C046     		.section	.text.ClockInit,"ax",%progbits
  40              		.align	2
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 4


  41              		.code	16
  42              		.thumb_func
  43              		.type	ClockInit, %function
  44              	ClockInit:
  45              	.LFB188:
 132:Generated_Source\PSoC6/cyfitter_cfg.c ****     /* To remove the compiler warning if errorCode not used.                */
 133:Generated_Source\PSoC6/cyfitter_cfg.c ****     errorCode = errorCode;
 134:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 135:Generated_Source\PSoC6/cyfitter_cfg.c ****     /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
 136:Generated_Source\PSoC6/cyfitter_cfg.c ****     /* we will end up here to allow the customer to implement something to  */
 137:Generated_Source\PSoC6/cyfitter_cfg.c ****     /* deal with the clock condition.                                       */
 138:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 139:Generated_Source\PSoC6/cyfitter_cfg.c **** #ifdef CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK
 140:Generated_Source\PSoC6/cyfitter_cfg.c ****     CY_CFG_Clock_Startup_ErrorCallback();
 141:Generated_Source\PSoC6/cyfitter_cfg.c **** #else
 142:Generated_Source\PSoC6/cyfitter_cfg.c ****     while(1) {}
 143:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif /* CY_CFG_CLOCK_STARTUP_ERROR_CALLBACK */
 144:Generated_Source\PSoC6/cyfitter_cfg.c **** }
 145:Generated_Source\PSoC6/cyfitter_cfg.c **** #endif
 146:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 147:Generated_Source\PSoC6/cyfitter_cfg.c **** static void ClockInit(void);
 148:Generated_Source\PSoC6/cyfitter_cfg.c **** static void ClockInit(void)
 149:Generated_Source\PSoC6/cyfitter_cfg.c **** {
  46              		.loc 1 149 0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 24
  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              		.loc 1 149 0
  51 0000 30B5     		push	{r4, r5, lr}
  52              		.cfi_def_cfa_offset 12
  53              		.cfi_offset 4, -12
  54              		.cfi_offset 5, -8
  55              		.cfi_offset 14, -4
  56 0002 87B0     		sub	sp, sp, #28
  57              		.cfi_def_cfa_offset 40
  58              	.LVL1:
  59              	.LBB42:
  60              	.LBB43:
  61              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sysclk/cy_sysclk.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \file cy_sysclk.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \version 1.20
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Provides an API declaration of the sysclk driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Copyright 2016-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The System Clock (SysClk) driver contains the API for configuring system and
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 5


  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * peripheral clocks. 
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The functions and other declarations used in this driver are in cy_sysclk.h. 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and declarations in the PDL. 
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Firmware uses the API to configure , enable, or disable a clock.
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * 
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The clock system includes a variety of resources that can vary per device, including:
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - Internal clock sources such as internal oscillators
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - External clock sources such as crystal oscillators or a signal on an I/O pin
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - Generated clocks such as an FLL, a PLL, and peripheral clocks
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Consult the Technical Reference Manual for your device for details of the 
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock system.
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The PDL defines clock system capabilities in:\n
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * devices\<family\>/<series\>/include\<series\>_config.h. (E.g.
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * devices/psoc6/include/psoc6_01_config.h).
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * User-configurable clock speeds are defined in the file system_<series>.h.
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * As an illustration of the clocking system, the following diagram shows the
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * PSoC 63 series clock tree. The actual tree may vary depending on the device series.
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Consult the Technical Reference Manual for your device for details.
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * ![](sysclk_tree.png)
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The sysclk driver supports multiple peripheral clocks, as well as the fast 
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock, slow clock, backup domain clock, timer clock, and pump clock. The API
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for any given clock contains the functions to manage that clock. Functions
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for clock measurement and trimming are also provided.
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_configuration Configuration Considerations
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The availability of clock functions depend on the availability of the chip
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * resources that support those functions. Consult the device TRM before
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * attempting to use these functions.
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * LPActive and LPSleep power modes limit the maximum clock frequency allowed
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * on the device. Refer to the SysPm driver and the TRM for details.
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_more_information More Information
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the technical reference manual (TRM) and the device datasheet.
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_MISRA MISRA-C Compliance
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * <table class="doxtable">
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>MISRA Rule</th>
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Rule Class (Required/Advisory)</th>
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Rule Description</th>
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Description of Deviation(s)</th>
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.3</td>
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A composite expression of the "essentially unsigned" type is being
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         cast to a different type category.</td>
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The value got from the bitfield physically cannot exceed the enumeration
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         that describes this bitfield. So, the code is safe by design.</td>
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 6


  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.4</td>
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A composite floating point expression is being cast to double, or unsigned.</td>
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Casting a floating-point calculation result to an integer.</td>
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>13.4</td>
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The controlling expression of a for statement shall not contain any objects of floating t
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Scanning through a list of floating point values: only greater_than/less_then checks are 
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         with floating point numbers, the loop counter is integer. </td>
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>16.7</td>
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The object addressed by the pointer parameter is not modified and so the pointer could be
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         type 'pointer to const'.</td>
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The callback function for system power management (SysPm) must be of generic callback typ
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         contains non-const pointer parameter.</td>
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * </table>
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_changelog Changelog
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * <table class="doxtable">
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td rowspan="4">1.20</td>
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Flattened the organization of the driver source code into the single 
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         source directory and the single include directory.
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     </td>
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Driver library directory-structure simplification.</td>
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated \ref Cy_SysClk_FllLocked function description</td>
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The SRSS_ver1 HW details clarification</td>
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Removed the following functions:
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_FllLostLock
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_WcoConfigureCsv
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         - Cy_SysClk_ClkHfConfigureCsv
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     </td>
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>No hardware support for the removed functions.</td>
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added register access layer. Use register access macros instead
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         of direct register access using dereferenced pointers.</td>
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Makes register access device-independent, so that the PDL does 
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         not need to be recompiled for each supported part number.</td>
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.11</td>
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated the following functions. Now they use a semaphore when 
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         try to read the status or configure the SysClk measurement counters:
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * Cy_SysClk_StartClkMeasurementCounters()
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 7


 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         * Cy_SysClk_ClkMeasurementCountersGetFreq()
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         Now Cy_SysClk_ClkMeasurementCountersGetFreq() returns zero value,
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         if during measurement device was in the Deep Sleep or partially
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         blocking flash operation occurred </td>
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added arbiter mechanism for correct usage of the SysClk measurement 
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         counters</td>
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.10.1</td>
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Renamed Power Management section to Low Power Callback section</td>
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Documentation update and clarification</td>
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td rowspan="5">1.10</td>
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated FLL parameter calculation</td>
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Support low frequency sources</td>
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added Cy_SysClk_PiloSetTrim() and Cy_SysclkPiloGetTrim() functions</td>
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Support PILO manual trims</td>
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Made Cy_SysClk_FllLostLock() function dependent on SRSS v1</td>
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Feature is not supported in SRSS v1</td>
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated Cy_SysClk_DeepSleepCallback() to save/restore both FLL and PLL settings</td>
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The function should return when the lock is established or a timeout has occurred</td>
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>General documentation updates</td>
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td></td>
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.0</td>
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Initial version</td>
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td></td>
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * </table>
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_macros           Macros
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_enums           General Enumerated Types
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_returns         Function return values
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_eco             External Crystal Oscillator (ECO)
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The External Crystal Oscillator (ECO) is a clock source that consists
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   of an oscillator circuit that drives an external crystal through its
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   dedicated ECO pins. The ECO is a source clock that can be used to
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   source one or more clock paths (Refer to \ref group_sysclk_path_src).
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These clock paths can then source the processors and peripherals in
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the device.
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 8


 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The ECO relies on the presence of an external crystal. The pins
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   connected to this crystal must be configured to operate in analog
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   drive mode with HSIOM connection set to GPIO control (HSIOM_SEL_GPIO).
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_eco_funcs       Functions
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_path_src           Clock Path Source
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Clock paths are a series of multiplexers that allow a source clock
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   to drive multiple clocking resources down the chain. These paths are
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   used for active domain clocks that are not operational during chip 
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   deep-sleep, hibernate and off modes. Illustrated below is a diagram
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   of the clock paths for the PSoC 63 series, showing the first three
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   clock paths. The source clocks for these paths are highlighted in
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the red box.
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - IMO: 8 MHz Internal Main Oscillator (Default)
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - EXTCLK: External clock (signal brought in through dedicated pins)
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - ECO: External Crystal Oscillator (requires external crystal on dedicated pins)
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - ALTHF: Select on-chip signals (e.g. BLE ECO)
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - Digital Signal (DSI): Digital signal from a UDB source
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some clock paths such as path 0 and path 1 have additional resources
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   that can be utilized to provide a higher frequency clock. For example, 
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   path 0 source clock can be used as the reference clock for the FLL and 
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   path 1 source clock can be used as the reference clock for the PLL.
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_path_source.png)
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note The PDL driver cannot configure a clock path to use Digital Signal
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Interconnect (DSI) outputs as sources. This must be done through DSI
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   configuration tool such as PSoC Creator.
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_path_src_funcs     Functions
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_path_src_enums     Enumerated Types
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_fll             Frequency Locked Loop (FLL)
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The FLL is a clock generation circuit that can be used to produce a
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   higher frequency clock from a reference clock. The output clock exhibits
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   some characteristics of the reference clock such as the accuracy of the
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   source. However other attributes such as the clock phase are not preserved.
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The FLL is similar in purpose to a (Phase locked loop) PLL but they are
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   not equivalent.
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - They may have different frequency ranges.
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL starts up (locks) faster and consumes less current than the PLL.
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL accepts a source clock with lower frequency than PLL, such as the WCO (32 KHz). 
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL does not lock phase. The hardware consist of a counter with a
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     current-controlled oscillator (CCO). The counter counts the number of output
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     clock edges in a reference clock period and adjusts the CCO until the
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     expected ratio is achieved (locked). After initial lock, the CCO is
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     adjusted dynamically to keep the ratio within tolerance. The lock tolerance
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     is user-adjustable.
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_fll.png)
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver supports two models for configuring the FLL. The first
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 9


 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   model is to call the Cy_SysClk_FllConfigure() function, which calculates the 
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   necessary parameters for the FLL at run-time. This may be necessary for dynamic
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   run-time changes to the FLL. However this method is slow as it needs to perform 
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the calculation before configuring the FLL. The other model is to call 
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_FllManualConfigure() function with pre-calculated parameter values. 
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This method is faster but requires prior knowledge of the necessary parameters.
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the device TRM for the FLL calculation equations.
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_funcs       Functions
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_structs     Data Structures
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_enums       Enumerated Types
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pll             Phase Locked Loop (PLL)
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PLL is a clock generation circuit that can be used to produce a
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   higher frequency clock from a reference clock. The output clock exhibits
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   characteristics of the reference clock such as the accuracy of the source
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and its phase. The PLL is similar in purpose to a (Frequency locked loop) FLL
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   but they are not equivalent.
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - They may have different frequency ranges.
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The PLL starts up more slowly and consumes more current than the FLL.
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The PLL requires a higher frequency source clock than PLL. 
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_pll.png)
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver supports two models for configuring the PLL. The first
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   model is to call the Cy_SysClk_PllConfigure() function, which calculates the 
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   necessary parameters for the PLL at run-time. This may be necessary for dynamic
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   run-time changes to the PLL. However this method is slow as it needs to perform 
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the calculation before configuring the PLL. The other model is to call 
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_PllManualConfigure() function with pre-calculated parameter values. 
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This method is faster but requires prior knowledge of the necessary parameters.
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the device TRM for the PLL calculation equations.
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pll_funcs       Functions
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pll_structs     Data Structures
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_ilo             Internal Low-Speed Oscillator (ILO)
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The ILO operates with no external components and outputs a stable clock at
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   32.768 kHz nominal. The ILO is relatively low power and low accuracy. It is 
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   available in all power modes and can be used as a source for the Backup domain clock.
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   To ensure the ILO remains active in Hibernate mode, and across power-on-reset
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (POR) or brown out detect (BOD), firmware must call Cy_SysClk_IloHibernateOn(). 
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Additionally, the ILO clock can be trimmed to +/- 1.5% of nominal frequency using
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a higher precision clock source. Use the \ref group_sysclk_calclk API to measure 
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the current ILO frequency before trimming.
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note The ILO is always the source clock for the \ref group_wdt. Therefore:
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The WDT must be unlocked when making an ILO function call in the PDL
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - It is recommended to always have the ILO enabled
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_ilo_funcs       Functions
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 10


 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pilo            Precision Internal Low-Speed Oscillator (PILO)
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   PILO provides a higher accuracy 32.768 kHz clock than the \ref group_sysclk_ilo "ILO".
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   When periodically calibrated using a high-accuracy clock such as the
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_eco "ECO", the PILO can achieve 250 ppm accuracy of nominal frequency.
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PILO is capable of operating in device Active, Sleep and Deep-Sleep power modes. 
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   It is not available in Hibernate mode.
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PILO can be used as a source for the \ref group_sysclk_clk_lf. However,
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   because PILO is disabled in Hibernate mode, RTC timers cannot operate in this mode
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   when clocked using the PILO. Instead, either the \ref group_sysclk_ilo "ILO" or
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO" should be used when hibernate operation is required. 
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Periodic calibration to a high-accuracy clock (such as ECO) is required to
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   maintain accuracy. The application should use the functions described in the 
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_calclk API to measure the current PILO frequency before trimming.
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pilo_funcs      Functions
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_calclk          Clock Measurement
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These functions measure the frequency of a specified clock relative to a
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   reference clock. They are typically called in the following order:
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   1. Specify the measured clock, the count, and the reference clock
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   2. Start the counters
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   3. Wait for the measurement counter to finish counting
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   4. Retrieve the measured frequency
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note These functions may also be used as part of a clock trimming
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   process. Refer to the \ref group_sysclk_trim "Clock Trim" API.
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_calclk_funcs    Functions
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_calclk_enums    Enumerated Types
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_trim            Clock Trim (ILO, PILO)
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These functions perform a single trim operation on the ILO or PILO. Each
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   function's parameter is the actual frequency of the clock. To measure the
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   frequency, use the functions described in the \ref group_sysclk_calclk API.
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   To trim the clock as close as possible to the target frequency, multiple
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   calls to the trim function may be needed. A typical usage example is to:
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   1. Call the clock measurement functions to get the actual frequency of the clock
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   2. Call the trim function, passing in the measured frequency
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   3. Repeat the above until the trim function reports that the clock is trimmed to within limits.
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_trim_funcs      Functions
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pm              Low Power Callback
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Entering and exiting low power modes require compatible clock configurations
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   to be set before entering low power and restored upon wake-up and exit. The
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SysClk driver provides a Cy_SysClk_DeepSleepCallback() function to support
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   deep-sleep mode entry. 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 11


 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This function can be called either by itself before initiating low-power mode
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   entry or it can be used in conjunction with the SysPm driver as a registered 
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   callback. To do so, register this function as a callback before calling 
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysPm_DeepSleep(). Specify \ref CY_SYSPM_DEEPSLEEP as the callback type, 
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and call Cy_SysPm_RegisterCallback().
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note If the FLL or PLL source is the ECO, this function must be called.
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pm_funcs        Functions
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_wco             Watch Crystal Oscillator (WCO)
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The WCO is a highly accurate 32.768 kHz clock source capable of operating
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   in all power modes (excluding the Off mode). It is the primary clock source for
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the backup domain clock, which is used by the real-time clock (RTC). The 
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   WCO can also be used as a source for the low-frequency clock to support other
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   low power mode peripherals.
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The WCO requires the configuration of the dedicated WCO pins (SRSS_WCO_IN_PIN,
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SRSS_WCO_OUT_PIN). These must be configured as Analog Hi-Z drive modes and the
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   HSIOM selection set to GPIO. The WCO can also be used in bypass mode, where
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   an external 32.768 kHz square wave is brought in directly through the 
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SRSS_WCO_OUT_PIN pin.
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some devices support a built-in clock supervisor (CSV) in the WCO. The clock
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   supervisor detects if the WCO has been lost; that is, the WCO is no longer 
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   producing clock pulses. The CSV does this by checking to ensure there is at 
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   least one WCO clock pulse within a certain time window. The ILO or PILO can be
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the supervising clock. Firmware can configure the CSV to trigger a fault,
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a reset, or both after specified cycles of the supervising clock.
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_funcs       Functions
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_structs     Data Structures
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_enums       Enumerated Types
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_hf          High-Frequency Clocks
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Multiple high frequency clocks (CLK_HF) are available in the device. For example,
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   PSoC 63 series has five high-frequency root clocks. Each CLK_HF has a particular
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   connection and chip-specific destination on the device.
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |Name     |Description                                             |
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |:--------|:-------------------------------------------------------|
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[0]| Root clock for CPUs, PERI, and AHB infrastructure      |
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[1]| Root clock for the PDM/PCM and I2S audio subsystem     |
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[2]| Root clock for the Serial Memory Interface subsystem   |
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[3]| Root clock for USB communications                      |
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[4]| Clock output on clk_ext pin (when used as an output)   |
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_hf.png)
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Note this is a particular example. The actual tree may vary depending on the device series.
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the Technical Reference Manual for your device for details.
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 12


 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   High frequency clocks are sourced by path clocks, which should be configured
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   first. An exception to this rule is CLK_HF[0], which cannot be disabled. 
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This divided clock drives the core processors and the peripherals in the system.
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   In order to update its clock source, CLK_HF[0] source must be selected without
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   disabling the clock.
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_hf_dist.png)
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some devices support a clock supervisor (CSV) for each root clock. These
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   can detect frequency loss, or monitor that the clock frequency stays within
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a specified range. The possible supervising clocks are IMO, ECO, or ALTHF. 
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Loss detection and frequency monitoring can be enabled or disabled independently.
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Each has its own programmable action that occurs on detection of an error.
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_funcs    Functions
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_structs  Data Structures
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_enums    Enumerated Types
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_fast        Fast Clock
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The fast clock drives the "fast" processor (e.g. Cortex-M4 processor in PSoC 6).
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock is sourced by CLK_HF[0] (\ref group_sysclk_clk_hf "HF Clocks").
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   A divider value of 1~256 can be used to further divide the CLK_HF[0] to a
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   desired clock speed for the processor.
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_fast.png)
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_fast_funcs  Functions
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_peri        Peripheral Clock
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The peripheral clock is a divided clock of CLK_HF0 (\ref group_sysclk_clk_hf "HF Clocks").
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   It is the source clock for the \ref group_sysclk_clk_slow, and most active domain
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   peripheral clocks (\ref group_sysclk_clk_peripheral). A divider value of 1~256 
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   can be used to further divide the CLK_HF[0] to a desired clock speed for the peripherals.
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_peri.png)
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peri_funcs  Functions
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_peripheral  Peripherals Clock Dividers
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   There are multiple peripheral clock dividers that, in effect, create 
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   multiple separate peripheral clocks. The available dividers vary per device 
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   series. As an example, for the PSoC 63 series there are 29 dividers:
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - eight 8-bit dividers
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - sixteen 16-bit dividers
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - four fractional 16.5-bit dividers (16 integer bits, 5 fractional bits)
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - one fractional 24.5-bit divider (24 integer bits, 5 fractional bits)
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The 8-bit and 16-bit dividers are integer dividers. A divider value of 1 
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   means the output frequency matches the input frequency (that is, there is
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   no change). Otherwise the frequency is divided by the value of the divider.
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   For example, if the input frequency is 50 MHz, and the divider is value 10,
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the output frequency is 5 MHz.
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 13


 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The five fractional bits supports further precision in 1/32nd increments. For
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   example, a divider with an integer value of 3 and a fractional value of
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   4 (4/32) results in a divider of 3.125. Fractional dividers are useful when
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a high-precision clock is required, for example, for a UART/SPI serial
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   interface.
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_peri_divs.png)
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Each peripheral can connect to any one of the programmable dividers. A
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   particular peripheral clock divider can drive multiple peripherals.
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver also supports phase aligning two peripheral clock dividers using
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_PeriphEnablePhaseAlignDivider(). Alignment works for both integer
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and fractional dividers. The divider to which a second divider is aligned
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   must already be enabled.
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peripheral_funcs Functions
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peripheral_enums Enumerated Types
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_slow        Slow Clock
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The slow clock is the source clock for the "slow" processor (e.g. Cortex-M0+ in PSoC 6).
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock is a divided version of the \ref group_sysclk_clk_peri, which in turn is 
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a divided version of CLK_HF[0] (\ref group_sysclk_clk_hf "HF Clocks"). A divider 
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   value of 1~256 can be used to further divide the Peri clock to a desired clock speed
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   for the processor.
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_slow.png)
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_slow_funcs  Functions
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_lf          Low-Frequency Clock
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The low-frequency clock is the source clock for the \ref group_mcwdt
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and can be the source clock for \ref group_sysclk_clk_bak, which drives the
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_rtc.
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The low-frequency clock has three possible source clocks:
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_ilo "ILO", \ref group_sysclk_pilo "PILO", and
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO".
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_lf.png)
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_lf_funcs    Functions
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_lf_enums    Enumerated Types
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_timer       Timer Clock
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The timer clock can be a source for the alternative clock driving 
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the \ref group_arm_system_timer. It can also be used as a reference clock 
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   for a counter in the \ref group_energy_profiler "Energy Profiler".
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The timer clock is a divided clock of either the IMO or CLK_HF[0]
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (\ref group_sysclk_clk_hf "HF Clocks").
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_timer_funcs Functions
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 14


 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_timer_enums Enumerated Types
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_pump        Pump Clock
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The pump clock is a clock source used to provide analog precision in low voltage
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   applications. Depending on the usage scenario, it may be required to drive the
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   internal voltage pump for the Continuous Time Block mini (CTBm) in the analog 
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   subsystem. The pump clock is a divided clock of one of the clock paths 
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (\ref group_sysclk_path_src).
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_pump_funcs  Functions
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_pump_enums  Enumerated Types
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_bak         Backup Domain Clock
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The backup domain clock drives the \ref group_rtc.
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock has two possible source clocks: \ref group_sysclk_wco "WCO"
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   or the \ref group_sysclk_clk_lf. In turn the low frequency clock is sourced by
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_ilo "ILO", \ref group_sysclk_pilo "PILO", or
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO". Typically the ILO is not suitable as an RTC source,
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   because of its low accuracy. However the ILO does operate in hibernate mode and
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   may be used as an alternative to the WCO with a tradeoff in precision.
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_bak_funcs   Functions
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_bak_enums   Enumerated Types
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if !defined(CY_SYSCLK_H)
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_H
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include <stdbool.h>
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_device.h"
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_device_headers.h"
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_syslib.h"
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_syspm.h"
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if defined(__cplusplus)
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** extern "C" {
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #endif /* __cplusplus */
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_macros
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Driver major version */
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_DRV_VERSION_MAJOR   1
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Driver minor version */
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_DRV_VERSION_MINOR   20
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Sysclk driver identifier */
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ID   CY_PDL_DRV_ID(0x12U)
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_macros */
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_returns
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 15


 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Defines general-purpose function return values. */
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_SUCCESS       = 0u, /**< Command completed with no errors */
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_BAD_PARAM     = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 1U), /**< Invalid function inpu
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_TIMEOUT       = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 2U), /**< Timeout occurred */
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_INVALID_STATE = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 3U)  /**< Clock is in an invali
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_sysclk_status_t;
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_returns */
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \cond INTERNAL */
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* Calculate a / b with rounding to the nearest integer. a and b must have the same sign. */
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_DIV_ROUND(a, b) (((a) + ((b) / 2u)) / (b))
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* Calculate a / b with rounding up if remainder != 0. a and b must both be positive. */
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_DIV_ROUNDUP(a, b) ((((a) - 1U) / (b)) + 1U)
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \endcond */
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    ECO SECTION    ============================ */
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_macros
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_ecostatus ECO status
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Constants used for expressing ECO status.
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_AMPLITUDE  0UL /**< \brief ECO does not have sufficient amplitude */
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_INACCURATE 1UL /**< \brief ECO may not be meeting accuracy and duty cycle
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_STABLE     2UL /**< \brief ECO has fully stabilized */
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} */
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_macros */
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_eco_funcs
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_EcoConfigure(uint32_t freq, uint32_t cLoad, uint32_t esr, uint32_t 
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_EcoEnable(uint32_t timeoutus);
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_EcoDisable(void);
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_EcoGetStatus(void);
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_EcoDisable
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the external crystal oscillator (ECO). This function should not be
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * called if the ECO is sourcing clkHf[0].
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 16


 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_EcoDisable
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_EcoDisable(void)
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_ECO_CONFIG &= (uint32_t)~_VAL2FLD(SRSS_CLK_ECO_CONFIG_ECO_EN, 1U); /* 0 = disable */
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_EcoGetStatus
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the current status of the external crystal oscillator (ECO).
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_AMPLITUDE = ECO does not have sufficient amplitude<br>
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_INACCURATE = ECO has sufficient amplitude but may not be meeting accuracy and d
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_STABLE = ECO has fully stabilized
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_EcoGetStatus
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_EcoGetStatus(void)
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t retVal = (SRSS_CLK_ECO_STATUS & (SRSS_CLK_ECO_STATUS_ECO_OK_Msk | SRSS_CLK_ECO_STATUS_
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* if ECO is not ready, just report the ECO_OK bit. Otherwise report 2 = ECO ready */
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((0UL == (retVal & SRSS_CLK_ECO_STATUS_ECO_READY_Msk)) ? retVal : CY_SYSCLK_ECOSTAT_STAB
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_eco_funcs */
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ====================    INPUT MULTIPLEXER SECTION    ===================== */
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_path_src_enums
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Input multiplexer clock sources
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_IMO    =     0U, /**< Select the IMO as the output of the path mux */
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_EXT    =     1U, /**< Select the EXT as the output of the path mux */
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ECO    =     2U, /**< Select the ECO as the output of the path mux */
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ALTHF  =     3U, /**< Select the ALTHF as the output of the path mux.
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the ALTHF clock source is available on use
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_DSIMUX =     4U, /**< Select the DSI MUX output as the output of the path 
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_DSI    = 0x100U, /**< Select a DSI signal (0 - 15) as the output of the DS
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the DSI clock sources are available on use
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ILO    = 0x110U, /**< Select the ILO (16) as the output of the DSI mux and
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 17


 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_WCO    = 0x111U, /**< Select the WCO (17) as the output of the DSI mux and
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ALTLF  = 0x112U, /**< Select the ALTLF (18) as the output of the DSI mux a
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the ALTLF clock sources in available on us
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_PILO   = 0x113U  /**< Select the PILO (19) as the output of the DSI mux an
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            *   Make sure the PILO clock sources in available on use
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            */
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkpath_in_sources_t;
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_path_src_enums */
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_path_src_funcs
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_ClkPathSetSource(uint32_t clkPath, cy_en_clkpath_in_sources_t sourc
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_clkpath_in_sources_t Cy_SysClk_ClkPathGetSource(uint32_t clkPath);
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_path_src_funcs */
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    FLL SECTION    ============================ */
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_enums
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** FLL and PLL output mode.
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See registers CLK_FLL_CONFIG3 and CLK_PLL_CONFIG0, bits BYPASS_SEL.
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_AUTO   = 0U, /**< Output FLL/PLL input source when not locked, and FLL/
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_AUTO1  = 1U, /**< Same as AUTO */
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_INPUT  = 2U, /**< Output FLL/PLL input source regardless of lock status
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_OUTPUT = 3U  /**< Output FLL/PLL output regardless of lock status. This
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_fll_pll_output_mode_t;
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** FLL current-controlled oscillator (CCO) frequency ranges.
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See register CLK_FLL_CONFIG4, bits CCO_RANGE.
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE0, /**< Target frequency is in range  48 -  64 MHz. */
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE1, /**< Target frequency is in range  64 -  85 MHz. */
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE2, /**< Target frequency is in range  85 - 113 MHz. */
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE3, /**< Target frequency is in range 113 - 150 MHz. */
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE4  /**< Target frequency is in range 150 - 200 MHz. */
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_fll_cco_ranges_t;
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_enums */
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_structs
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for manual configuration of FLL.
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 18


 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    fllMult;         /**< CLK_FLL_CONFIG  register, FLL_MULT bits */
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    refDiv;          /**< CLK_FLL_CONFIG2 register, FLL_REF_DIV bits */
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_cco_ranges_t      ccoRange;        /**< CLK_FLL_CONFIG4 register, CCO_RANGE bits */
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        enableOutputDiv; /**< CLK_FLL_CONFIG  register, FLL_OUTPUT_DIV bit 
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    lockTolerance;   /**< CLK_FLL_CONFIG2 register, LOCK_TOL bits */
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     igain;           /**< CLK_FLL_CONFIG3 register, FLL_LF_IGAIN bits *
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     pgain;           /**< CLK_FLL_CONFIG3 register, FLL_LF_PGAIN bits *
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    settlingCount;   /**< CLK_FLL_CONFIG3 register, SETTLING_COUNT bits
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode;      /**< CLK_FLL_CONFIG3 register, BYPASS_SEL bits */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    cco_Freq;        /**< CLK_FLL_CONFIG4 register, CCO_FREQ bits */
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_fll_manual_config_t;
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_structs */
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_funcs
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllConfigure(uint32_t inputFreq, uint32_t outputFreq, cy_en_fll_pll
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllManualConfigure(const cy_stc_fll_manual_config_t *config);
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** void Cy_SysClk_FllGetConfiguration(cy_stc_fll_manual_config_t *config);
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllEnable(uint32_t timeoutus);
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_FllLocked(void);
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_FllDisable(void);
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_FllLocked
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether the FLL is locked first time during FLL starting.
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Intended to be used with \ref Cy_SysClk_FllEnable with zero timeout.
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not locked<br>
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = locked
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The unlock occurrence may appear during FLL normal operation, so this function 
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * is not recommended to check the FLL normal operation stability.
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_FllLocked
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_FllLocked(void)
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_FLL_STATUS_LOCKED, SRSS_CLK_FLL_STATUS));
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_FllDisable
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the FLL and the CCO.
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 19


 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the FLL is the source of CLK_HF0 and the CLK_HF0 frequency is decreasing.
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_FllDisable
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_FllDisable(void)
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_FLL_CONFIG3, SRSS_CLK_FLL_CONFIG3_BYPASS_SEL, CY_SYSCLK_FLLPLL_OUTPUT
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_FLL_CONFIG  &= ~SRSS_CLK_FLL_CONFIG_FLL_ENABLE_Msk;
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_FLL_CONFIG4 &= ~SRSS_CLK_FLL_CONFIG4_CCO_ENABLE_Msk;
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return CY_SYSCLK_SUCCESS;
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_funcs */
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    PLL SECTION    ============================ */
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pll_structs
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for configuration of a PLL.
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    inputFreq;  /**< frequency of PLL source, in Hz */
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    outputFreq; /**< frequency of PLL output, in Hz */
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        lfMode;     /**< CLK_PLL_CONFIG register, PLL_LF_MODE bit */
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode; /**< CLK_PLL_CONFIG register, BYPASS_SEL bits */
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_pll_config_t;
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for manual configuration of a PLL.
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     feedbackDiv;  /**< CLK_PLL_CONFIG register, FEEDBACK_DIV (P) bits *
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     referenceDiv; /**< CLK_PLL_CONFIG register, REFERENCE_DIV (Q) bits 
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     outputDiv;    /**< CLK_PLL_CONFIG register, OUTPUT_DIV bits */
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        lfMode;       /**< CLK_PLL_CONFIG register, PLL_LF_MODE bit */
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode;   /**< CLK_PLL_CONFIG register, BYPASS_SEL bits */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_pll_manual_config_t;
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pll_structs */
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pll_funcs
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllConfigure(uint32_t clkPath, const cy_stc_pll_config_t *config);
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 20


 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllManualConfigure(uint32_t clkPath, const cy_stc_pll_manual_config
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllGetConfiguration(uint32_t clkPath, cy_stc_pll_manual_config_t *c
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllEnable(uint32_t clkPath, uint32_t timeoutus);
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLocked(uint32_t clkPath);
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLostLock(uint32_t clkPath);
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PllDisable(uint32_t clkPath);
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllLocked
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether or not the selected PLL is locked.
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to check. 1 is the first PLL; 0 is invalid.
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not locked<br>
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = locked
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PllLocked
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLocked(uint32_t clkPath)
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkPath < CY_SRSS_NUM_PLL);
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_PLL_STATUS_LOCKED, SRSS_CLK_PLL_STATUS[clkPath]));
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllLostLock
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether or not the selected PLL lost its lock since the last time this
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * function was called. Clears the lost lock indicator.
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to check. 1 is the first PLL; 0 is invalid.
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = did not lose lock<br>
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = lost lock
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PllLostLock
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLostLock(uint32_t clkPath)
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkPath < CY_SRSS_NUM_PLL);
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool retVal = _FLD2BOOL(SRSS_CLK_PLL_STATUS_UNLOCK_OCCURRED, SRSS_CLK_PLL_STATUS[clkPath]);
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* write a 1 to clear the unlock occurred bit */
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PLL_STATUS[clkPath] = SRSS_CLK_PLL_STATUS_UNLOCK_OCCURRED_Msk;
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 21


 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllDisable
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the selected PLL.
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to disable. 1 is the first PLL; 0 is invalid.
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - PLL successfully disabled<br>
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_BAD_PARAM - invalid clock path number
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the PLL is the source of CLK_HF0 and the CLK_HF0 frequency is increasing.
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the PLL is the source of CLK_HF0 and the CLK_HF0 frequency is decreasing.
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PllDisable
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PllDisable(uint32_t clkPath)
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     clkPath--; /* to correctly access PLL config and status registers structures */
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (clkPath < CY_SRSS_NUM_PLL)
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* First bypass PLL */
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_PLL_CONFIG[clkPath], SRSS_CLK_PLL_CONFIG_BYPASS_SEL, CY_SYSCLK_FL
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* Wait at least 6 PLL clock cycles */
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         Cy_SysLib_DelayUs(1U);
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         /* And now disable the PLL itself */
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_PLL_CONFIG[clkPath] &= ~SRSS_CLK_PLL_CONFIG_ENABLE_Msk;
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pll_funcs */
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    ILO SECTION    ============================ */
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_ilo_funcs
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloEnable(void);
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_IloDisable(void);
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloHibernateOn(bool on);
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 22


 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloEnable
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the ILO.
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_IloEnable
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloEnable(void)
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_ILO_CONFIG |= SRSS_CLK_ILO_CONFIG_ENABLE_Msk;
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloDisable
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the ILO. ILO can't be disabled if WDT is enabled.
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - ILO successfully disabled<br>
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_INVALID_STATE - Cannot disable the ILO if the WDT is enabled.
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Do not call this function if the WDT is enabled, because the WDT is clocked by
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the ILO.
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_IloDisable
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_IloDisable(void)
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_INVALID_STATE;
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (!_FLD2BOOL(SRSS_WDT_CTL_WDT_EN, SRSS_WDT_CTL)) /* if disabled */
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ILO_CONFIG &= ~SRSS_CLK_ILO_CONFIG_ENABLE_Msk;
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return retVal;
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloHibernateOn
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Controls whether the ILO stays on during a hibernate, or through an XRES or
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * brown-out detect (BOD) event.
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param on
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = ILO stays on during hibernate or across XRES/BOD.<br> 
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = ILO turns off for hibernate or XRES/BOD.
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 23


1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note Writes to the register/bit are ignored if the watchdog (WDT) is locked.
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_IloHibernateOn
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloHibernateOn(bool on)
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_ILO_CONFIG, SRSS_CLK_ILO_CONFIG_ILO_BACKUP, (uint32_t)on);
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_ilo_funcs */
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    PILO SECTION    =========================== */
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pilo_funcs
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloEnable(void);
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloDisable(void);
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloSetTrim(uint32_t trimVal);
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PiloGetTrim(void);
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloEnable
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the PILO. 
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note This function blocks for 1 millisecond between enabling the PILO and 
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * releasing the PILO reset.
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PiloEnable
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloEnable(void)
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG |= _VAL2FLD(SRSS_CLK_PILO_CONFIG_PILO_EN, 1U); /* 1 = enable */
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     Cy_SysLib_Delay(1U/*msec*/);
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* release the reset and enable clock output */
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG |= SRSS_CLK_PILO_CONFIG_PILO_RESET_N_Msk |
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                             SRSS_CLK_PILO_CONFIG_PILO_CLK_EN_Msk;
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloDisable
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the PILO.
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PiloDisable
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 24


1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloDisable(void)
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* Clear PILO_EN, PILO_RESET_N, and PILO_CLK_EN bitfields. This disables the
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****        PILO and holds the PILO in a reset state. */
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_PILO_CONFIG &= (uint32_t)~(SRSS_CLK_PILO_CONFIG_PILO_EN_Msk      |
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                         SRSS_CLK_PILO_CONFIG_PILO_RESET_N_Msk |
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                         SRSS_CLK_PILO_CONFIG_PILO_CLK_EN_Msk);
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloSetTrim
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the PILO trim bits, which adjusts the PILO frequency. This is typically
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * done after measuring the PILO frequency; see \ref Cy_SysClk_StartClkMeasurementCounters().
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PiloSetTrim
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloSetTrim(uint32_t trimVal)
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_PILO_CONFIG, SRSS_CLK_PILO_CONFIG_PILO_FFREQ, trimVal);
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloGetTrim
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the current PILO trim bits value.
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the Cy_SysClk_PiloSetTrim() function usage.
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PiloGetTrim(void)
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2VAL(SRSS_CLK_PILO_CONFIG_PILO_FFREQ, SRSS_CLK_PILO_CONFIG));
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pilo_funcs */
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ====================    CLOCK MEASUREMENT SECTION    ===================== */
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_calclk_enums
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Defines all possible clock sources. */
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_NC =            0U,
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ILO =           1U,
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_WCO =           2U,
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_BAK =           3U,
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 25


1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ALTLF =         4U,
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_LFCLK =         5U,
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_IMO =           6U,
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PILO =          8U,
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_FAST_CLKS =     0x100U,
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ECO =           0x101U,
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_EXT =           0x102U,
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ALTHF =         0x103U,
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_TIMERCLK =      0x104U,
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH_CLKS =     0x500U,
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH0 =         0x500U,
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH1 =         0x501U,
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH2 =         0x502U,
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH3 =         0x503U,
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH4 =         0x504U,
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH5 =         0x505U,
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH6 =         0x506U,
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH7 =         0x507U,
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH8 =         0x508U,
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH9 =         0x509U,
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH10 =        0x50AU,
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH11 =        0x50BU,
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH12 =        0x50CU,
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH13 =        0x50DU,
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH14 =        0x50EU,
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH15 =        0x50FU,
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHFS =        0x600U,
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF0 =        0x600U,
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF1 =        0x601U,
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF2 =        0x602U,
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF3 =        0x603U,
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF4 =        0x604U,
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF5 =        0x605U,
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF6 =        0x606U,
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF7 =        0x607U,
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF8 =        0x608U,
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF9 =        0x609U,
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF10 =       0x60AU,
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF11 =       0x60BU,
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF12 =       0x60CU,
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF13 =       0x60DU,
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF14 =       0x60EU,
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF15 =       0x60FU,
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_LAST_CLK =      0x610U
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_meas_clks_t;
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_calclk_enums */
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_calclk_funcs
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_StartClkMeasurementCounters(cy_en_meas_clks_t clock1, uint32_t coun
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_ClkMeasurementCountersDone(void);
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** uint32_t Cy_SysClk_ClkMeasurementCountersGetFreq(bool measuredClock, uint32_t refClkFreq);
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkMeasurementCountersDone
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 26


1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Checks if clock measurement counting is done, that is, counter1 has counted down
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * to zero. Call \ref Cy_SysClk_StartClkMeasurementCounters() before calling this function.
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Status of calibration counters:<br>
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = done<br>
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not done
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the Cy_SysClk_StartClkMeasurementCounters() function usage.
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_ClkMeasurementCountersDone(void)
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(SRSS_CLK_CAL_CNT1_CAL_COUNTER_DONE, SRSS_CLK_CAL_CNT1));
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_calclk_funcs */
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ==========================    TRIM SECTION    ============================ */
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_trim_funcs
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** int32_t Cy_SysClk_IloTrim(uint32_t iloFreq);
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** int32_t Cy_SysClk_PiloTrim(uint32_t piloFreq);
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_trim_funcs */
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ======================    POWER MANAGEMENT SECTION    ==================== */
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pm_funcs
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_syspm_status_t Cy_SysClk_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams, cy
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pm_funcs */
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    WCO SECTION    ============================ */
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_enums
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** WCO bypass modes */
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_NOT_BYPASSED = 0u, /**< WCO is not bypassed crystal is used */
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_BYPASSED = 1U      /**< WCO is bypassed external clock must be supplied  on XTAL 
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_wco_bypass_modes_t;
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 27


1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** WCO CSV supervisor clock selections */
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_ILO,   /**< WCO CSV supervisor clock source is the ILO */
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_ALTLF, /**< WCO CSV supervisor clock source is the alternate low-f
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_PILO   /**< WCO CSV supervisor clock source is the PILO */
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_wco_csv_supervisor_clock_t;
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Clock supervisor clock loss window. There must be one clock of the supervised
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock within this many clocks of the supervising clock.
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See registers CLK_CSV_HF_CTL and CLK_CSV_WCO_CTL, bitfield CSV_LOSS_WINDOW.
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_4_CYCLES =   0u, /**< 1 clock must be seen within 4 cycles of the supervisin
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_8_CYCLES =   1U, /**< 1 clock must be seen within 8 cycles of the supervisin
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_16_CYCLES =  2u, /**< 1 clock must be seen within 16 cycles of the supervisi
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_32_CYCLES =  3u, /**< 1 clock must be seen within 32 cycles of the supervisi
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_64_CYCLES =  4u, /**< 1 clock must be seen within 64 cycles of the supervisi
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_128_CYCLES = 5u, /**< 1 clock must be seen within 128 cycles of the supervis
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_256_CYCLES = 6u, /**< 1 clock must be seen within 256 cycles of the supervis
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_512_CYCLES = 7u  /**< 1 clock must be seen within 512 cycles of the supervis
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_csv_loss_window_t;
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Clock supervisor error actions. See register CLK_CSV_HF_CTL[CSV_FREQ_ACTION and CSV_LOSS_ACTION].
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_IGNORE = 0u,     /**< Ignore the error reported by the clock supervisor. */
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_FAULT = 1U,      /**< Trigger a fault when an error is reported by the cloc
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_RESET = 2u,      /**< Trigger a reset when an error is reported by the cloc
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_FAULT_RESET = 3u /**< Trigger a fault then reset when an error is reported 
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_csv_error_actions_t;
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_enums */
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_structs
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * This structure is used to configure the clock supervisor for the WCO.
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_wco_csv_supervisor_clock_t supervisorClock; /**< supervisor clock selection */
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableLossDetection;                         /**< 1= enabled, 0= disabled. Note that if lo
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_loss_window_t lossWindow;               /**< \ref cy_en_csv_loss_window_t */
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t lossAction;             /**< \ref cy_en_csv_error_actions_t */
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_wco_csv_config_t;
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_structs */
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_funcs
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 28


1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_WcoEnable(uint32_t timeoutus);
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_WcoOkay(void);
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoDisable(void);
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoBypass(cy_en_wco_bypass_modes_t bypass);
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoEnable
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the WCO.
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param timeoutus amount of time in microseconds to wait for the WCO to be ready.
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * If WCO is not ready, WCO is stopped. To avoid waiting for WCO ready set this to 0,
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and manually check if WCO is okay using \ref Cy_SysClk_WcoOkay.
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - WCO successfully enabled<br>
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_TIMEOUT - Timeout waiting for WCO to stabilize
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_WcoEnable
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_WcoEnable(uint32_t timeoutus)
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t rtnval = CY_SYSCLK_TIMEOUT;
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* first set the WCO enable bit */
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     BACKUP_CTL |= BACKUP_CTL_WCO_EN_Msk;
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* now do the timeout wait for STATUS, bit WCO_OK */
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     for (; (Cy_SysClk_WcoOkay() == false) && (0UL != timeoutus); timeoutus--)
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         Cy_SysLib_DelayUs(1U);
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (0UL != timeoutus)
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         rtnval = CY_SYSCLK_SUCCESS;
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (rtnval);
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoOkay
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the status of the WCO_OK bit.
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = okay<br>
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not okay
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_WcoOkay
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 29


1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_WcoOkay(void)
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2BOOL(BACKUP_STATUS_WCO_OK, BACKUP_STATUS));
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoDisable
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the WCO.
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_WcoDisable
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoDisable(void)
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     BACKUP_CTL &= (uint32_t)~BACKUP_CTL_WCO_EN_Msk;
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoBypass
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets whether the WCO is bypassed or not. If it is bypassed, then a 32-kHz clock
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * must be provided on the wco_out pin.
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param bypass \ref cy_en_wco_bypass_modes_t
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_WcoBypass
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoBypass(cy_en_wco_bypass_modes_t bypass)
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(BACKUP_CTL, BACKUP_CTL_WCO_BYPASS, bypass);
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_funcs */
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clkHf[n] SECTION    ========================= */
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_enums
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Selects which clkHf input, or root mux, to configure.
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See CLK_ROOT_SELECT registers, bits ROOT_MUX.
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkHfSetSource and \ref Cy_SysClk_ClkHfGetSource.
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH0  = 0U,  /**< clkHf input is Clock Path 0 */
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH1  = 1U,  /**< clkHf input is Clock Path 1 */
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 30


1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH2  = 2U,  /**< clkHf input is Clock Path 2 */
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH3  = 3U,  /**< clkHf input is Clock Path 3 */
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH4  = 4U,  /**< clkHf input is Clock Path 4 */
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH5  = 5U,  /**< clkHf input is Clock Path 5 */
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH6  = 6U,  /**< clkHf input is Clock Path 6 */
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH7  = 7U,  /**< clkHf input is Clock Path 7 */
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH8  = 8U,  /**< clkHf input is Clock Path 8 */
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH9  = 9U,  /**< clkHf input is Clock Path 9 */
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH10 = 10U, /**< clkHf input is Clock Path 10 */
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH11 = 11U, /**< clkHf input is Clock Path 11 */
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH12 = 12U, /**< clkHf input is Clock Path 12 */
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH13 = 13U, /**< clkHf input is Clock Path 13 */
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH14 = 14U, /**< clkHf input is Clock Path 14 */
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH15 = 15U, /**< clkHf input is Clock Path 15 */
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_in_sources_t;
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkHf divider values. See CLK_ROOT_SELECT registers, bits ROOT_DIV.
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkHfSetDivider and \ref Cy_SysClk_ClkHfGetDivider.
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_NO_DIVIDE   = 0U,    /**< don't divide clkHf. */
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_2 = 1U,    /**< divide clkHf by 2 */
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_4 = 2U,    /**< divide clkHf by 4 */
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_8 = 3U     /**< divide clkHf by 8 */
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_dividers_t;
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkHf clock supervisor input sources. See register CLK_CSV_HF_CTL[CSV_MUX].
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_IMO   = 0U,  /**< Supervising clock is the IMO. */
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_EXT   = 1U,  /**< Supervising clock is the external clock */
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_ALTHF = 2U   /**< Supervising clock is clk_althf */
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_csv_supervisor_clock_t;
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_enums */
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_structs
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{SupervisingWindow
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * This structure is used to configure the clock supervisor for clkHf.
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_clkhf_csv_supervisor_clock_t supervisorClock; /**< \ref cy_en_clkhf_csv_supervisor_clock_
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t supervisingWindow;                         /**< Number of supervising clock cycles */
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableFrequencyFaultDetection;                 /**< 1= enabled, 0= disabled */
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t frequencyLowerLimit;                       /**< Lowest frequency in kHz that supervise
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t frequencyUpperLimit;                       /**< Highest frequency in kHz that supervis
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t frequencyAction;          /**< \ref cy_en_csv_error_actions_t */
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableLossDetection;                           /**< 1= enabled, 0= disabled */
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_loss_window_t lossWindow;                 /**< \ref cy_en_csv_loss_window_t */
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 31


1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t lossAction;               /**< \ref cy_en_csv_error_actions_t */
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_clkhf_csv_config_t;
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_structs */
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_funcs
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfEnable(uint32_t clkHf);
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfDisable(uint32_t clkHf);
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetSource(uint32_t clkHf, cy_en_clkhf_in_sourc
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_in_sources_t Cy_SysClk_ClkHfGetSource(uint32_t clkHf);
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetDivider(uint32_t clkHf, cy_en_clkhf_divider
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_dividers_t Cy_SysClk_ClkHfGetDivider(uint32_t clkHf);
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfEnable
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the selected clkHf.
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf Selects which clkHf to enable.
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkHfEnable
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfEnable(uint32_t clkHf)
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (clkHf < CY_SRSS_NUM_HFROOT)
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ROOT_SELECT[clkHf] |= SRSS_CLK_ROOT_SELECT_ENABLE_Msk;
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfDisable
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the selected clkHf.
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf Selects which clkHf to enable.
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note clkHf[0] cannot be disabled.
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkHfDisable
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 32


1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfDisable(uint32_t clkHf)
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((0UL < clkHf) /* prevent CLK_HF0 disabling */
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****            && (clkHf < CY_SRSS_NUM_HFROOT))
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS_CLK_ROOT_SELECT[clkHf] &= ~SRSS_CLK_ROOT_SELECT_ENABLE_Msk;
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfSetSource
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Selects the source of the selected clkHf.
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf mux to configure.
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clkhf_in_sources_t
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is increasing.
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is decreasing.
1593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkHfSetSource
1596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetSource(uint32_t clkHf, cy_en_clkhf_in_sourc
1599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((clkHf < CY_SRSS_NUM_HFROOT) && (source <= CY_SYSCLK_CLKHF_IN_CLKPATH15))
1602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_ROOT_SELECT[clkHf], SRSS_CLK_ROOT_SELECT_ROOT_MUX, source);
1604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfGetSource
1611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the source of the selected clkHf.
1614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 33


1615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf to get the source of.
1616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkhf_in_sources_t
1618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkHfSetSource
1621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_in_sources_t Cy_SysClk_ClkHfGetSource(uint32_t clkHf)
1624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkHf < CY_SRSS_NUM_HFROOT);
1626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkhf_in_sources_t)(_FLD2VAL(SRSS_CLK_ROOT_SELECT_ROOT_MUX, SRSS_CLK_ROOT_SELECT[
1627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfSetDivider
1631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the pre-divider for a clkHf.
1634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf divider to configure.
1636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider \ref cy_en_clkhf_dividers_t
1638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note Also call \ref Cy_SysClk_ClkHfSetSource to set the clkHf source.
1642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling 
1645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * if it affects the CLK_HF0 frequency.
1646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is increasing.
1650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_HF0 frequency is decreasing.
1654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkHfSetDivider
1657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetDivider(uint32_t clkHf, cy_en_clkhf_divider
1660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((clkHf < CY_SRSS_NUM_HFROOT) && (divider <= CY_SYSCLK_CLKHF_DIVIDE_BY_8))
1663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_REG32_CLR_SET(SRSS_CLK_ROOT_SELECT[clkHf], SRSS_CLK_ROOT_SELECT_ROOT_DIV, divider);
1665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
1666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfGetDivider
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 34


1672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the pre-divider value for a clkHf.
1675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf to check divider of.
1677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkhf_dividers_t
1679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkHfSetDivider
1682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_dividers_t Cy_SysClk_ClkHfGetDivider(uint32_t clkHf)
1685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkHf < CY_SRSS_NUM_HFROOT);
1687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkhf_dividers_t)(_FLD2VAL(SRSS_CLK_ROOT_SELECT_ROOT_DIV, SRSS_CLK_ROOT_SELECT[cl
1688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_funcs */
1690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clk_fast SECTION    ========================= */
1694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_fast_funcs
1697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkFastSetDivider(uint8_t divider);
1700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkFastGetDivider(void);
1701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkFastSetDivider
1704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the fast clock, which sources the main processor.
1707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The source of this divider is clkHf[0].
1708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider divider value between 0 and 255.
1710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
1711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling.
1714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates before calling this function if
1717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_FAST frequency is increasing.
1718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
1720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref Cy_SysLib_SetWaitStates after calling this function if
1721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_FAST frequency is decreasing.
1722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkFastSetDivider
1725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkFastSetDivider(uint8_t divider)
1728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 35


1729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(CPUSS_CM4_CLOCK_CTL, CPUSS_CM4_CLOCK_CTL_FAST_INT_DIV, divider);
1730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkFastGetDivider
1734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the clock divider for the fast clock.
1737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value for the fast clock.
1739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
1740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkFastSetDivider
1743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkFastGetDivider(void)
1746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM4_CLOCK_CTL_FAST_INT_DIV, CPUSS_CM4_CLOCK_CTL));
1748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_fast_funcs */
1750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================    clk_peri SECTION    ========================== */
1754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peri_funcs
1757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPeriSetDivider(uint8_t divider);
1760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkPeriGetDivider(void);
1761:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1762:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1763:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPeriSetDivider
1764:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1765:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1766:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the peripheral clock tree. All peripheral clock
1767:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * dividers are sourced from this clock. Also the Cortex M0+ clock divider is
1768:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * sourced from this clock. The source of this divider is clkHf[0]
1769:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1770:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider divider value between 0 and 255
1771:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
1772:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1773:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
1774:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling.
1775:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1776:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1777:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkPeriSetDivider
1778:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1779:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1780:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPeriSetDivider(uint8_t divider)
1781:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1782:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(CPUSS_CM0_CLOCK_CTL, CPUSS_CM0_CLOCK_CTL_PERI_INT_DIV, divider);
1783:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1784:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1785:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 36


1786:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPeriGetDivider
1787:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1788:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1789:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the clock divider of the peripheral (peri) clock.
1790:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1791:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
1792:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
1793:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1794:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1795:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkPeriSetDivider
1796:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1797:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1798:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkPeriGetDivider(void)
1799:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1800:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM0_CLOCK_CTL_PERI_INT_DIV, CPUSS_CM0_CLOCK_CTL));
1801:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1802:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peri_funcs */
1803:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1804:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1805:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1806:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =====================    clk_peripherals SECTION    ====================== */
1807:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1808:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1809:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peripheral_enums
1810:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1811:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1812:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Programmable clock divider types */
1813:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1814:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1815:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_8_BIT    = 0U, /**< Divider Type is an 8 bit divider */
1816:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_16_BIT   = 1U, /**< Divider Type is a 16 bit divider */
1817:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_16_5_BIT = 2U, /**< Divider Type is a 16.5 bit fractional divider */
1818:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_24_5_BIT = 3U  /**< Divider Type is a 24.5 bit fractional divider */
1819:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_divider_types_t;
1820:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peripheral_enums */
1821:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1822:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1823:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peripheral_funcs
1824:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1825:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1826:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphSetDivider(cy_en_divider_types_t dividerType,
1827:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetDivider(cy_en_divider_types_t dividerType, uint32_t div
1828:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphSetFracDivider(cy_en_divider_types_t dividerT
1829:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PeriphGetFracDivider(cy_en_divider_types_t dividerType, uint32_t div
1830:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphAssignDivider(en_clk_dst_t ipBlock, cy_en_div
1831:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetAssignedDivider(en_clk_dst_t ipBlock);
1832:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphEnableDivider(cy_en_divider_types_t dividerTy
1833:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphDisableDivider(cy_en_divider_types_t dividerT
1834:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphEnablePhaseAlignDivider(cy_en_divider_types_t
1835:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PeriphGetDividerEnabled(cy_en_divider_types_t dividerType, uint32_t 
1836:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** uint32_t Cy_SysClk_PeriphGetFrequency(cy_en_divider_types_t dividerType, uint32_t dividerNum);
1837:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1838:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1839:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphSetDivider
1840:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1841:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1842:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets one of the programmable clock dividers. This is only used for integer
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 37


1843:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * dividers. Use \ref Cy_SysClk_PeriphSetFracDivider for setting factional dividers.
1844:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1845:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \pre If the specified clock divider is already enabled - it should be disabled
1846:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * prior to use this function by \ref Cy_SysClk_PeriphDisableDivider.
1847:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1848:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1849:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1850:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum the divider number.
1851:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1852:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerValue divider value
1853:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256
1854:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (8-bit divider) or 1 to 65536 (16-bit divider).
1855:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1856:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1857:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1858:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1859:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphSetDivider
1860:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1861:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1862:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
1863:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphSetDivider(cy_en_divider_types_t dividerType,
1864:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            uint32_t dividerNum, uint32_t dividerValue)
1865:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1866:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1867:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_8_BIT)
1868:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1869:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_8_NR) &&
1870:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_8_CTL_INT8_DIV_Msk >> PERI_DIV_8_CTL_INT8_DIV_Pos)))
1871:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1872:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_8_CTL[dividerNum], PERI_DIV_8_CTL_INT8_DIV, dividerValue);
1873:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1874:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1875:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1876:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else if (dividerType == CY_SYSCLK_DIV_16_BIT)
1877:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1878:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_16_NR) &&
1879:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_16_CTL_INT16_DIV_Msk >> PERI_DIV_16_CTL_INT16_DIV_Pos)))
1880:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1881:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_CTL[dividerNum], PERI_DIV_16_CTL_INT16_DIV, dividerValue);
1882:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1883:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1884:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1885:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1886:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* return bad parameter */
1887:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1888:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1889:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1890:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1891:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1892:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetDivider
1893:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1894:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1895:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the integer divider value for the specified divider. One works for
1896:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * integer dividers. Use \ref Cy_SysClk_PeriphGetFracDivider to get the fractional
1897:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * divider value
1898:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1899:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 38


1900:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1901:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
1902:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1903:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
1904:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256
1905:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (8-bit divider) or 1 to 65536 (16-bit divider).
1906:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1907:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1908:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphSetDivider
1909:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1910:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1911:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetDivider(cy_en_divider_types_t dividerType, uint32_t div
1912:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1913:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t retVal;
1914:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1915:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(dividerType <= CY_SYSCLK_DIV_16_BIT);
1916:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1917:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_8_BIT)
1918:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1919:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_8_NR);
1920:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = _FLD2VAL(PERI_DIV_8_CTL_INT8_DIV, PERI_DIV_8_CTL[dividerNum]);
1921:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1922:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1923:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* 16-bit divider */
1924:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_16_NR);
1925:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = _FLD2VAL(PERI_DIV_16_CTL_INT16_DIV, PERI_DIV_16_CTL[dividerNum]);
1926:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1927:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1928:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1929:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1930:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1931:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphSetFracDivider
1932:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1933:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1934:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets one of the programmable clock dividers. This function should only be used
1935:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for fractional clock dividers.
1936:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1937:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \pre If the specified clock divider is already enabled - it should be disabled
1938:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * prior to use this function by \ref Cy_SysClk_PeriphDisableDivider.
1939:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1940:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1941:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1942:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
1943:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1944:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerIntValue the integer divider value
1945:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The source of the divider is peri_clk, which is a divided version of hf_clk[0].
1946:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The divider value causes integer division of (divider value + 1), or division
1947:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * by 1 to 65536 (16-bit divider) or 1 to 16777216 (24-bit divider).
1948:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1949:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerFracValue the fraction part of the divider
1950:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The fractional divider can be 1-32, thus it divides the clock by 1/32 for each
1951:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * count. To divide the clock by 11/32nds set this value to 11.
1952:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1953:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1954:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1955:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1956:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphSetFracDivider
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 39


1957:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1958:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1959:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
1960:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphSetFracDivider(cy_en_divider_types_t dividerType, uint32_t dividerN
1961:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                uint32_t dividerIntValue, uint32_t dividerFracValue)
1962:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1963:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
1964:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_16_5_BIT)
1965:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1966:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_16_5_NR) &&
1967:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerIntValue <= (PERI_DIV_16_5_CTL_INT16_DIV_Msk >> PERI_DIV_16_5_CTL_INT16_DIV_Pos
1968:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerFracValue <= (PERI_DIV_16_5_CTL_FRAC5_DIV_Msk >> PERI_DIV_16_5_CTL_FRAC5_DIV_Po
1969:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1970:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_5_CTL[dividerNum], PERI_DIV_16_5_CTL_INT16_DIV, dividerInt
1971:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_16_5_CTL[dividerNum], PERI_DIV_16_5_CTL_FRAC5_DIV, dividerFra
1972:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1973:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1974:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1975:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else if (dividerType == CY_SYSCLK_DIV_24_5_BIT)
1976:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1977:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_24_5_NR) &&
1978:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerIntValue <= (PERI_DIV_24_5_CTL_INT24_DIV_Msk >> PERI_DIV_24_5_CTL_INT24_DIV_Pos
1979:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerFracValue <= (PERI_DIV_24_5_CTL_FRAC5_DIV_Msk >> PERI_DIV_24_5_CTL_FRAC5_DIV_Po
1980:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1981:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_24_5_CTL[dividerNum], PERI_DIV_24_5_CTL_INT24_DIV, dividerInt
1982:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_REG32_CLR_SET(PERI_DIV_24_5_CTL[dividerNum], PERI_DIV_24_5_CTL_FRAC5_DIV, dividerFra
1983:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
1984:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1985:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1986:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1987:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* return bad parameter */
1988:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1989:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
1990:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1991:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1992:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1993:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetFracDivider
1994:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1995:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1996:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the integer and fractional parts of the divider
1997:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1998:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1999:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2000:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2001:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2002:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param *dividerIntValue pointer to return integer divider value
2003:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2004:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param *dividerFracValue pointer to return fractional divider value
2005:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2006:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return None. Loads pointed-to variables.
2007:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2008:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2009:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphSetFracDivider
2010:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2011:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2012:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PeriphGetFracDivider(cy_en_divider_types_t dividerType, uint32_t div
2013:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                     uint32_t *dividerIntValue, uint32_t *dividerFra
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 40


2014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2015:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(((dividerType == CY_SYSCLK_DIV_16_5_BIT) || (dividerType == CY_SYSCLK_DIV_24_5_BIT
2016:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  (dividerIntValue != NULL) && (dividerFracValue != NULL));
2017:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2018:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_16_5_BIT)
2019:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2020:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_16_5_NR);
2021:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerIntValue  = _FLD2VAL(PERI_DIV_16_5_CTL_INT16_DIV, PERI_DIV_16_5_CTL[dividerNum]);
2022:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerFracValue = _FLD2VAL(PERI_DIV_16_5_CTL_FRAC5_DIV, PERI_DIV_16_5_CTL[dividerNum]);
2023:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2024:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
2025:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* 24.5-bit divider */
2026:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_24_5_NR);
2027:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerIntValue  = _FLD2VAL(PERI_DIV_24_5_CTL_INT24_DIV, PERI_DIV_24_5_CTL[dividerNum]);
2028:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerFracValue = _FLD2VAL(PERI_DIV_24_5_CTL_FRAC5_DIV, PERI_DIV_24_5_CTL[dividerNum]);
2029:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2030:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2031:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2032:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2033:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphAssignDivider
2034:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2035:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2036:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Assigns a programmable divider to a selected IP block, such as a TCPWM or SCB.
2037:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2038:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param ipBlock specifies ip block to connect the clock divider to.
2039:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2040:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2041:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2042:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2043:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2044:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
2045:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2046:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2047:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphAssignDivider
2048:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2049:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2050:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2051:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphAssignDivider(en_clk_dst_t ipBlock,
2052:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               cy_en_divider_types_t dividerType, uint32_t dividerNu
2053:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2054:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2055:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((CY_PERI_CLOCK_NR > (uint32_t)ipBlock) && (CY_SYSCLK_DIV_24_5_BIT >= dividerType))
2056:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2057:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2058:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2059:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2060:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2061:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2062:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_CLOCK_CTL[ipBlock] = _VAL2FLD(CY_PERI_CLOCK_CTL_TYPE_SEL, dividerType) |
2063:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                       _VAL2FLD(CY_PERI_CLOCK_CTL_DIV_SEL, dividerNum);
2064:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
2065:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2066:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2067:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2068:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2069:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2070:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 41


2071:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetAssignedDivider
2072:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2073:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2074:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports which clock divider is assigned to a selected IP block.
2075:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2076:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param ipBlock specifies ip block to connect the clock divider to.
2077:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2078:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider type and number, where bits [7:6] = type, bits[5:0] = divider
2079:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * number within that type
2080:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2081:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2082:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphAssignDivider
2083:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2084:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2085:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetAssignedDivider(en_clk_dst_t ipBlock)
2086:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2087:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(CY_PERI_CLOCK_NR > (uint32_t)ipBlock);
2088:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (PERI_CLOCK_CTL[ipBlock] & (CY_PERI_CLOCK_CTL_DIV_SEL_Msk | CY_PERI_CLOCK_CTL_TYPE_SEL_M
2089:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2090:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2091:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2092:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphEnableDivider
2093:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2094:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2095:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the selected divider.
2096:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2097:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2098:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2099:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note This function also sets the phase alignment bits such that the enabled
2102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * divider is aligned to clk_peri. See \ref Cy_SysClk_PeriphDisableDivider()
2103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for information on how to phase-align a divider after it is enabled.
2104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphEnableDivider
2107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphEnableDivider(cy_en_divider_types_t dividerType, uint32_t dividerNu
2111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType <= CY_SYSCLK_DIV_24_5_BIT)
2114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* specify the divider, make the reference = clk_peri, and enable the divider */
2121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_DIV_CMD = PERI_DIV_CMD_ENABLE_Msk                         |
2122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
2123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            CY_PERI_DIV_CMD_PA_DIV_SEL_Msk                  |
2124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
2125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                            _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
2126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (void)PERI_DIV_CMD; /* dummy read to handle buffered writes */
2127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 42


2128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphDisableDivider
2135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables a selected divider.
2138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t.
2140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure.
2142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphDisableDivider
2145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphDisableDivider(cy_en_divider_types_t dividerType, uint32_t dividerN
2149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType <= CY_SYSCLK_DIV_24_5_BIT)
2152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* specify the divider and disable it */
2159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI_DIV_CMD = PERI_DIV_CMD_DISABLE_Msk          |
2160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType) |
2161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****              _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
2162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = CY_SYSCLK_SUCCESS;
2163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphEnablePhaseAlignDivider
2170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * First disables a selected divider (\ref Cy_SysClk_PeriphDisableDivider),
2173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * then aligns that divider to another programmable divider, and enables the
2174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * selected divider. The divider to align to must already be enabled in order
2175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * to align a divider to it.
2176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t.
2178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure.
2180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerTypePA type of divider to phase-align to; \ref cy_en_divider_types_t.
2182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNumPA divider number of type specified to phase align to.
2184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 43


2185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
2186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * To phase-align a divider to clk_peri, set dividerTypePA to 3 and dividerNumPA
2187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * to 63.
2188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphEnablePhaseAlignDivider
2191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphEnablePhaseAlignDivider(cy_en_divider_types_t dividerType, uint32_t
2195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                         cy_en_divider_types_t dividerTypePA, uint32
2196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retVal = CY_SYSCLK_BAD_PARAM;
2198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerTypePA <= CY_SYSCLK_DIV_24_5_BIT)
2199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerTypePA == CY_SYSCLK_DIV_8_BIT)    && (dividerNumPA < PERI_DIV_8_NR))    ||
2201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerTypePA == CY_SYSCLK_DIV_16_BIT)   && (dividerNumPA < PERI_DIV_16_NR))   ||
2202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerTypePA == CY_SYSCLK_DIV_16_5_BIT) && (dividerNumPA < PERI_DIV_16_5_NR)) ||
2203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerTypePA == CY_SYSCLK_DIV_24_5_BIT) && ((dividerNumPA < PERI_DIV_24_5_NR) || (di
2204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* First, disable the divider that is to be phase-aligned.
2206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                The other two parameters are checked in that function;
2207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                if they're not valid, the divider is not disabled. */
2208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = Cy_SysClk_PeriphDisableDivider(dividerType, dividerNum);
2209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             if (retVal == CY_SYSCLK_SUCCESS)
2210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             {
2211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 /* Then, specify the reference divider, and the divider, and enable the divider. */
2212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 PERI_DIV_CMD = PERI_DIV_CMD_ENABLE_Msk             |
2213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  _VAL2FLD(CY_PERI_DIV_CMD_PA_TYPE_SEL, dividerTypePA) |
2214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  _VAL2FLD(CY_PERI_DIV_CMD_PA_DIV_SEL,  dividerNumPA)  |
2215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  _VAL2FLD(CY_PERI_DIV_CMD_TYPE_SEL, dividerType)   |
2216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  _VAL2FLD(CY_PERI_DIV_CMD_DIV_SEL,  dividerNum);
2217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             }
2218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetDividerEnabled
2225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the enabled/disabled atate of the selected divider.
2228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t.
2230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure.
2232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The enabled/disabled state;<br>
2234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = disabled<br>
2235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = enabled
2236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_PeriphGetDividerEnabled
2239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PeriphGetDividerEnabled(cy_en_divider_types_t dividerType, uint32_t 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 44


2242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool retVal = false;
2244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)));
2249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     switch(dividerType)
2251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         case CY_SYSCLK_DIV_8_BIT:
2253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = _FLD2BOOL(PERI_DIV_8_CTL_EN, PERI_DIV_8_CTL[dividerNum]);
2254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             break;
2255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         case CY_SYSCLK_DIV_16_BIT:
2256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = _FLD2BOOL(PERI_DIV_16_CTL_EN, PERI_DIV_16_CTL[dividerNum]);
2257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             break;
2258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         case CY_SYSCLK_DIV_16_5_BIT:
2259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = _FLD2BOOL(PERI_DIV_16_5_CTL_EN, PERI_DIV_16_5_CTL[dividerNum]);
2260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             break;
2261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         case CY_SYSCLK_DIV_24_5_BIT:
2262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retVal = _FLD2BOOL(PERI_DIV_24_5_CTL_EN, PERI_DIV_24_5_CTL[dividerNum]);
2263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             break;
2264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         default:
2265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             break;
2266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retVal);
2268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peripheral_funcs */
2270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clk_slow SECTION    ========================= */
2274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_slow_funcs
2277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkSlowSetDivider(uint8_t divider);
2280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkSlowGetDivider(void);
2281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkSlowSetDivider
2284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the slow clock. The source of this clock is the
2287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * peripheral clock (clkPeri), which is sourced from clkHf[0].
2288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider Divider value between 0 and 255.
2290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
2291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note 
2293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Call \ref SystemCoreClockUpdate after this function calling.
2294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkSlowSetDivider
2297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 45


2299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkSlowSetDivider(uint8_t divider)
2300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(CPUSS_CM0_CLOCK_CTL, CPUSS_CM0_CLOCK_CTL_SLOW_INT_DIV, divider);
2302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkSlowGetDivider
2306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the divider value for the slow clock.
2309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
2311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
2312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkSlowSetDivider
2315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkSlowGetDivider(void)
2318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM0_CLOCK_CTL_SLOW_INT_DIV, CPUSS_CM0_CLOCK_CTL));
2320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_slow_funcs */
2322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    clkLf SECTION    ========================== */
2326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_lf_enums
2329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Low frequency (clkLf) input sources. See CLK_SELECT register, LFCLK_SEL bits.
2333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkLfSetSource, and \ref Cy_SysClk_ClkLfGetSource.
2334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
2336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKLF_IN_ILO   = 0U, /**< clkLf is sourced by the internal low speed oscillator (ILO)
2338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKLF_IN_WCO   = 1U, /**< clkLf is sourced by the watch crystal oscillator (WCO) */
2339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKLF_IN_ALTLF = 2U, /**< clkLf is sourced by the Alternate Low Frequency Clock (ALTL
2340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKLF_IN_PILO  = 3U  /**< clkLf is sourced by the precision low speed oscillator (PIL
2341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clklf_in_sources_t;
2342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_lf_enums */
2343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_lf_funcs
2346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkLfSetSource(cy_en_clklf_in_sources_t source);
2349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clklf_in_sources_t Cy_SysClk_ClkLfGetSource(void);
2350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkLfSetSource
2353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the source for the low frequency clock(clkLf).
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 46


2356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clklf_in_sources_t
2358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
2360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkLfSetSource
2363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkLfSetSource(cy_en_clklf_in_sources_t source)
2366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L3(source <= CY_SYSCLK_CLKLF_IN_PILO);
2368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_SELECT, SRSS_CLK_SELECT_LFCLK_SEL, source);
  62              		.loc 2 2368 0
  63 0004 5949     		ldr	r1, .L9
  64 0006 A022     		movs	r2, #160
  65 0008 D200     		lsls	r2, r2, #3
  66 000a 8B58     		ldr	r3, [r1, r2]
  67 000c 0320     		movs	r0, #3
  68 000e 8343     		bics	r3, r0
  69 0010 8B50     		str	r3, [r1, r2]
  70              	.LVL2:
  71              	.LBE43:
  72              	.LBE42:
  73              	.LBB44:
  74              	.LBB45:
1729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
  75              		.loc 2 1729 0
  76 0012 574A     		ldr	r2, .L9+4
  77 0014 1168     		ldr	r1, [r2]
  78 0016 0868     		ldr	r0, [r1]
  79 0018 8823     		movs	r3, #136
  80 001a CB58     		ldr	r3, [r1, r3]
  81 001c C318     		adds	r3, r0, r3
  82 001e 1868     		ldr	r0, [r3]
  83 0020 5449     		ldr	r1, .L9+8
  84 0022 0840     		ands	r0, r1
  85 0024 1860     		str	r0, [r3]
  86              	.LVL3:
  87              	.LBE45:
  88              	.LBE44:
  89              	.LBB46:
  90              	.LBB47:
1782:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
  91              		.loc 2 1782 0
  92 0026 1368     		ldr	r3, [r2]
  93 0028 1868     		ldr	r0, [r3]
  94 002a 8424     		movs	r4, #132
  95 002c 1B59     		ldr	r3, [r3, r4]
  96 002e C018     		adds	r0, r0, r3
  97 0030 0368     		ldr	r3, [r0]
  98 0032 1B02     		lsls	r3, r3, #8
  99 0034 1B0A     		lsrs	r3, r3, #8
 100 0036 8025     		movs	r5, #128
 101 0038 6D04     		lsls	r5, r5, #17
 102 003a 2B43     		orrs	r3, r5
 103 003c 0360     		str	r3, [r0]
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 47


 104              	.LVL4:
 105              	.LBE47:
 106              	.LBE46:
 107              	.LBB48:
 108              	.LBB49:
2301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 109              		.loc 2 2301 0
 110 003e 1068     		ldr	r0, [r2]
 111 0040 0568     		ldr	r5, [r0]
 112 0042 0359     		ldr	r3, [r0, r4]
 113 0044 EB18     		adds	r3, r5, r3
 114 0046 1868     		ldr	r0, [r3]
 115 0048 0140     		ands	r1, r0
 116 004a 1960     		str	r1, [r3]
 117              	.LVL5:
 118              	.LBE49:
 119              	.LBE48:
 120              	.LBB50:
 121              	.LBB51:
1601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
 122              		.loc 2 1601 0
 123 004c 1368     		ldr	r3, [r2]
 124 004e 3E22     		movs	r2, #62
 125 0050 9A5C     		ldrb	r2, [r3, r2]
 126 0052 002A     		cmp	r2, #0
 127 0054 06D0     		beq	.L4
1603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
 128              		.loc 2 1603 0
 129 0056 4548     		ldr	r0, .L9
 130 0058 E021     		movs	r1, #224
 131 005a 8900     		lsls	r1, r1, #2
 132 005c 4258     		ldr	r2, [r0, r1]
 133 005e 753C     		subs	r4, r4, #117
 134 0060 A243     		bics	r2, r4
 135 0062 4250     		str	r2, [r0, r1]
 136              	.LVL6:
 137              	.L4:
 138              	.LBE51:
 139              	.LBE50:
 140              	.LBB52:
 141              	.LBB53:
1662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
 142              		.loc 2 1662 0
 143 0064 3E22     		movs	r2, #62
 144 0066 9A5C     		ldrb	r2, [r3, r2]
 145 0068 002A     		cmp	r2, #0
 146 006a 06D0     		beq	.L5
1664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
 147              		.loc 2 1664 0
 148 006c 3F48     		ldr	r0, .L9
 149 006e E021     		movs	r1, #224
 150 0070 8900     		lsls	r1, r1, #2
 151 0072 4258     		ldr	r2, [r0, r1]
 152 0074 3024     		movs	r4, #48
 153 0076 A243     		bics	r2, r4
 154 0078 4250     		str	r2, [r0, r1]
 155              	.LVL7:
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 48


 156              	.L5:
 157              	.LBE53:
 158              	.LBE52:
 159              	.LBB54:
 160              	.LBB55:
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
 161              		.loc 2 1534 0
 162 007a 3E22     		movs	r2, #62
 163 007c 9B5C     		ldrb	r3, [r3, r2]
 164 007e 002B     		cmp	r3, #0
 165 0080 07D0     		beq	.L6
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retVal = CY_SYSCLK_SUCCESS;
 166              		.loc 2 1536 0
 167 0082 3A49     		ldr	r1, .L9
 168 0084 E022     		movs	r2, #224
 169 0086 9200     		lsls	r2, r2, #2
 170 0088 8B58     		ldr	r3, [r1, r2]
 171 008a 8020     		movs	r0, #128
 172 008c 0006     		lsls	r0, r0, #24
 173 008e 0343     		orrs	r3, r0
 174 0090 8B50     		str	r3, [r1, r2]
 175              	.LVL8:
 176              	.L6:
 177              	.LBE55:
 178              	.LBE54:
 150:Generated_Source\PSoC6/cyfitter_cfg.c **** 	uint32_t status;
 151:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 152:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Enable all source clocks */
 153:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkLfSetSource(CY_SYSCLK_CLKLF_IN_ILO);
 154:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 155:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Configure CPU clock dividers */
 156:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkFastSetDivider(0u);
 157:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPeriSetDivider(1u);
 158:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkSlowSetDivider(0u);
 159:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 160:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Configure LF & HF clocks */
 161:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkHfSetSource(0u, CY_SYSCLK_CLKHF_IN_CLKPATH0);
 162:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkHfSetDivider(0u, CY_SYSCLK_CLKHF_NO_DIVIDE);
 163:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkHfEnable(0u);
 164:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 165:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Configure Path Clocks */
 166:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPathSetSource(1, CY_SYSCLK_CLKPATH_IN_IMO);
 179              		.loc 1 166 0
 180 0092 0021     		movs	r1, #0
 181 0094 0120     		movs	r0, #1
 182 0096 FFF7FEFF 		bl	Cy_SysClk_ClkPathSetSource
 183              	.LVL9:
 167:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPathSetSource(2, CY_SYSCLK_CLKPATH_IN_IMO);
 184              		.loc 1 167 0
 185 009a 0021     		movs	r1, #0
 186 009c 0220     		movs	r0, #2
 187 009e FFF7FEFF 		bl	Cy_SysClk_ClkPathSetSource
 188              	.LVL10:
 168:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPathSetSource(3, CY_SYSCLK_CLKPATH_IN_IMO);
 189              		.loc 1 168 0
 190 00a2 0021     		movs	r1, #0
 191 00a4 0320     		movs	r0, #3
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 49


 192 00a6 FFF7FEFF 		bl	Cy_SysClk_ClkPathSetSource
 193              	.LVL11:
 169:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPathSetSource(4, CY_SYSCLK_CLKPATH_IN_IMO);
 194              		.loc 1 169 0
 195 00aa 0021     		movs	r1, #0
 196 00ac 0420     		movs	r0, #4
 197 00ae FFF7FEFF 		bl	Cy_SysClk_ClkPathSetSource
 198              	.LVL12:
 170:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPathSetSource(0, CY_SYSCLK_CLKPATH_IN_IMO);
 199              		.loc 1 170 0
 200 00b2 0021     		movs	r1, #0
 201 00b4 0020     		movs	r0, #0
 202 00b6 FFF7FEFF 		bl	Cy_SysClk_ClkPathSetSource
 203              	.LVL13:
 204              	.LBB56:
 171:Generated_Source\PSoC6/cyfitter_cfg.c **** 	{
 172:Generated_Source\PSoC6/cyfitter_cfg.c **** 		const cy_stc_fll_manual_config_t fllConfig = 
 205              		.loc 1 172 0
 206 00ba 01A8     		add	r0, sp, #4
 207 00bc 2E49     		ldr	r1, .L9+12
 208 00be 0300     		movs	r3, r0
 209 00c0 0A00     		movs	r2, r1
 210 00c2 32CA     		ldmia	r2!, {r1, r4, r5}
 211 00c4 32C3     		stmia	r3!, {r1, r4, r5}
 212 00c6 12CA     		ldmia	r2!, {r1, r4}
 213 00c8 12C3     		stmia	r3!, {r1, r4}
 173:Generated_Source\PSoC6/cyfitter_cfg.c **** 		{
 174:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.fllMult =         500u,
 175:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.refDiv =          20u,
 176:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.ccoRange =        CY_SYSCLK_FLL_CCO_RANGE4,
 177:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.enableOutputDiv = true,
 178:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.lockTolerance =   10u,
 179:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.igain =           9u,
 180:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.pgain =           5u,
 181:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.settlingCount =   8u,
 182:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.outputMode =      CY_SYSCLK_FLLPLL_OUTPUT_AUTO,
 183:Generated_Source\PSoC6/cyfitter_cfg.c **** 			.cco_Freq =        355u
 184:Generated_Source\PSoC6/cyfitter_cfg.c **** 		};
 185:Generated_Source\PSoC6/cyfitter_cfg.c **** 		status = Cy_SysClk_FllManualConfigure(&fllConfig);
 214              		.loc 1 185 0
 215 00ca FFF7FEFF 		bl	Cy_SysClk_FllManualConfigure
 216              	.LVL14:
 186:Generated_Source\PSoC6/cyfitter_cfg.c **** 		if (CY_RET_SUCCESS != status)
 217              		.loc 1 186 0
 218 00ce 0028     		cmp	r0, #0
 219 00d0 02D0     		beq	.L7
 187:Generated_Source\PSoC6/cyfitter_cfg.c **** 		{
 188:Generated_Source\PSoC6/cyfitter_cfg.c **** 			CyClockStartupError(CYCLOCKSTART_FLL_ERROR);
 220              		.loc 1 188 0
 221 00d2 0420     		movs	r0, #4
 222              	.LVL15:
 223 00d4 FFF7FEFF 		bl	CyClockStartupError
 224              	.LVL16:
 225              	.L7:
 226              	.LBE56:
 189:Generated_Source\PSoC6/cyfitter_cfg.c **** 		}
 190:Generated_Source\PSoC6/cyfitter_cfg.c **** 	}
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 50


 191:Generated_Source\PSoC6/cyfitter_cfg.c **** 	SRSS->CLK_TRIM_CCO_CTL |= 1u << 31;
 227              		.loc 1 191 0
 228 00d8 2449     		ldr	r1, .L9
 229 00da 284A     		ldr	r2, .L9+16
 230 00dc 8B58     		ldr	r3, [r1, r2]
 231 00de 8020     		movs	r0, #128
 232              	.LVL17:
 233 00e0 0006     		lsls	r0, r0, #24
 234 00e2 0343     		orrs	r3, r0
 235 00e4 8B50     		str	r3, [r1, r2]
 192:Generated_Source\PSoC6/cyfitter_cfg.c **** 	status = Cy_SysClk_FllEnable(200000u);
 236              		.loc 1 192 0
 237 00e6 2648     		ldr	r0, .L9+20
 238 00e8 FFF7FEFF 		bl	Cy_SysClk_FllEnable
 239              	.LVL18:
 193:Generated_Source\PSoC6/cyfitter_cfg.c **** 	if (CY_RET_SUCCESS != status)
 240              		.loc 1 193 0
 241 00ec 0028     		cmp	r0, #0
 242 00ee 02D0     		beq	.L8
 194:Generated_Source\PSoC6/cyfitter_cfg.c **** 	{
 195:Generated_Source\PSoC6/cyfitter_cfg.c **** 		CyClockStartupError(CYCLOCKSTART_FLL_ERROR);
 243              		.loc 1 195 0
 244 00f0 0420     		movs	r0, #4
 245              	.LVL19:
 246 00f2 FFF7FEFF 		bl	CyClockStartupError
 247              	.LVL20:
 248              	.L8:
 249              	.LBB57:
 250              	.LBB58:
2369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkLfGetSource
2373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the source for the low frequency clock (clkLf).
2376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clklf_in_sources_t
2378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkLfSetSource
2381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clklf_in_sources_t Cy_SysClk_ClkLfGetSource(void)
2384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clklf_in_sources_t)(_FLD2VAL(SRSS_CLK_SELECT_LFCLK_SEL, SRSS_CLK_SELECT));
2386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_lf_funcs */
2388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================    clk_timer SECTION    ========================= */
2392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_timer_enums
2395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 51


2397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Timer clock (clk_timer) input sources. See CLK_TIMER_CTL register, TIMER_SEL
2399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and TIMER_HF0_DIV bits. Used with functions \ref Cy_SysClk_ClkTimerSetSource, and
2400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \ref Cy_SysClk_ClkTimerGetSource.
2401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
2403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKTIMER_IN_IMO       = 0x000U, /**< clk_timer is sourced by the internal main oscill
2405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKTIMER_IN_HF0_NODIV = 0x001U, /**< clk_timer is sourced by clkHf[0] undivided */
2406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKTIMER_IN_HF0_DIV2  = 0x101U, /**< clk_timer is sourced by clkHf[0] divided by 2 */
2407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKTIMER_IN_HF0_DIV4  = 0x201U, /**< clk_timer is sourced by clkHf[0] divided by 4 */
2408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKTIMER_IN_HF0_DIV8  = 0x301U  /**< clk_timer is sourced by clkHf[0] divided by 8 */
2409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clktimer_in_sources_t;
2410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_timer_enums */
2411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \cond */
2413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SRSS_CLK_TIMER_CTL_TIMER_Pos (SRSS_CLK_TIMER_CTL_TIMER_SEL_Pos)
2414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SRSS_CLK_TIMER_CTL_TIMER_Msk (SRSS_CLK_TIMER_CTL_TIMER_SEL_Msk | SRSS_CLK_TIMER_CTL_TIME
2415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \endcond */
2416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_timer_funcs
2419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerSetSource(cy_en_clktimer_in_sources_t source);
2422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clktimer_in_sources_t Cy_SysClk_ClkTimerGetSource(void);
2423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerSetDivider(uint8_t divider);
2424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkTimerGetDivider(void);
2425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerEnable(void);
2426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerDisable(void);
2427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkTimerSetSource
2430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the source for the timer clock (clk_timer). The timer clock can be used
2433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * as a source for SYSTICK as an alternate clock and one or more of the energy 
2434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * profiler counters.
2435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clktimer_in_sources_t
2437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkTimerSetSource
2440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerSetSource(cy_en_clktimer_in_sources_t source)
2443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L3(source <= CY_SYSCLK_CLKTIMER_IN_HF0_DIV8);
2445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* set both fields TIMER_SEL and TIMER_HF0_DIV with the same input value */
2446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_TIMER_CTL, CY_SRSS_CLK_TIMER_CTL_TIMER, source);
 251              		.loc 2 2446 0
 252 00f6 1D4C     		ldr	r4, .L9
 253 00f8 224B     		ldr	r3, .L9+24
 254 00fa E158     		ldr	r1, [r4, r3]
 255 00fc 224A     		ldr	r2, .L9+28
 256 00fe 0A40     		ands	r2, r1
 257 0100 E250     		str	r2, [r4, r3]
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 52


 258              	.LVL21:
 259              	.LBE58:
 260              	.LBE57:
 261              	.LBB59:
 262              	.LBB60:
2447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkTimerGetSource
2451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the source for the timer clock (clk_timer).
2454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clktimer_in_sources_t
2456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkTimerSetSource
2459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clktimer_in_sources_t Cy_SysClk_ClkTimerGetSource(void)
2462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* return both fields TIMER_SEL and TIMER_HF0_DIV as a single combined value */
2464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clktimer_in_sources_t)(SRSS_CLK_TIMER_CTL & CY_SRSS_CLK_TIMER_CTL_TIMER_Msk);
2465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkTimerSetDivider
2469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the divider for the timer clock (clk_timer).
2472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider Divider value; valid range is 0 to 255. Divides the selected
2474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * source (\ref Cy_SysClk_ClkTimerSetSource) by the (value + 1).
2475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
2477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Do not change the divider value while the timer clock is enabled.
2478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkTimerSetDivider
2481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerSetDivider(uint8_t divider)
2484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_TIMER_CTL, SRSS_CLK_TIMER_CTL_TIMER_DIV, divider);
 263              		.loc 2 2485 0
 264 0102 E158     		ldr	r1, [r4, r3]
 265 0104 214A     		ldr	r2, .L9+32
 266 0106 0A40     		ands	r2, r1
 267 0108 E250     		str	r2, [r4, r3]
 268              	.LVL22:
 269              	.LBE60:
 270              	.LBE59:
 271              	.LBB61:
 272              	.LBB62:
2486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 53


2489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkTimerGetDivider
2490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the divider value for the timer clock (clk_timer).
2493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value
2495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkTimerSetDivider
2498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkTimerGetDivider(void)
2501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(SRSS_CLK_TIMER_CTL_TIMER_DIV, SRSS_CLK_TIMER_CTL));
2503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkTimerEnable
2507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the timer clock (clk_timer). The timer clock can be used as a source
2510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for SYSTICK and one or more of the energy profiler counters.
2511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkTimerEnable
2514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerEnable(void)
2517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_TIMER_CTL |= SRSS_CLK_TIMER_CTL_ENABLE_Msk;
 273              		.loc 2 2518 0
 274 010a E258     		ldr	r2, [r4, r3]
 275 010c 8025     		movs	r5, #128
 276 010e 2D06     		lsls	r5, r5, #24
 277 0110 2A43     		orrs	r2, r5
 278 0112 E250     		str	r2, [r4, r3]
 279              	.LVL23:
 280              	.LBE62:
 281              	.LBE61:
 282              	.LBB63:
 283              	.LBB64:
2519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkTimerDisable
2523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the timer clock (clk_timer).
2526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkTimerDisable
2529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkTimerDisable(void)
2532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_TIMER_CTL &= ~SRSS_CLK_TIMER_CTL_ENABLE_Msk;
2534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 54


2535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_timer_funcs */
2536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clk_pump SECTION    ========================= */
2540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_pump_enums
2543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Pump clock (clk_pump) input sources. See CLK_SELECT register, PUMP_SEL bits.
2547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkPumpSetSource, and
2548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \ref Cy_SysClk_ClkPumpGetSource.
2549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
2551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH0,  /**< Pump clock input is clock path 0 */
2553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH1,  /**< Pump clock input is clock path 1 */
2554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH2,  /**< Pump clock input is clock path 2 */
2555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH3,  /**< Pump clock input is clock path 3 */
2556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH4,  /**< Pump clock input is clock path 4 */
2557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH5,  /**< Pump clock input is clock path 5 */
2558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH6,  /**< Pump clock input is clock path 6 */
2559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH7,  /**< Pump clock input is clock path 7 */
2560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH8,  /**< Pump clock input is clock path 8 */
2561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH9,  /**< Pump clock input is clock path 9 */
2562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH10, /**< Pump clock input is clock path 10 */
2563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH11, /**< Pump clock input is clock path 11 */
2564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH12, /**< Pump clock input is clock path 12 */
2565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH13, /**< Pump clock input is clock path 13 */
2566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH14, /**< Pump clock input is clock path 14 */
2567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_IN_CLKPATH15  /**< Pump clock input is clock path 15 */
2568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkpump_in_sources_t;
2569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Pump clock (clk_pump) divide options. See CLK_SELECT register, PUMP_DIV bits.
2572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkPumpSetDivider, and
2573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \ref Cy_SysClk_ClkPumpGetDivider.
2574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
2576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_NO_DIV = 0U, /**< No division on pump clock */
2578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_DIV_2  = 1U, /**< Pump clock divided by 2 */
2579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_DIV_4  = 2U, /**< Pump clock divided by 4 */
2580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_DIV_8  = 3U, /**< Pump clock divided by 8 */
2581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_PUMP_DIV_16 = 4U  /**< Pump clock divided by 16 */
2582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkpump_divide_t;
2583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_pump_enums */
2584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \cond */
2586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_FLL_IS_DIVIDER_VALID(div) (((div) == CY_SYSCLK_PUMP_NO_DIV) || \
2587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               ((div) == CY_SYSCLK_PUMP_DIV_2)  || \
2588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               ((div) == CY_SYSCLK_PUMP_DIV_4)  || \
2589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               ((div) == CY_SYSCLK_PUMP_DIV_8)  || \
2590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               ((div) == CY_SYSCLK_PUMP_DIV_16))
2591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \endcond */
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 55


2592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_pump_funcs
2595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpSetSource(cy_en_clkpump_in_sources_t source);
2598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkpump_in_sources_t Cy_SysClk_ClkPumpGetSource(void);
2599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpSetDivider(cy_en_clkpump_divide_t divider);
2600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkpump_divide_t Cy_SysClk_ClkPumpGetDivider(void);
2601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpEnable(void);
2602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpDisable(void);
2603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPumpSetSource
2606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the source for the pump clock (clk_pump). The pump clock can be used for
2609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the analog pumps in the CTBm block.
2610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clkpump_in_sources_t
2612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
2614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Do not change the source while the pump clock is enabled.
2615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkPumpSetSource
2618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpSetSource(cy_en_clkpump_in_sources_t source)
2621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L3(source <= CY_SYSCLK_PUMP_IN_CLKPATH15);
2623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_SELECT, SRSS_CLK_SELECT_PUMP_SEL, source);
 284              		.loc 2 2623 0
 285 0114 043B     		subs	r3, r3, #4
 286 0116 E158     		ldr	r1, [r4, r3]
 287 0118 1D4A     		ldr	r2, .L9+36
 288 011a 0A40     		ands	r2, r1
 289 011c E250     		str	r2, [r4, r3]
 290              	.LVL24:
 291              	.LBE64:
 292              	.LBE63:
 293              	.LBB65:
 294              	.LBB66:
2624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPumpGetSource
2628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the source for the pump clock (clk_pump).
2631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkpump_in_sources_t
2633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkPumpSetSource
2636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 56


2638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkpump_in_sources_t Cy_SysClk_ClkPumpGetSource(void)
2639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkpump_in_sources_t)_FLD2VAL(SRSS_CLK_SELECT_PUMP_SEL, SRSS_CLK_SELECT);
2641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPumpSetDivider
2645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the divider of the pump clock (clk_pump).
2648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider \ref cy_en_clkpump_divide_t
2650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
2652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Do not change the divider value while the pump clock is enabled.
2653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkPumpSetDivider
2656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpSetDivider(cy_en_clkpump_divide_t divider)
2659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L3(CY_SYSCLK_FLL_IS_DIVIDER_VALID(divider));
2661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(SRSS_CLK_SELECT, SRSS_CLK_SELECT_PUMP_DIV, divider);
 295              		.loc 2 2661 0
 296 011e E158     		ldr	r1, [r4, r3]
 297 0120 1C4A     		ldr	r2, .L9+40
 298 0122 0A40     		ands	r2, r1
 299 0124 8021     		movs	r1, #128
 300 0126 8901     		lsls	r1, r1, #6
 301 0128 0A43     		orrs	r2, r1
 302 012a E250     		str	r2, [r4, r3]
 303              	.LVL25:
 304              	.LBE66:
 305              	.LBE65:
 306              	.LBB67:
 307              	.LBB68:
2662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPumpGetDivider
2666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the divider value for the pump clock (clk_pump).
2669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkpump_divide_t
2671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkPumpSetDivider
2674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkpump_divide_t Cy_SysClk_ClkPumpGetDivider(void)
2677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkpump_divide_t)_FLD2VAL(SRSS_CLK_SELECT_PUMP_DIV, SRSS_CLK_SELECT);
2679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 57


2682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPumpEnable
2683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the pump clock (clk_pump). The pump clock can be used for the analog
2686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * pumps in the CTBm block.
2687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkPumpEnable
2690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpEnable(void)
2693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_SELECT |= SRSS_CLK_SELECT_PUMP_ENABLE_Msk;
 308              		.loc 2 2694 0
 309 012c E258     		ldr	r2, [r4, r3]
 310 012e 8021     		movs	r1, #128
 311 0130 0902     		lsls	r1, r1, #8
 312 0132 0A43     		orrs	r2, r1
 313 0134 E250     		str	r2, [r4, r3]
 314              	.LVL26:
 315              	.LBE68:
 316              	.LBE67:
 317              	.LBB69:
 318              	.LBB70:
2695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPumpDisable
2699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the pump clock (clk_pump).
2702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkPumpDisable
2705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPumpDisable(void)
2708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS_CLK_SELECT &= ~SRSS_CLK_SELECT_PUMP_ENABLE_Msk;
2710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_pump_funcs */
2712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ==========================    clk_bak SECTION    ========================= */
2716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
2717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_bak_enums
2719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Backup domain clock (clk_bak) input sources. See BACKUP->CTL register,
2723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CLK_SEL bits. Used with functions \ref Cy_SysClk_ClkBakSetSource, and
2724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \ref Cy_SysClk_ClkBakGetSource.
2725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
2727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 58


2728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_BAK_IN_WCO,   /**< Backup domain clock input is WCO */
2729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_BAK_IN_CLKLF  /**< Backup domain clock input is clkLf */
2730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkbak_in_sources_t;
2731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_bak_enums */
2732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
2734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_bak_funcs
2735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
2736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
2737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkBakSetSource(cy_en_clkbak_in_sources_t source);
2738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkbak_in_sources_t Cy_SysClk_ClkBakGetSource(void);
2739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkBakSetSource
2742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the source for the backup domain clock (clk_bak).
2745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clkbak_in_sources_t
2747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note
2749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkLf is not available in all power modes.  For this reason, WCO is the
2750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * preferred source. If the WCO is routed through the clkLf multiplexer
2751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (see \ref Cy_SysClk_ClkLfSetSource), select WCO directly - do not select clkLf.
2752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/1.20/snippet/main.c snippet_Cy_SysClk_ClkBakSetSource
2755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkBakSetSource(cy_en_clkbak_in_sources_t source)
2758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L3(source <= CY_SYSCLK_BAK_IN_CLKLF);
2760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_REG32_CLR_SET(BACKUP_CTL, BACKUP_CTL_CLK_SEL, source);
 319              		.loc 2 2760 0
 320 0136 184A     		ldr	r2, .L9+44
 321 0138 1168     		ldr	r1, [r2]
 322 013a 184B     		ldr	r3, .L9+48
 323 013c 0B40     		ands	r3, r1
 324 013e 8021     		movs	r1, #128
 325 0140 4900     		lsls	r1, r1, #1
 326 0142 0B43     		orrs	r3, r1
 327 0144 1360     		str	r3, [r2]
 328              	.LVL27:
 329              	.LBE70:
 330              	.LBE69:
 196:Generated_Source\PSoC6/cyfitter_cfg.c **** 	}
 197:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 198:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Configure miscellaneous clocks */
 199:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkTimerSetSource(CY_SYSCLK_CLKTIMER_IN_IMO);
 200:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkTimerSetDivider(0);
 201:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkTimerEnable();
 202:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPumpSetSource(CY_SYSCLK_PUMP_IN_CLKPATH0);
 203:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPumpSetDivider(CY_SYSCLK_PUMP_DIV_4);
 204:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkPumpEnable();
 205:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_ClkBakSetSource(CY_SYSCLK_BAK_IN_CLKLF);
 206:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysTick_SetClockSource(CY_SYSTICK_CLOCK_SOURCE_CLK_LF);
 331              		.loc 1 206 0
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 59


 332 0146 0020     		movs	r0, #0
 333              	.LVL28:
 334 0148 FFF7FEFF 		bl	Cy_SysTick_SetClockSource
 335              	.LVL29:
 336              	.LBB71:
 337              	.LBB72:
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 338              		.loc 2 1003 0
 339 014c 144B     		ldr	r3, .L9+52
 340 014e E258     		ldr	r2, [r4, r3]
 341 0150 1543     		orrs	r5, r2
 342 0152 E550     		str	r5, [r4, r3]
 343              	.LVL30:
 344              	.LBE72:
 345              	.LBE71:
 346              	.LBB73:
 347              	.LBB74:
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 348              		.loc 2 1054 0
 349 0154 E158     		ldr	r1, [r4, r3]
 350 0156 0122     		movs	r2, #1
 351 0158 9143     		bics	r1, r2
 352 015a 0A43     		orrs	r2, r1
 353 015c E250     		str	r2, [r4, r3]
 354              	.LVL31:
 355              	.LBE74:
 356              	.LBE73:
 207:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_IloEnable();
 208:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysClk_IloHibernateOn(1u);
 209:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 210:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Set memory wait states based on 100 MHz HFClk[0] */
 211:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysLib_SetWaitStates(false, 100);
 357              		.loc 1 211 0
 358 015e 6421     		movs	r1, #100
 359 0160 0020     		movs	r0, #0
 360 0162 FFF7FEFF 		bl	Cy_SysLib_SetWaitStates
 361              	.LVL32:
 212:Generated_Source\PSoC6/cyfitter_cfg.c **** }
 362              		.loc 1 212 0
 363 0166 07B0     		add	sp, sp, #28
 364              		@ sp needed
 365 0168 30BD     		pop	{r4, r5, pc}
 366              	.L10:
 367 016a C046     		.align	2
 368              	.L9:
 369 016c 00002640 		.word	1076232192
 370 0170 00000000 		.word	cy_device
 371 0174 FF00FFFF 		.word	-65281
 372 0178 00000000 		.word	.LANCHOR0
 373 017c 087F0000 		.word	32520
 374 0180 400D0300 		.word	200000
 375 0184 04050000 		.word	1284
 376 0188 FEFCFFFF 		.word	-770
 377 018c FFFF00FF 		.word	-16711681
 378 0190 FFF0FFFF 		.word	-3841
 379 0194 FF8FFFFF 		.word	-28673
 380 0198 00002740 		.word	1076297728
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 60


 381 019c FFFCFFFF 		.word	-769
 382 01a0 0C050000 		.word	1292
 383              		.cfi_endproc
 384              	.LFE188:
 385              		.size	ClockInit, .-ClockInit
 386              		.section	.text.Cy_SystemInit,"ax",%progbits
 387              		.align	2
 388              		.global	Cy_SystemInit
 389              		.code	16
 390              		.thumb_func
 391              		.type	Cy_SystemInit, %function
 392              	Cy_SystemInit:
 393              	.LFB190:
 213:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 214:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 215:Generated_Source\PSoC6/cyfitter_cfg.c **** /* Analog API Functions */
 216:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 217:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 218:Generated_Source\PSoC6/cyfitter_cfg.c **** /*******************************************************************************
 219:Generated_Source\PSoC6/cyfitter_cfg.c **** * Function Name: AnalogSetDefault
 220:Generated_Source\PSoC6/cyfitter_cfg.c **** ********************************************************************************
 221:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 222:Generated_Source\PSoC6/cyfitter_cfg.c **** * Summary:
 223:Generated_Source\PSoC6/cyfitter_cfg.c **** *  Sets up the analog portions of the chip to default values based on chip
 224:Generated_Source\PSoC6/cyfitter_cfg.c **** *  configuration options from the project.
 225:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 226:Generated_Source\PSoC6/cyfitter_cfg.c **** * Parameters:
 227:Generated_Source\PSoC6/cyfitter_cfg.c **** *  void
 228:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 229:Generated_Source\PSoC6/cyfitter_cfg.c **** * Return:
 230:Generated_Source\PSoC6/cyfitter_cfg.c **** *  void
 231:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 232:Generated_Source\PSoC6/cyfitter_cfg.c **** *******************************************************************************/
 233:Generated_Source\PSoC6/cyfitter_cfg.c **** static void AnalogSetDefault(void);
 234:Generated_Source\PSoC6/cyfitter_cfg.c **** static void AnalogSetDefault(void)
 235:Generated_Source\PSoC6/cyfitter_cfg.c **** {
 236:Generated_Source\PSoC6/cyfitter_cfg.c **** }
 237:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 238:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 239:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 240:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 241:Generated_Source\PSoC6/cyfitter_cfg.c **** /*******************************************************************************
 242:Generated_Source\PSoC6/cyfitter_cfg.c **** * Function Name: Cy_SystemInit
 243:Generated_Source\PSoC6/cyfitter_cfg.c **** ********************************************************************************
 244:Generated_Source\PSoC6/cyfitter_cfg.c **** * Summary:
 245:Generated_Source\PSoC6/cyfitter_cfg.c **** *  This function is called by the start-up code for the selected device. It
 246:Generated_Source\PSoC6/cyfitter_cfg.c **** *  performs all of the necessary device configuration based on the design
 247:Generated_Source\PSoC6/cyfitter_cfg.c **** *  settings.  This includes settings from the Design Wide Resources (DWR) such
 248:Generated_Source\PSoC6/cyfitter_cfg.c **** *  as Clocks and Pins as well as any component configuration that is necessary.
 249:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 250:Generated_Source\PSoC6/cyfitter_cfg.c **** * Parameters:
 251:Generated_Source\PSoC6/cyfitter_cfg.c **** *   void
 252:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 253:Generated_Source\PSoC6/cyfitter_cfg.c **** * Return:
 254:Generated_Source\PSoC6/cyfitter_cfg.c **** *   void
 255:Generated_Source\PSoC6/cyfitter_cfg.c **** *
 256:Generated_Source\PSoC6/cyfitter_cfg.c **** *******************************************************************************/
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 61


 257:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 258:Generated_Source\PSoC6/cyfitter_cfg.c **** void Cy_SystemInit(void)
 259:Generated_Source\PSoC6/cyfitter_cfg.c **** {
 394              		.loc 1 259 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 40
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398 0000 70B5     		push	{r4, r5, r6, lr}
 399              		.cfi_def_cfa_offset 16
 400              		.cfi_offset 4, -16
 401              		.cfi_offset 5, -12
 402              		.cfi_offset 6, -8
 403              		.cfi_offset 14, -4
 404 0002 8AB0     		sub	sp, sp, #40
 405              		.cfi_def_cfa_offset 56
 260:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Set worst case memory wait states (150 MHz), ClockInit() will update */
 261:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysLib_SetWaitStates(false, 150);
 406              		.loc 1 261 0
 407 0004 9621     		movs	r1, #150
 408 0006 0020     		movs	r0, #0
 409 0008 FFF7FEFF 		bl	Cy_SysLib_SetWaitStates
 410              	.LVL33:
 262:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 263:Generated_Source\PSoC6/cyfitter_cfg.c **** 	if(0u == Cy_SysLib_GetResetReason()) /* POR, XRES, or BOD */
 411              		.loc 1 263 0
 412 000c FFF7FEFF 		bl	Cy_SysLib_GetResetReason
 413              	.LVL34:
 414 0010 0028     		cmp	r0, #0
 415 0012 01D1     		bne	.L12
 264:Generated_Source\PSoC6/cyfitter_cfg.c **** 	{
 265:Generated_Source\PSoC6/cyfitter_cfg.c **** 		Cy_SysLib_ResetBackupDomain();
 416              		.loc 1 265 0
 417 0014 FFF7FEFF 		bl	Cy_SysLib_ResetBackupDomain
 418              	.LVL35:
 419              	.L12:
 266:Generated_Source\PSoC6/cyfitter_cfg.c **** 	}
 267:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 268:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Power Mode */
 269:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysPm_LdoSetVoltage(CY_SYSPM_LDO_VOLTAGE_1_1V);
 420              		.loc 1 269 0
 421 0018 0120     		movs	r0, #1
 422 001a FFF7FEFF 		bl	Cy_SysPm_LdoSetVoltage
 423              	.LVL36:
 424              	.LBB75:
 425              	.LBB76:
 426              		.file 3 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syspm/cy_syspm.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \file cy_syspm.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \version 4.0
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Provides the function definitions for the power management API.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Copyright 2016-2018, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * disclaimers, and limitations in the end user license agreement accompanying
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 62


  12:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Use the System Power Management (SysPm) driver to change power modes and 
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * reduce system power consumption in power sensitive designs. 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The functions and other declarations used in this driver are in cy_syspm.h. 
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * You can include cy_pdl.h (ModusToolbox only) to get access to all functions 
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * and declarations in the PDL. 
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For multi-CPU devices, this library allows you to individually enter low power  
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * modes for each CPU.
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This document contains the following topics:
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_power_modes
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_system_power_modes
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_switching_into_ulp
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_ulp_limitations
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_switching_into_lp
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_lp_limitations
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_switching_into_sleep
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_switching_into_deepsleep
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_wakingup_from_sleep_deepsleep
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_switching_into_hibernate
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_wakingup_from_hibernate
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_system_reg_curr_mode
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_system_set_min_reg_curr_mode
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_system_set_normal_reg_curr_mode
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_migration_guide_for_syspm_4_0
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_managing_pmic
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_managing_backup_domain
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_cb
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_cb_example
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - \ref group_syspm_cb_config_consideration
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_cb_parameters
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_cb_structures
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_cb_function_implementation
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_cb_flow
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     - \ref group_syspm_cb_unregistering
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * \ref group_syspm_definitions
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \section group_syspm_section_configuration Configuration Considerations
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_power_modes Power Modes
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * PSoC 6 MCUs support four system and three CPU power modes. These power modes
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * are intended to minimize average power consumption in an application.
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * System power modes:
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>Low Power</b> - All peripheral and CPU power modes
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   are available to be used at maximum device frequency and current 
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   consumption.
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>Ultra Low Power</b> - All peripheral and 
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   CPU power modes are available, but the frequency and current consumption 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 63


  69:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   are limited to a device specific number.
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>Deep Sleep</b> - Device and I/O states is retained. Low-frequency 
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   peripherals are available. Both CPUs are in CPU Deep Sleep power mode. 
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>Hibernate</b> - The device and I/O states are frozen and the device 
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   resets on wakeup.
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The CPU <b>Active</b>, <b>Sleep</b> and <b>Deep Sleep</b> power modes are 
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Arm-defined power modes supported by the Arm CPU instruction 
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * set architecture (ISA). 
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_system_power_modes System Power Modes
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>LP</b> - In this mode, code is executed and all logic and 
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   memories are powered. Firmware may disable/reduce clocks for specific 
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   peripherals and power down specific analog power domains.
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>ULP</b> - This power mode is like LP mode, but 
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   with clock restrictions and limited/slower peripherals to achieve lower
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   current consumption. Refer to \ref group_syspm_switching_into_ulp in 
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   Configuration considerations.
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>Deep Sleep</b> - Is a lower power mode where high-frequency clocks are 
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   disabled. Refer to \ref group_syspm_switching_into_deepsleep in 
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   Configuration considerations. Deep-sleep-capable peripherals are available. 
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   A normal wakeup from Deep Sleep returns to either system LP or ULP mode, 
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   depending on the previous state and programmed behavior for the configured 
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   wakeup interrupt. Likewise, a debug wakes up from system Deep Sleep and 
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   woken CPU returns to CPU Sleep. Refer 
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   to \ref group_syspm_wakingup_from_sleep_deepsleep in Configuration 
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   considerations.
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * <b>Hibernate</b> - Is the lowest power mode that is entered from 
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   firmware. Refer to \ref group_syspm_switching_into_hibernate in 
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   Configuration considerations. On wakeup the CPU(s) and all peripherals 
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   go through a full reset. The I/O's state is frozen so that the 
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   output driver state is held in system Hibernate. Note that in this mode, 
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   the CPU(s) and all peripherals lose their states, so the system and firmware
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   reboot on a wakeup event. Backup memory (if present) can be used to store 
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   limited system state for use on the next reboot. Refer to 
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \ref group_syspm_wakingup_from_hibernate in Configuration considerations.
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_switching_into_lp Switching the System into Low Power
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To set system LP mode you need to set LP voltage for the active core 
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * regulator:
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * If active core regulator is the LDO, call:
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \code{.c}
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   Cy_SysPm_LdoSetVoltage(CY_SYSPM_LDO_VOLTAGE_LP);
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \endcode
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * If active core regulator is the Buck, call:
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \code{.c}
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   Cy_SysPm_BuckSetVoltage1(CY_SYSPM_BUCK_OUT1_VOLTAGE_LP)
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \endcode
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * After switching into system LP mode, the operating frequency and current 
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * consumption may now be increased up to \ref group_syspm_lp_limitations.
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The wait states for flash may be changed to increase device performance by 
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * calling SysLib function Cy_SysLib_SetWaitStates(true, hfClkFreqMz), where 
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * hfClkFreqMz is the frequency of HfClk0 in MHz.
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 64


 126:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_lp_limitations LP Limitations
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When the system is in LP mode, the core regulator voltage is set to
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * <b>1.1 V (nominal)</b> and the following limitations must be met:
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - The maximum operating frequency for all Clk_HF paths must not exceed 
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <b>150 MHz*</b>, and peripheral and slow clock must 
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     not exceed <b>100 MHz *</b>
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - The total current consumption must be less than or equal to 
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <b>250 mA *</b>
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning * - Numbers shown are approximate and real limit values may be
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * different because they are device specific. You should refer to the device 
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * datasheet for exact values of maximum frequency and current in system LP mode.
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_switching_into_ulp Switching the System into Ultra Low Power
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Before switching into system ULP mode, ensure that the device meets 
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_ulp_limitations. Decrease the clock frequencies, 
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * and slow or disable peripherals. Also ensure that appropriate wait state 
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * values are set for the flash. Flash wait states can be set by calling 
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * SysLib function Cy_SysLib_SetWaitStates(true, hfClkFreqMz), where hfClkFreqMz 
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * is the frequency of HfClk0 in MHz.
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * After the \ref group_syspm_ulp_limitations are met and appropriate wait 
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * states are set, you must set ULP voltage for the active core regulator:
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * If active core regulator is the LDO Core Voltage Regulator, call 
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_LdoSetVoltage(CY_SYSPM_LDO_VOLTAGE_ULP)
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * If active core regulator is the Buck Core Voltage Regulator, then call 
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_BuckSetVoltage1(CY_SYSPM_BUCK_OUT1_VOLTAGE_ULP)
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_ulp_limitations ULP Limitations
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When the system is in ULP mode the core regulator voltage is set to <b>0.9 V 
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * (nominal)</b> and the following limitations must be meet:
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - The maximum operating frequency for all Clk_HF paths must not exceed 
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <b>50 MHz *</b>, whereas the peripheral and slow clock must not exceed 
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <b>25 MHz *</b>. 
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - The total current consumption must be less than or equal 
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     to <b>20 mA*</b>
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   - the flash write operations are prohibited. The flash works in the 
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     Read-only operation. If Write operations are required, you must switch to
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     the system LP mode.
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning * - Numbers shown are approximate and real limit values may be
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * different because they are device specific. You should refer to the device 
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * datasheet for exact values of maximum frequency and current in system
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * ULP mode.
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_switching_into_sleep Switching CPU into Sleep
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For multi-CPU devices, the Cy_SysPm_CpuEnterSleep() switches only the CPU 
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * that calls the function into the CPU Sleep power mode. 
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * All pending interrupts must be cleared before the CPU is put into a 
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Sleep mode, even if they are masked.
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 65


 183:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The CPU event register can be set in the past, for example, as a result of 
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * internal system calls. So an old event can cause the CPU to not enter 
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Sleep mode upon WFE(). Therefore usually the WFE() is used in an idle loop or 
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * polling loop as it might or might not cause entering of CPU Sleep mode. If 
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the idle loop or polling loop is not used, then it is recommended to use 
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * WFI() instruction.
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_switching_into_deepsleep Switching the System or CPU into Deep Sleep
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For multi-CPU devices, the Cy_SysPm_CpuEnterDeepSleep() function switches 
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * only the CPU that calls the function into the CPU Deep Sleep power mode. 
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To set the whole system into Deep Sleep power mode, ensure that all CPUs call 
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the Cy_SysPm_CpuEnterDeepSleep() function.
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * There are situations when the system does not switch into the Deep Sleep 
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * power mode immediately after the last CPU calls Cy_SysPm_CpuEnterDeepSleep(). 
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The system will switch into Deep Sleep mode automatically a short time later, 
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * after the low power circuits are ready to switch into Deep Sleep. Refer to 
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the Cy_SysPm_CpuEnterDeepSleep() description for more detail.
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * All pending interrupts must be cleared before the system is put into a 
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Deep Sleep mode, even if they are masked.
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The CPU event register can be set in the past, for example, as a result of 
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * internal system calls. So an old event can cause the CPU to not enter Deep 
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Sleep mode upon WFE(). Therefore usually the WFE() is used in an idle loop or 
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * polling loop as it might or might not cause entering of CPU Deep Sleep mode. 
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * If the idle loop or polling loop is not used, then it is recommended to use 
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * WFI() instruction. 
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For single-CPU devices, SysPm functions that return the status of the 
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * unsupported CPU always return CY_SYSPM_STATUS_<CPU>_DEEPSLEEP.
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_wakingup_from_sleep_deepsleep Waking Up from Sleep or Deep Sleep
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For Arm-based devices, an interrupt is required for the CPU to wake up. 
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For multi-CPU devices, one CPU can wake up the other CPU by sending the 
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * event instruction. Use the Cy_SysPm_CpuSendWakeupEvent() function.
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_switching_into_hibernate Switching System to Hibernate
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * If you call Cy_SysPm_SystemEnterHibernate() from either CPU, the system will
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * be switched into the Hibernate power mode directly, because there is no 
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * handshake between CPUs.
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_wakingup_from_hibernate Waking Up from Hibernate
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The system can wake up from Hibernate mode by configuring the following wakeup
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * sources:
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - Wakeup pin
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - LP Comparator
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - RTC alarm
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - WDT interrupt
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Wakeup is supported from device specific pin(s) with programmable polarity. 
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Additionally, unregulated peripherals can wake the system under some 
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * conditions. For example, a low power comparator can wake the system by 
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * comparing two external voltages, but does not support comparison to an 
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * internally-generated voltage. The backup power domain remains functional, and 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 66


 240:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * if present it can schedule an alarm to wake the system from Hibernate using 
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the RTC. Alternatively, the Watchdog Timer (WDT) can be configured to wake-up 
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the system by WDT interrupt. Refer to \ref Cy_SysPm_SetHibernateWakeupSource()
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * for more detail.
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_system_reg_curr_mode System Regulator Current Mode
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * In addition to system ULP and LP modes, the five different resource 
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * power settings can be configured to reduce current consumption:
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# <b>Linear regulator low power mode</b>. Can be used only if core current
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    is below the LDO regulator LP threshold.
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# <b>POR/BOD circuit low power mode</b>. Requires compatible power supply 
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    stability due to stability increase response time.
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# <b>Bandgap reference circuits low power mode</b> (turns on Deep Sleep 
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    Bandgap). Requires design to accept reduced Vref accuracy. Active ref can 
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    be turned off after this feature is enabled.
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# <b>Reference buffer circuit low power mode</b>. Requires design to accept 
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    reduced Vref accuracy.
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# <b>Current reference circuit low power mode</b>. Require design to accept 
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    reduced Iref accuracy.
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * These five sub features can modify both system LP or ULP modes as they are 
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * independent from LP/ULP settings. 
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When all five sub features are set to their low power modes, the system 
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * operates in regulator minimum current mode. In regulator minimum current mode,
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the system current consumption is limited to a device-specific value. Refer to 
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the device datasheet for the exact current consumption value in regulator 
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * minimum current mode.
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When all five sub features are set to their normal mode, the system operates
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * in regulator normal current mode. When regulator normal current mode is set, 
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the system may operate at device maximum current.
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_system_set_min_reg_curr_mode Setting Minimum System Regulator Current Mod
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Before setting the regulator minimum current mode ensure that current limits 
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * are be met. After current limits are met, call the 
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_SystemSetNormalRegulatorCurrent() function. 
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_system_set_normal_reg_curr_mode Setting Normal System Regulator Current M
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To set regulator normal current mode, call the 
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_SystemSetNormalRegulatorCurrent() function. After the function call, 
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the current limits can be increased to a maximum current, depending on what 
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * system power mode is set: LP or ULP.
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_managing_pmic Managing PMIC
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The SysPm driver also provides an API to configure the internal power 
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * management integrated circuit (PMIC) controller for an external PMIC that 
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * supplies Vddd. Use the API to enable the internal PMIC controller output that
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * is routed to pmic_wakeup_out pin, and configure the polarity of the PMIC 
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controller input (pmic_wakeup_in) that is used to wake up the PMIC.
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The PMIC controller is automatically enabled when:
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * The PMIC is locked by a call to Cy_SysPm_PmicLock()
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * The configured polarity of the PMIC input and the polarity driven to 
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   pmic_wakeup_in pin matches.
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 67


 297:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Because a call to Cy_SysPm_PmicLock() automatically enables the PMIC
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controller, the PMIC can remain disabled only when it is unlocked. See Cy_SysPm_PmicUnlock() 
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * for more detail.
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Use Cy_SysPm_PmicIsLocked() to read the current PMIC lock status.
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To enable the PMIC, use these functions in this order:
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \code{.c}
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock();
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicEnable();
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicLock();
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \endcode
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To disable the PMIC controller, unlock the PMIC. Then call 
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicDisable() with the inverted value of the current active state of 
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the pmic_wakeup_in pin.
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For example, assume the current state of the pmic_wakeup_in pin is active low.
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To disable the PMIC controller, call these functions in this order:
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \code{.c}
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock();
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicDisable(CY_SYSPM_PMIC_POLARITY_HIGH);
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \endcode
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Note that you do not call Cy_SysPm_PmicLock(), because that automatically 
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * enables the PMIC.
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * While disabled, the PMIC controller is automatically enabled when the 
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * pmic_wakeup_in pin state is changed into a high state.
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To disable the PMIC controller output, call these functions in this order:
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock();
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicDisableOutput();
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Do not call Cy_SysPm_PmicLock() (which automatically enables the PMIC 
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controller output).
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When disabled, the PMIC controller output is enabled when the PMIC is locked, 
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * or by calling Cy_SysPm_PmicEnableOutput().
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_managing_backup_domain Managing the Backup Domain
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The SysPm driver provide functions to:
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * Configure Supercapacitor charging
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * Select power supply source (Vbackup or Vddd) for Vddbackup
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * Measure Vddbackup using the ADC
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to the \ref group_syspm_functions_backup functions for more detail.
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_cb SysPm Callbacks
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The SysPm driver handles low power callbacks declared in the application. 
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * If there are no callbacks registered, the device executes the power mode 
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * transition. However, frequently your application firmware must make 
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * modifications for low power mode. For example, you may need to disable a 
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * peripheral, or ensure that a message is not being transmitted or received.
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To enable this, the SysPm driver implements a callback mechanism. When a lower
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 68


 354:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * power mode transition is about to take place (either entering or exiting 
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_system_power_modes), the registered callbacks for that 
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * transition are called.
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The SysPm driver organizes all the callbacks into a linked list. While 
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * entering a low power mode, SysPm goes through that linked list from first to 
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * last, executing the callbacks one after another. While exiting low power mode,
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * SysPm goes through that linked list again, but in the opposite direction from 
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * last to first. This ordering supports prioritization of callbacks relative to 
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the transition event. 
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For example, the picture below shows three callback structures organized into 
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * a linked list: myDeepSleep1, myDeepSleep2, myDeepSleep3 (represented with the 
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref cy_stc_syspm_callback_t configuration structure). Each structure 
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * contains, among other fields, the address of the callback function. The code 
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * snippets below set this up so that myDeepSleep1 is called first when entering 
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the low power mode. This also means that myDeepSleep1 will be the last one to 
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * execute when exiting the low power mode.
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The callback structures after registration:
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \image html syspm_2_10_after_registration.png
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Your application must register each callback, so that SysPm can execute it. 
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Upon registration, the linked list is built by the SysPm driver. Notice 
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the &myDeepSleep1 address in the myDeepSleep1 
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref cy_stc_syspm_callback_t structure. This is filled in by the SysPm driver 
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * when you register myDeepSleep1. The order in which the callbacks are 
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * registered in the application defines the order of their execution by the 
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * SysPm driver. Call \ref Cy_SysPm_RegisterCallback() to register each 
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callback function. 
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * A callback function is typically associated with a particular driver that 
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * handles the peripheral. So the callback mechanism enables a peripheral to 
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * prepare for a low power mode (for instance, shutting down the analog part); 
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * or to perform tasks while exiting a low power mode (like enabling the analog 
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * part again).
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * With the callback mechanism you can prevent switching into a low power mode if
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * a peripheral is not ready. For example, driver X is in the process of 
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * receiving a message. In the callback function implementation simply return 
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_FAIL in a response to CY_SYSPM_CHECK_READY.
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * If success is returned while executing a callback, the SysPm driver calls the 
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * next callback and so on to the end of the list. If at some point a callback 
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * returns CY_SYSPM_FAIL in response to the CY_SYSPM_CHECK_READY step, all the 
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callbacks that have already executed are executed in reverse order, with the 
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_CHECK_FAIL mode parameter. This allows each callback to know that 
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * entering the low power mode has failed. The callback can then undo whatever it
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * did to prepare for low power mode, if required. For example, if the driver X 
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callback shut down the analog part, it can re-enable the analog part.
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Let's switch to an example explaining the implementation, setup, and 
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * registration of three callbacks (myDeepSleep1, myDeepSleep2, myDeepSleep2) in 
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the application. The \ref group_syspm_cb_config_consideration are provided 
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * after the \ref group_syspm_cb_example.
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_cb_example SysPm Callbacks Example
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 69


 411:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The following code snippets demonstrate how use the SysPm callbacks mechanism.
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * We will build the prototype for an application that registers 
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * three callback functions:
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    -# myDeepSleep1 - Handles CPU Deep Sleep.
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    -# myDeepSleep1 - Handles CPU Deep Sleep and is associated with peripheral 
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *       HW1_address (see <a href="..\..\pdl_user_guide.pdf">PDL Design</a> 
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *       section to learn about the base hardware address).
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    -# myDeepSleep2 - Handles entering and exiting system Deep Sleep and is 
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *       associated with peripheral HW2_address.
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * We set things up so that the myDeepSleep1 and myDeepSleep2 callbacks do 
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * nothing while entering the low power mode (skip on 
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_SKIP_BEFORE_TRANSITION - 
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * see \ref group_syspm_cb_function_implementation in 
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_cb_config_consideration).
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Skipping the actions while entering low power might be useful if you need 
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * to save time while switching low power modes. This is because the callback
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * function with a skipped mode is not even called avoiding the call and return
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * overhead.
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Let's first declare the callback functions. Each gets the pointer to the 
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref cy_stc_syspm_callback_params_t structure as the argument.
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Callback_Func_Declaration
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Now we setup the \ref cy_stc_syspm_callback_params_t structures that we will
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * pass to the callback functions. Note that for the myDeepSleep1 and 
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * myDeepSleep2 callbacks we also pass pointers to the peripherals related to 
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * that callback (see <a href="..\..\pdl_user_guide.pdf">PDL Design</a> section 
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * to learn about base hardware addresses). 
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The configuration considerations related to this structure are described 
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * in \ref group_syspm_cb_parameters in \ref group_syspm_cb_config_consideration.
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Callback_Params_Declaration
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Now we setup the actual callback configuration structures. Each of these 
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * contains, among the other fields, the address of the 
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref cy_stc_syspm_callback_params_t we just set up. We will use the callback 
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * configuration structures later in the code to register the callbacks in the 
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * SysPm driver. Again, we set things up so that the myDeepSleep1 and 
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * myDeepSleep1 callbacks do nothing while entering the low power mode 
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * (skip on CY_SYSPM_SKIP_BEFORE_TRANSITION) - see 
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_cb_function_implementation in 
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_cb_config_consideration.
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Callback_Structure_Declaration
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Note that in each case the last two fields are NULL. These are fields used by 
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the SysPm driver to set up the linked list of callback functions.
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The callback structures are now defined and allocated in the user's 
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * memory space:
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \image html syspm_2_10_before_registration.png
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Now we implement the callback functions. See 
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_cb_function_implementation in 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 70


 468:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_cb_config_consideration for the instructions on how the 
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callback functions should be implemented.
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Callback_Func_Implementation
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Finally, we register the callbacks so that the SysPm driver knows about them. 
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The order in which the callbacks will be called depends upon the order in 
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * which the callbacks are registered. If there are no callbacks registered, 
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the device just executes the power mode transition.
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Callbacks that reconfigure global resources, such as clock frequencies, should
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * be registered last. They then modify global resources as the final step before
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * entering the low power mode, and restore those resources first, as the system
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * returns from low power mode.
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_RegisterCallback
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * We are done configuring three callbacks. Now the SysPm driver will execute the
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callbacks appropriately whenever there is a call to a power mode transition 
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * function: \ref Cy_SysPm_CpuEnterSleep(), \ref Cy_SysPm_CpuEnterDeepSleep(), 
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_SystemEnterUlp(), \ref Cy_SysPm_SystemEnterLp(), and 
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_SystemEnterHibernate().
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note On a wakeup from hibernate the device goes through a reset, so the 
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callbacks with CY_SYSPM_AFTER_TRANSITION are not executed. Refer to 
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_SystemEnterHibernate() for more detail.
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to \ref group_syspm_cb_unregistering in 
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_cb_config_consideration to learn what to do if you need to 
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * remove the callback from the linked list. You might want to unregister the 
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callback for debug purposes.
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to \ref group_syspm_cb_flow in \ref group_syspm_cb_config_consideration 
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * to learn about how the SysPm processes the callbacks.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_cb_config_consideration Callback Configuration Considerations
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_cb_parameters Callback Function Parameters
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The <b>callbackParams</b> parameter of the callback function is a 
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref cy_stc_syspm_callback_params_t structure. The second parameter 
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * (<b>mode</b>) is for internal use. In the example code we used a 
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * dummy value CY_SYSPM_CHECK_READY to eliminate compilation errors associated 
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * with the enumeration. The driver sets the <b>mode</b> field to the correct 
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * value when calling the callback functions (the mode is referred to as step in 
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the \ref group_syspm_cb_function_implementation). The callback function reads 
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the value and executes code based on the mode set by the SysPm driver. 
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The <b>base</b> and <b>context</b> fields are optional and can be NULL. 
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Some drivers require a base hardware address and context to store information 
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * about the mode transition. If your callback routine requires access to the 
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * driver registers or context, provide those values 
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * (see <a href="..\..\pdl_user_guide.pdf">PDL Design</a> section 
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * to learn about Base Hardware Address). Be aware of MISRA warnings if these 
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * parameters are NULL.
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_cb_structures Callback Function Structure
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For each callback, provide a \ref cy_stc_syspm_callback_t structure. Some 
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * fields in this structure are maintained by the driver. Use NULL for 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 71


 525:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * <b>prevItm</b> and <b>nextItm</b>. The driver uses these fields to build a 
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * linked list of callback functions.
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning The Cy_SysPm_RegisterCallback() function stores a pointer to the 
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * cy_stc_syspm_callback_t structure. Do not modify elements of the 
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * cy_stc_syspm_callback_t structure after the callback is registered. 
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * You are responsible for ensuring that the structure remains in scope. 
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Typically the structure is declared as a global or static variable, or as a 
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * local variable in the main() function.
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_cb_function_implementation Callback Function Implementation
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Every callback function should handle four possible steps (referred to as 
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * "mode") defined in \ref cy_en_syspm_callback_mode_t :
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    * CY_SYSPM_CHECK_READY - Check if ready to enter a power mode.
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    * CY_SYSPM_BEFORE_TRANSITION - The actions to be done before entering 
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *      the low power mode.
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    * CY_SYSPM_AFTER_TRANSITION - The actions to be done after exiting the 
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *      low power mode.
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    * CY_SYSPM_CHECK_FAIL - Roll back any actions performed in the callback 
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *      executed previously with CY_SYSPM_CHECK_READY.
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * A callback function can skip steps (see \ref group_syspm_skip_callback_modes).
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * In our example myDeepSleep1 and myDeepSleep2 callbacks do nothing while 
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * entering the low power mode (skip on CY_SYSPM_BEFORE_TRANSITION). If there is
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * anything preventing low power mode entry - return CY_SYSPM_FAIL in response to
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_CHECK_READY in your callback implementation. Note that the callback 
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * should return CY_SYSPM_FAIL only in response to CY_SYSPM_CHECK_READY. The 
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * callback function should always return CY_SYSPM_PASS for other modes: 
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_CHECK_FAIL, CY_SYSPM_BEFORE_TRANSITION, and CY_SYSPM_AFTER_TRANSITION
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * (see \ref group_syspm_cb_flow).
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_cb_flow Callbacks Execution Flow
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This section explains what happens during a power transition, when callbacks 
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * are implemented and set up correctly. The following discussion assumes:
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * All required callback functions are defined and implemented
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * All cy_stc_syspm_callback_t structures are filled with required values
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * All callbacks are successfully registered 
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * User calls one of the power mode transition functions: \ref Cy_SysPm_CpuEnterSleep(), 
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_CpuEnterDeepSleep(), \ref Cy_SysPm_SystemEnterUlp(), 
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_SystemEnterLp(), or \ref Cy_SysPm_SystemEnterHibernate(). 
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * It calls each callback with the mode set to CY_SYSPM_CHECK_READY. This 
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * triggers execution of the code for that mode inside of each user callback.
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The intent of CY_SYSPM_CHECK_READY is to only signal if the resources is ready
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * to transition. Ideally, no transition changes should be made at this time. 
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * In some cases a small change may be required. For example a communication 
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * resource callback may set a flag telling firmware not to start any new 
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * transition.
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * If that process is successful for all callbacks, then 
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_ExecuteCallback() calls each callback with the mode set to 
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_BEFORE_TRANSITION. This triggers execution of the code for that mode 
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * inside each user callback. We then enter the low power mode after all callback
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * are executes.
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 72


 582:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When exiting the low power mode, the SysPm driver executes 
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_ExecuteCallback() again. This time it calls each callback in 
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * reverse order, with the mode set to CY_SYSPM_AFTER_TRANSITION. This triggers 
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * execution of the code for that mode inside each user callback. The final 
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * execution of callbacks depends on the low power mode in which callbacks were 
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * called:
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * For CPU Sleep or Deep Sleep power modes, the CY_SYSPM_AFTER_TRANSITION mode 
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   is called after the CPU wakes from Sleep or Deep Sleep.
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * For system Hibernate, the CY_SYSPM_AFTER_TRANSITION mode is not executed 
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   because the device reboots after the wakeup from the Hibernate.
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * * For system LP and ULP modes, after the CY_SYSPM_AFTER_TRANSITION mode was 
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   called the system remains in the new power mode: LP or ULP.
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * A callback can return CY_SYSPM_FAIL only while executing the 
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * CY_SYSPM_CHECK_READY mode. If that happens, then the remaining callbacks are 
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * not executed. Any callbacks that have already executed are called again, in 
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * reverse order, with CY_SYSPM_CHECK_FAIL. This allows the system to return to 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the previous state. If a callback returns a fail then any of the functions 
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * (\ref Cy_SysPm_CpuEnterSleep(), \ref Cy_SysPm_CpuEnterDeepSleep(), 
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_SystemEnterUlp(), \ref Cy_SysPm_SystemEnterLp(), or 
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref Cy_SysPm_SystemEnterHibernate()) that attempt to switch the device into 
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * a low power mode will also return CY_SYSPM_FAIL.
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Callbacks that reconfigure global resources, such as clock frequencies, 
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * should be registered last. They then modify global resources as the final 
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * step before entering the low power mode, and restore those resources first, 
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * as the system returns from low power mode.
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_cb_unregistering Callback Unregistering
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Unregistering the callback might be useful when you need to dynamically manage
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the callbacks.
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_UnregisterCallback
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The callback structures after myDeepSleep2 callback is unregistered:
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \image html syspm_2_10_unregistration.png
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \section group_syspm_definitions Definitions
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * <table class="doxtable">
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <th>Term</th>
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <th>Definition</th>
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>LDO</td>
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Low dropout linear regulator. The functions that manage this 
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         block are grouped as \ref group_syspm_functions_ldo under 
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         \ref group_syspm_functions_core_regulators</td>
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>SIMO Buck</td>
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Single inductor multiple Output Buck regulator, referred as 
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         "Buck regulator" throughout the documentation. The functions that 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 73


 639:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         manage this block are grouped as \ref group_syspm_functions_buck under
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         \ref group_syspm_functions_core_regulators</td>
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>SISO Buck</td>
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Single inductor single output Buck regulator, referred as 
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         "Buck regulator" throughout the documentation. The functions that 
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         manage this block are grouped as \ref group_syspm_functions_buck under
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         \ref group_syspm_functions_core_regulators</td>
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>PMIC</td>
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Power management integrated circuit. The functions that manage this 
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         block are grouped as \ref group_syspm_functions_pmic</td>
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>LP</td>
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>System low power mode. See the \ref group_syspm_switching_into_lp 
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         section for details.</td>
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>ULP</td>
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>System ultra low power mode. See the 
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         \ref group_syspm_switching_into_ulp section for details.</td>
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * </table>
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \section group_syspm_section_more_information More Information
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For more information on the SysPm driver,
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * refer to the technical reference manual (TRM).
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \section group_syspm_MISRA MISRA-C Compliance
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The SysPm driver does not have any specific deviations.
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \section group_syspm_changelog Changelog
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * <table class="doxtable">
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td rowspan="6">4.0</td>
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          Flattened the organization of the driver source code into the single source directory an
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Driver library directory-structure simplification.</td>
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          Changed power modes names. See \ref group_syspm_system_power_modes.
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          Renamed the following functions: 
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_Sleep to Cy_SysPm_CpuEnterSleep
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_DeepSleep to Cy_SysPm_CpuEnterDeepSleep
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_Hibernate to Cy_SysPm_SystemEnterHibernate
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_SleepOnExit to Cy_SysPm_CpuSleepOnExit
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 74


 696:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_EnterLowPowerMode to Cy_SysPm_SystemSetMinRegulatorCurrent
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_ExitLowPowerMode to Cy_SysPm_SystemSetNormalRegulatorCurrent
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           - Cy_SysPm_IsLowPower to Cy_SysPm_IsSystemUlp
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          For all renamed functions, added BWC macros to simplify migration.
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Device power modes simplification</td>
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Added the following functions:
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_LdoSetMode
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_LdoGetMode
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_WriteVoltageBitForFlash
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_SaveRegisters
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_RestoreRegisters
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_CpuSendWakeupEvent
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_SystemIsMinRegulatorCurrentSet
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_SystemEnterLp
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_SystemEnterUlp
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_IsSystemLp
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Added new functionality to configure device power modes</td>
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td> 
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          Callback mechanism changes:
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Removed the limitation for numbers of registered callbacks. Previously it 
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            was possible to register up to 32 callbacks. Now the maximum registered 
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            callbacks is not limited by the SysPm driver.
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Internal enhancement in callback execution flow.
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - <b>Changes with BWC issues</b>:
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            -# Removed the <b>mode</b> element from cy_stc_syspm_callback_params_t
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *               structure. Now this element is a separate parameter in the 
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *               callback function.
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            -# Changed the interface of the callback function, 
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *               added the cy_en_syspm_callback_mode_t mode parameter:
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *               - was cy_en_syspm_status_t FuncName (cy_stc_syspm_callback_params_t *callbackParams
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *               - now cy_en_syspm_status_t FuncName (cy_stc_syspm_callback_params_t *callbackParams
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *                 cy_en_syspm_callback_mode_t mode);
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Callback mechanism enhancements</td>
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Added register access layer. Use register access macros instead
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         of direct register access using dereferenced pointers.</td>
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Makes register access device-independent, so that the PDL does 
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         not need to be recompiled for each supported part number.</td>
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Added \ref group_syspm_migration_guide_for_syspm_4_0.</td>
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Provided a guidance for migrating to the latest SysPm driver version</td>
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td rowspan="2">3.0</td>
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Removed three functions:
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_Cm4IsLowPower
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 75


 753:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_Cm0IsLowPower
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - Cy_SysPm_IoFreeze
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Removed the following macros:
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - CY_SYSPM_STATUS_CM0_LOWPOWER
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          - CY_SYSPM_STATUS_CM4_LOWPOWER
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Removed the two functions Cy_SysPm_Cm4IsLowPower, 
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Cy_SysPm_Cm0IsLowPower because low power mode is related to the 
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         device and not to the CPU.
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         The function Cy_SysPm_IsSystemUlp must be used instead of these two 
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         functions.
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Removed Cy_SysPm_IoFreeze because the are no known use cases with IOs 
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         freeze in power modes, except Hibernate. In Hibernate power mode, the
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         IOs are frozen automatically.
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Corrected the syspm callback mechanism behavior. Now callbacks with 
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         CY_SYSPM_AFTER_TRANSITION mode are executed from the last registered
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         to the first registered. Previously callbacks with 
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         CY_SYSPM_AFTER_TRANSITION mode were executed from last executed to 
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         the first registered.
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Corrected the syspm callbacks execution sequence</td>
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>2.21</td>
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Removed saving/restoring the SysClk measurement counters while 
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         in Deep Sleep routine
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Removed possible corruption of SysClk measurement counters if the 
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         core wakes up from the Deep Sleep.
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>2.20</td>
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td> \n
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Added support for changing core voltage when the protection context
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            is other that zero. Such support is available only for devices 
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            that support modifying registers via syscall.
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * For preproduction PSoC 6 devices the changing core voltage
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            is prohibited when the protection context is other than zero.
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Updated the following functions. They now have a 
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            \ref cy_en_syspm_status_t return value and use a syscall:
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            - Cy_SysPm_LdoSetVoltage
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            - Cy_SysPm_BuckSetVoltage1
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            - Cy_SysPm_BuckEnable
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            No backward compatibility issues.
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Added new CY_SYSPM_CANCELED element in 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 76


 810:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            the \ref cy_en_syspm_status_t.
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Documentation updates.
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Added warning that
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            Cy_SysPm_PmicDisable(CY_SYSPM_PMIC_POLARITY_LOW) is not 
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            supported by hardware.
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Added support for changing the core voltage in protection context 
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         higher than zero (PC > 0).
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         Documentation update and clarification
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>2.10</td>
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td> \n
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Changed names for all Backup, Buck-related functions, defines, 
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            and enums
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Changed next power mode function names:
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            Cy_SysPm_EnterLowPowerMode
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            Cy_SysPm_ExitLpMode
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            Cy_SysPm_SetHibWakeupSource
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            Cy_SysPm_ClearHibWakeupSource
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            Cy_SysPm_GetIoFreezeStatus
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Changed following enumeration names:
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            cy_en_syspm_hib_wakeup_source_t
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            cy_en_syspm_simo_buck_voltage1_t
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            cy_en_syspm_simo_buck_voltage2_t
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Updated Power Modes documentation section
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Added Low Power Callback Managements section
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Documentation edits 
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td> \n
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Improvements made based on usability feedback
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *          * Documentation update and clarification
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>2.0</td>
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Enhancement and defect fixes:
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         * Added input parameter(s) validation to all public functions
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         * Removed "_SysPm_" prefixes from the internal functions names
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         * Changed the type of elements with limited set of values, from 
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           uint32_t to enumeration
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         * Enhanced syspm callback mechanism
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         * Added functions to control:
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           * Power supply for the Vddbackup
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           * Supercapacitor charge
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *           * Vddbackup measurement by ADC
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </td>
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td></td>
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>1.0</td>
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Initial version</td>
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td></td>
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 77


 867:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * </table>
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsection group_syspm_migration_guide_for_syspm_4_0 Migration Guide: Moving to SysPm v4.0
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This section provides a guideline to migrate from v2.21 to v4.0 of the SysPm 
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * driver.
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_migration_into_4_0_intro Introduction
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * If your application currently uses SysPm v2.21 APIs, you must
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * migrate to SysPm v4.0 so that your application continues to operate.
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Take a few minutes to review the following information:
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - The APIs related to PSoC 6 \ref group_syspm_power_modes are changed. Old 
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   power modes APIs function names are now deprecated and should not be used 
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   in new applications.
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - The \ref group_syspm_cb mechanism is changed. The mode element is removed 
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   from cy_stc_syspm_callback_params_t structure. Now this element is a 
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   separate parameter in the callback function.
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_migration_into_4_0_names Migrating to new power modes APIs.
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The table below shows the new APIs names that should be used in the 
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * application instead of old names:
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * <table class="doxtable">
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr><th>SysPm v2.21 API name</th><th>SysPm v4.0 API name</th><th>Comment</th></tr>
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_Sleep</td>
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_CpuEnterSleep</td>
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Renamed, no functional changes</td>
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_DeepSleep</td>
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_CpuEnterDeepSleep</td>
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Renamed, no functional changes</td>
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_Hibernate</td>
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_SystemEnterHibernate</td>
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Renamed, no functional changes</td>
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_SleepOnExit</td>
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_CpuSleepOnExit</td>
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Renamed, no functional changes</td>
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_IsLowPower</td>
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_IsSystemUlp</td>
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Now this function checks whether the device is in ULP mode</td>
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_EnterLowPowerMode</td>
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_SystemSetMinRegulatorCurrent</td>
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>The low power active mode does not exist anymore. 
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         The \ref group_syspm_system_reg_curr_mode is implemented instead </td>
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 78


 924:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     </tr>
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_ExitLowPowerMode</td>
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>\ref Cy_SysPm_SystemSetNormalRegulatorCurrent</td>
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>The low power active mode does not exist anymore. 
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         The \ref group_syspm_system_reg_curr_mode is implemented instead</td>
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_Cm4IsLowPower</td>
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Removed</td>
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>This function is removed because low power mode is related to the system
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         and not to the CPU</td>
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_Cm0IsLowPower</td>
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Removed</td>
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>This function is removed because low power mode is related to the system
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         and not to the CPU</td>
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Cy_SysPm_IoFreeze</td>
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Removed</td>
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>This function is removed because there are no known use cases to
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         freeze in power modes other than Hibernate</td>
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * </table>
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * In addition to renamed power modes APIs, the following defines and enum 
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * elements names are changed:
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * <table class="doxtable">
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr><th>SysPm v2.21 defines</th><th>SysPm v4.0 defines</th><th>Comment</th></tr>
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>CY_SYSPM_ENTER_LP_MODE</td>
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>CY_SYSPM_ULP</td>
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>The \ref cy_en_syspm_callback_type_t element is renamed to align 
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         callback types names to new power modes names</td>
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>CY_SYSPM_EXIT_LP_MODE</td>
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>CY_SYSPM_LP</td>
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>The \ref cy_en_syspm_callback_type_t element is renamed to align 
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         callback types names to new power modes names</td>
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   <tr>
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>CY_SYSPM_STATUS_SYSTEM_LOWPOWER</td>
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>CY_SYSPM_STATUS_SYSTEM_ULP</td>
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     <td>Status define, renamed to align new power modes names 
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *         and abbreviations</td>
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   </tr>
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * </table>
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \subsubsection group_syspm_migration_into_4_0_callbacks Migrating to SysPm v4.0 callbacks
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Review this section if your application is using the syspm callback mechanism.
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To migrate to SysPm v4.0 callbacks you need to perform the following steps:
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# Remove mode element from all \ref cy_stc_syspm_callback_params_t 
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    structures defined in your application. In SysPm v2.21 this structure is:
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 79


 981:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \code{.c}
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    cy_stc_syspm_callback_params_t deepSleepParam1 = 
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    {
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        CY_SYSPM_CHECK_READY, 
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        &HW1_address,
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        &context
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    };
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \endcode
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    In SysPm v4.0 this structure should be:
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \code{.c}
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    cy_stc_syspm_callback_params_t deepSleepParam1 = 
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    {
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        &HW1_address,
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        &context
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    };
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \endcode
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# Update all defined syspm callback function prototypes to have two 
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    parameters instead of one. The SysPm v2.21 callback function prototype is:
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \code{.c}
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    cy_en_syspm_status_t Func1 (cy_stc_syspm_callback_params_t *callbackParams);
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \endcode
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    The SysPm v4.0 callback function prototype should be:
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \code{.c}
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    cy_en_syspm_status_t Func1 (cy_stc_syspm_callback_params_t *callbackParams, cy_en_syspm_callba
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \endcode
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * -# Change the syspm callback function implementation to not use a mode
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    value as an element of the callbackParams structure, but, as separate 
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    function parameter:
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    SysPm v2.21 callback function implementation:
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \code{.c}
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    cy_en_syspm_status_t Func1(cy_stc_syspm_callback_params_t *callbackParams)
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    {
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        cy_en_syspm_status_t retVal = CY_SYSPM_FAIL;
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        switch(callbackParams->mode)
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        {
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            case CY_SYSPM_CHECK_READY:
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            ...
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        }
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        return (retVal);
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    }
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \endcode
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    SysPm v4.0 callback function implementation:
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \code{.c}
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    cy_en_syspm_status_t Func1(cy_stc_syspm_callback_params_t *callbackParams, cy_en_syspm_callbac
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    {
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        cy_en_syspm_status_t retVal = CY_SYSPM_FAIL;
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        switch(mode)
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        {
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            case CY_SYSPM_CHECK_READY:
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *            ...
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        }
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *        return (retVal);
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 80


1038:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    }
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *    \endcode
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * After the changes above are done, you have successfully migrated to SysPm v4.0.
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Do not forget to review newly added functionality for SysPm v4.0 in the 
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \ref group_syspm_changelog.
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \defgroup group_syspm_macros Macros
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \defgroup group_syspm_functions Functions
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     \defgroup group_syspm_functions_general        General
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_power          Power Modes
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_power_status   Power Status
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_iofreeze       I/Os Freeze
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_core_regulators    Core Voltage Regulation 
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \{
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     \defgroup group_syspm_functions_ldo      LDO
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *     \defgroup group_syspm_functions_buck     Buck
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \}
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_pmic       PMIC
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_backup     Backup Domain
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   \defgroup group_syspm_functions_callback   Low Power Callbacks
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \}
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \defgroup group_syspm_data_structures Data Structures
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \defgroup group_syspm_data_enumerates Enumerated Types
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #if !defined (CY_SYSPM_H)
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_H
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #include <stdbool.h>
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #include <stddef.h>
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #include "cy_device.h"
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #include "cy_device_headers.h"
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #include "cy_syslib.h"
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #ifdef __cplusplus
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** extern "C" {
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #endif
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *       Register Constants
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_macros
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** Driver major version */
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_DRV_VERSION_MAJOR       4
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** Driver minor version */
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_DRV_VERSION_MINOR       0
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** SysPm driver identifier */
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 81


1095:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_ID                      (CY_PDL_DRV_ID(0x10U))
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *       Internal Defines
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \cond INTERNAL */
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_SetHibernateWakeupSource() and for Cy_SysPm_ClearHibern
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_WAKE_UP_SOURCE_VALID(wakeupSource)   (0UL == ((wakeupSource) & \
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((uint32_t) ~(CY_SYSPM_HIB_WAKEUP_SOURSE_M
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_PmicDisable() function */
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_POLARITY_VALID(polarity)            (((polarity) == CY_SYSPM_PMIC_POLARITY_LOW)
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((polarity) == CY_SYSPM_PMIC_POLARITY_HIGH
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_BuckSetVoltage1() function */
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_BUCK_VOLTAGE1_VALID(voltage)        (((voltage) == CY_SYSPM_BUCK_OUT1_VOLTAGE_0
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT1_VOLTAGE_1
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_BuckSetVoltage2() function */
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_BUCK_VOLTAGE2_VALID(voltage)        (((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_BUCK_OUT2_VOLTAGE_1
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_BuckIsOutputEnabled() function */
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_BUCK_OUTPUT_VALID(output)           (((output) == CY_SYSPM_BUCK_VBUCK_1) || \
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((output) == CY_SYSPM_BUCK_VRF))
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_LdoSetVoltage() function */
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_LDO_VOLTAGE_VALID(voltage)          (((voltage) == CY_SYSPM_LDO_VOLTAGE_0_9V) |
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((voltage) == CY_SYSPM_LDO_VOLTAGE_1_1V))
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_ExecuteCallback() function */
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_CALLBACK_TYPE_VALID(type)           (((type) == CY_SYSPM_SLEEP) || \
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((type) == CY_SYSPM_DEEPSLEEP) || \
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((type) == CY_SYSPM_HIBERNATE) || \
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((type) == CY_SYSPM_ULP) || \
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((type) == CY_SYSPM_LP))
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_ExecuteCallback() function */
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_CALLBACK_MODE_VALID(mode)           (((mode) == CY_SYSPM_CHECK_READY) || \
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((mode) == CY_SYSPM_CHECK_FAIL) || \
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((mode) == CY_SYSPM_BEFORE_TRANSITION) || 
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((mode) == CY_SYSPM_AFTER_TRANSITION))
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_CpuEnterSleep() and for Cy_SysPm_CpuEnterDeepSleep() fu
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_WAIT_FOR_VALID(waitFor)             (((waitFor) == CY_SYSPM_WAIT_FOR_INTERRUPT)
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((waitFor) == CY_SYSPM_WAIT_FOR_EVENT))
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_BackupSetSupply() function */
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 82


1152:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_VDDBACKUP_VALID(vddBackControl)      (((vddBackControl) == CY_SYSPM_VDDBACKUP_D
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                           ((vddBackControl) == CY_SYSPM_VDDBACKUP_V
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                           
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_BackupSuperCapCharge() function */
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_SC_CHARGE_KEY_VALID(key)            (((key) == CY_SYSPM_SC_CHARGE_ENABLE) || \
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                          ((key) == CY_SYSPM_SC_CHARGE_DISABLE))
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_LdoSetMode() function */
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_LDO_MODE_VALID(key)            (((mode) == CY_SYSPM_LDO_MODE_DISABLED) || \
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                     ((mode) == CY_SYSPM_LDO_MODE_NORMAL) || \
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                     ((mode) == CY_SYSPM_LDO_MODE_MIN))
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Macro to validate parameters in Cy_SysPm_WriteVoltageBitForFlash() function */
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_IS_BIT_FOR_FLASH_VALID(value)     (((value) == CY_SYSPM_FLASH_VOLTAGE_BIT_ULP) || 
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                     ((value) == CY_SYSPM_FLASH_VOLTAGE_BIT_LP))
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define of the unlock value for the PMIC functions */
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_PMIC_UNLOCK_KEY                    (0x3AU)
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define of the first wakeup pin bit used in the
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_SetHibernateWakeupSource() function
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_PIN0_POS                (1UL)
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define of the second wakeup pin bit 
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * used in the Cy_SysPm_SetHibernateWakeupSource() function
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_PIN1_POS                (2UL)
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The internal define of the first LPComparator bit 
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * used in the Cy_SysPm_SetHibernateWakeupSource() function
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_LPCOMP0_POS             (4UL)
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The internal define for the second LPComparator bit 
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * used in the Cy_SysPm_SetHibernateWakeupSource() function
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_LPCOMP1_POS             (8UL)
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The internal define of the first LPComparator value 
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * used in the Cy_SysPm_SetHibernateWakeupSource() function
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_LPCOMP0_MASK    (_VAL2FLD(SRSS_PWR_HIBERNATE_MASK_HIBPIN, CY_SYSPM_HIB_
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The internal define of the second LPComparator value 
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * used in the Cy_SysPm_SetHibernateWakeupSource() function
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_LPCOMP1_MASK    (_VAL2FLD(SRSS_PWR_HIBERNATE_MASK_HIBPIN, CY_SYSPM_HIB_
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The internal define of the first wake-up pin value 
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * used in the Cy_SysPm_SetHibernateWakeupSource() function
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 83


1209:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_PIN0_MASK    (_VAL2FLD(SRSS_PWR_HIBERNATE_MASK_HIBPIN, CY_SYSPM_HIB_WAK
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The internal define of the second wake-up pin value used 
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * in the Cy_SysPm_SetHibernateWakeupSource() function
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_PIN1_MASK    (_VAL2FLD(SRSS_PWR_HIBERNATE_MASK_HIBPIN, CY_SYSPM_HIB_WAK
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define for the first LPComparator polarity configuration */
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_LPCOMP0_POLARITY_HIGH_MASK    \
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                   (_VAL2FLD(SRSS_PWR_HIBERNATE_POLARITY_HIBPIN, CY_SYSPM_HIB_WAKEUP
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define for the second LPComparator polarity configuration */
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_LPCOMP1_POLARITY_HIGH_MASK    \
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                   (_VAL2FLD(SRSS_PWR_HIBERNATE_POLARITY_HIBPIN, CY_SYSPM_HIB_WAKEUP
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define for the first wake-up pin polarity configuration */
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_PIN0_POLARITY_HIGH_MASK    \
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                   (_VAL2FLD(SRSS_PWR_HIBERNATE_POLARITY_HIBPIN, CY_SYSPM_HIB_WAKEUP
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The internal define for the second wake-up pin polarity configuration */
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_PIN1_POLARITY_HIGH_MASK    \
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                   (_VAL2FLD(SRSS_PWR_HIBERNATE_POLARITY_HIBPIN, CY_SYSPM_HIB_WAKEUP
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* Internal macro of all possible wakeup sources from hibernate power mode */
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_HIB_WAKEUP_SOURSE_MASK    (CY_SYSPM_HIBERNATE_LPCOMP0_HIGH | CY_SYSPM_HIBERNATE_LP
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                             CY_SYSPM_HIBERNATE_RTC_ALARM    | CY_SYSPM_HIBERNATE_WD
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                             CY_SYSPM_HIBERNATE_PIN0_HIGH    | CY_SYSPM_HIBERNATE_PI
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* The mask for low power modes the power circuits (POR/BOD, Bandgap 
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *  reference, Reference buffer, Current reference) when active core regulator is
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *  LDO
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_PWR_CIRCUITS_LPMODE_ACTIVE_LDO_MASK    (SRSS_PWR_CTL_LINREG_LPMODE_Msk | CY_SYSPM_
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /* The mask for low power modes the power circuits (POR/BOD, Bandgap 
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *  reference, Reference buffer, Current reference) when active core regulator is
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *  Buck
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_PWR_CIRCUITS_LPMODE_ACTIVE_BUCK_MASK    (SRSS_PWR_CTL_PORBOD_LPMODE_Msk |\
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                           SRSS_PWR_CTL_ACT_REF_DIS_Msk |\
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                           SRSS_PWR_CTL_VREFBUF_LPMODE_Msk |\
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                           SRSS_PWR_CTL_IREF_LPMODE_Msk)
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \endcond */
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \defgroup group_syspm_return_status The Power Mode Status Defines
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Defines for the CPU and system power modes status.
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The CM4 is in CPU Active mode */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_CM4_ACTIVE       (0x01U)
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The CM4 is in CPU Sleep mode */
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_CM4_SLEEP        (0x02U)
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 84


1266:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The CM4 is in CPU Deep Sleep mode */
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_CM4_DEEPSLEEP    (0x04U)
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The CM0p is CPU Active mode */
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_CM0_ACTIVE       ((uint32_t) 0x01U << 8U)
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The CM0p is in CPU Sleep mode */
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_CM0_SLEEP        ((uint32_t) 0x02U << 8U)
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The CM0p is in CPU Deep Sleep mode */
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_CM0_DEEPSLEEP    ((uint32_t) 0x04U << 8U)
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The system is Low Power mode */
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_SYSTEM_LP        (0x80U)
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The system is in Ultra Low Power mode */
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_STATUS_SYSTEM_ULP       ((uint32_t) 0x08U << 8U)
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_return_status */
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_macros */
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *       Configuration Structures
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_data_enumerates
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The SysPm function return value status definitions. */
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_SUCCESS        = 0x0U,                                         /**< Successful. */
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BAD_PARAM      = CY_SYSPM_ID | CY_PDL_STATUS_ERROR | 0x01U,    /**< One or more invali
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_TIMEOUT        = CY_SYSPM_ID | CY_PDL_STATUS_ERROR | 0x02U,    /**< A time-out occurre
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_INVALID_STATE  = CY_SYSPM_ID | CY_PDL_STATUS_ERROR | 0x03U,    /**< The operation is n
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                                                  improper state. */
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_CANCELED       = CY_SYSPM_ID | CY_PDL_STATUS_ERROR | 0x04U,    /**< Operation canceled
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_FAIL           = CY_SYSPM_ID | CY_PDL_STATUS_ERROR | 0xFFU     /**< Unknown failure. *
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_status_t;
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This enumeration is used to initialize the functions wait action. The wait actions can be - 
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * an interrupt or an event. Refer to the CMSIS for WFE and WFI instruction explanations.
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_WAIT_FOR_INTERRUPT,    /**< Wait for an interrupt. */
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_WAIT_FOR_EVENT         /**< Wait for an event. */
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_waitfor_t;
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration is used to configure wakeup sources for the System Hibernate 
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   power mode.
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 85


1323:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Wake on a low logic level for the LPComp0. */
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_LPCOMP0_LOW  = CY_SYSPM_HIB_WAKEUP_LPCOMP0_MASK,
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Wake on a high logic level for the LPComp0. */
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_LPCOMP0_HIGH = CY_SYSPM_HIB_WAKEUP_LPCOMP0_MASK | CY_SYSPM_HIB_WAKEUP_LPCOMP
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Wake on a low logic level for the LPComp1. */
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_LPCOMP1_LOW  = CY_SYSPM_HIB_WAKEUP_LPCOMP1_MASK,
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Wake on a high logic level for the LPComp1. */
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_LPCOMP1_HIGH = CY_SYSPM_HIB_WAKEUP_LPCOMP1_MASK | CY_SYSPM_HIB_WAKEUP_LPCOMP
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Configure the RTC alarm as wakeup source. */
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_RTC_ALARM = SRSS_PWR_HIBERNATE_MASK_HIBALARM_Msk,
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Configure the WDT interrupt as wakeup source. */
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_WDT = SRSS_PWR_HIBERNATE_MASK_HIBWDT_Msk,
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Configure a low logic level for the first wakeup-pin. See device datasheet for specific pin
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_PIN0_LOW  = CY_SYSPM_HIB_WAKEUP_PIN0_MASK,
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Configure a high logic level for the first wakeup-pin. See device datasheet for specific pi
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_PIN0_HIGH = CY_SYSPM_HIB_WAKEUP_PIN0_MASK | CY_SYSPM_HIB_WAKEUP_PIN0_POLARIT
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Configure a low logic level for the second wakeup-pin. See device datasheet for specific pi
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_PIN1_LOW  = CY_SYSPM_HIB_WAKEUP_PIN1_MASK,
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     /** Configure a high logic level for the second wakeup-pin. See device datasheet for specific p
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE_PIN1_HIGH = CY_SYSPM_HIB_WAKEUP_PIN1_MASK | CY_SYSPM_HIB_WAKEUP_PIN1_POLARIT
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_hibernate_wakeup_source_t;
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration is used to select LDO regulator output voltage. */
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_VOLTAGE_ULP  = 0U,    /**< System ULP nominal LDO voltage. 
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                             See device datasheet for specific voltage. */
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_VOLTAGE_LP   = 1U,    /**< System LP nominal LDO voltage.
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                             See device datasheet for specific voltage. */
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_VOLTAGE_0_9V = 0U,    /**< 0.9 V nominal LDO voltage */
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_VOLTAGE_1_1V = 1U     /**< 1.1 V nominal LDO voltage */
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_ldo_voltage_t;
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration is used to select the LDO regulator operating mode. */
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_MODE_DISABLED = 0U,    /**< Disables the LDO. */
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_MODE_NORMAL   = 1U,    /**< Sets normal current mode. See device datasheet for 
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                              specific maximum current limit. */
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LDO_MODE_MIN      = 2U     /**< Sets minimum current mode. See device datasheet for 
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                              specific  current limit.  */
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_ldo_mode_t;
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *  This enumeration is used to select the output voltage for the Buck regulator output 1.
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 86


1380:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT1_VOLTAGE_ULP  = 0x02U,    /**< System ULP nominal Buck voltage. 
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                      See device datasheet for specific voltage. */
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT1_VOLTAGE_LP   = 0x05U,    /**< LP nominal Buck voltage. 
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                      See device datasheet for specific voltage. */
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT1_VOLTAGE_0_9V = 0x02U,    /**< 0.9 V nominal Buck voltage */
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT1_VOLTAGE_1_1V = 0x05U     /**< 1.1 V nominal Buck voltage */
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_buck_voltage1_t;
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration is used to select the Buck regulator outputs. */
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_VBUCK_1 = 0x0U,    /**< Buck output 1 Voltage (Vbuck1). Typically used to 
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                           supply the PSoC digital core logic. */
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_VRF                /**< Buck out 2 Voltage (Vbuckrf). Typically used to 
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                           supply the BLE radio logic. */
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_buck_out_t;
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This enumeration is used to select the output voltage for the Buck regulator
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * output 2, which can source the BLE radio.
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_15V = 0U,    /**< 1.15 V nominal voltage. */
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_2V  = 1U,    /**< 1.20 V nominal voltage. */
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_25V = 2U,    /**< 1.25 V nominal voltage. */
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_3V  = 3U,    /**< 1.3 V nominal voltage.  */
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_35V = 4U,    /**< 1.35 V nominal voltage. */
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_4V  = 5U,    /**< 1.4 V nominal voltage. */
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_45V = 6U,    /**< 1.45 V nominal voltage. */
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BUCK_OUT2_VOLTAGE_1_5V  = 7U     /**< 1.5 V nominal voltage. */
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_buck_voltage2_t;
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This enumeration is used to set the polarity for the PMIC input. The PMIC output is 
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * automatically enabled when the configured polarity of the PMIC input and the logic level
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * driven to the pmic_wakeup_in pin match.
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning 
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Do not use CY_SYSPM_PMIC_POLARITY_LOW as it is not supported by hardware.
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_PMIC_POLARITY_LOW   = 0U,    /**< Set active low logic level for the PMIC input. */
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_PMIC_POLARITY_HIGH  = 1U     /**< Set active high logic level for the PMIC input. */
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_pmic_wakeup_polarity_t;
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration selects Vbackup or Vddd to supply Vddbackup. */
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_VDDBACKUP_DEFAULT         = 0U,    /**< Logic automatically selects Vddd if present or
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                      Vbackup if Vddd is not present to supply Vddba
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_VDDBACKUP_VBACKUP         = 2U     /**< Sets only Vbackup to supply Vddbackup */
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_vddbackup_control_t;
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 87


1437:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration enables supercapacitor charging. */
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_SC_CHARGE_ENABLE     = 0x3CU,    /**< Enables supercapacitor charging */
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_SC_CHARGE_DISABLE    = 0x00U     /**< Disables supercapacitor charging */
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_sc_charge_key_t;
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration configures the flash voltage bit for different system power modes. */
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_FLASH_VOLTAGE_BIT_LP  = 0U,    /**< Set the flash voltage bit for system LP mode */
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_FLASH_VOLTAGE_BIT_ULP = 1U,    /**< Set the flash voltage bit for system ULP mode */
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_flash_voltage_bit_t;
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This enumeration is used to select the low power mode for which the
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * appropriate registered callback handler will be executed. For example,
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the registered callback of the type CY_SYSPM_SLEEP will be executed while
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * switching into the Sleep power mode.
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_SLEEP      = 0U,    /**< The Sleep enum callback type */
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_DEEPSLEEP  = 1U,    /**< The Deep Sleep enum callback type */
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_HIBERNATE  = 2U,    /**< The Hibernate enum callback type */
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_LP         = 3U,    /**< The Low Power enum callback type */
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_ULP        = 4U     /**< The Ultra Low Power enum callback type */
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_callback_type_t;
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This enumeration specifies the associated callback mode. This enum defines the callback mode. *
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef enum
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_CHECK_READY        = 0x01U,    /**< Callbacks with this mode are executed before enter
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  low power mode. The purpose of his callback functi
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  if the device is ready to enter the low power mode
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_CHECK_FAIL         = 0x02U,    /**< Callbacks with this mode are executed after the CY
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  callbacks execution returns CY_SYSPM_FAIL. 
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  The callback with the CY_SYSPM_CHECK_FAIL mode sho
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  actions performed in the previously executed callb
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  CY_SYSPM_CHECK_READY */
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_BEFORE_TRANSITION  = 0x04U,    /**< Callbacks with this mode are executed after the CY
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  callbacks execution returns CY_SYSPM_SUCCESS.
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  Performs the actions to be done before entering in
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  low power mode. */
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_SYSPM_AFTER_TRANSITION   = 0x08U     /**< Performs the actions to be done after exiting the 
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                  if entered. */
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_en_syspm_callback_mode_t;
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_data_enumerates */
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_macros
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \defgroup group_syspm_skip_callback_modes Defines to skip the callbacks modes
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 88


1494:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Defines for the SysPm callbacks modes that can be skipped during execution.
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For more information about callbacks modes, refer 
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * to \ref cy_en_syspm_callback_mode_t.
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_SKIP_CHECK_READY                   (0x01U)   /**< Define to skip check ready mode 
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_SKIP_CHECK_FAIL                    (0x02U)   /**< Define to skip check fail mode i
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_SKIP_BEFORE_TRANSITION             (0x04U)   /**< Define to skip before transition
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** #define CY_SYSPM_SKIP_AFTER_TRANSITION              (0x08U)   /**< Define to skip after transition 
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_skip_callback_modes */
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_macros */
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_data_structures
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The structure contains syspm callback parameters */
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef struct
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     void *base;         /**< Base address of a HW instance, matches name of the driver in
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                              the API for the base address. Can be undefined if not required. Base a
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                              required for the SysPm driver as the device has only one set of power 
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     void *context;      /**< Context for the handler function. This item can be 
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                              skipped if not required. Can be undefined if not required. */
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_stc_syspm_callback_params_t;
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** The type for syspm callbacks */
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef cy_en_syspm_status_t (*Cy_SysPmCallback) (cy_stc_syspm_callback_params_t *callbackParams, c
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** Structure with syspm callback configuration elements */
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef struct cy_stc_syspm_callback
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     Cy_SysPmCallback callback;                         /**< The callback handler function. */
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     cy_en_syspm_callback_type_t type;                  /**< The callback type, see \ref cy_en_syspm
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t skipMode;                                 /**< The mask of modes to be skipped during 
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             execution, see \ref group_syspm_skip_ca
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             corresponding callback mode won't execu
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             appropriate define is set. These values
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             If all modes are required to be execute
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             should be equal to zero. Skipping unnee
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             power mode transitions by skipping unne
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     cy_stc_syspm_callback_params_t *callbackParams;    /**< The address of a cy_stc_syspm_callback_
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             the callback is executed with these par
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     struct cy_stc_syspm_callback *prevItm;             /**< The previous list item. This element sh
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             defined, or defined as NULL. It is for 
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             usage to link this structure to the nex
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             structure. It will be updated during ca
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             registration. Do not modify this elemen
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     struct cy_stc_syspm_callback *nextItm;             /**< The next list item. This element should
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             defined, or defined as NULL. It is for 
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             link this structure to the previous reg
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             It will be updated during callback regi
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****                                                             modify this element at run-time. */
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 89


1551:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_stc_syspm_callback_t;
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** This internal structure stores non-retained registers in the system Deep Sleep
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *   power mode. On wakeup from system Deep Sleep, these registers are restored.
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** typedef struct
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_UDBIF_BANK_CTL_REG;    /**< UDB interface control register */
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_MDCLK_EN_REG;    /**< UDB bank MDCLK_EN register */
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_MBCLK_EN_REG;    /**< UDB bank MBCLK_EN register */
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_BOTSEL_L_REG;    /**< UDB bank BOTSEL_L register */
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_BOTSEL_U_REG;    /**< UDB bank BOTSEL_U register */
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_QCLK_EN0_REG;    /**< UDB bank QCLK_EN0 register */
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_QCLK_EN1_REG;    /**< UDB bank QCLK_EN1 register */
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t CY_SYSPM_UDB_BCTL_QCLK_EN2_REG;    /**< UDB bank QCLK_EN2 register */
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** } cy_stc_syspm_backup_regs_t;
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_data_structures */
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_general
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_WriteVoltageBitForFlash(cy_en_syspm_flash_voltage_bit_t value);
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_SaveRegisters(cy_stc_syspm_backup_regs_t *regs);
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_RestoreRegisters(cy_stc_syspm_backup_regs_t const *regs);
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_general */
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_power_status
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm4IsActive(void);
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm4IsSleep(void);
1592:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm4IsDeepSleep(void);
1593:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1594:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm0IsActive(void);
1595:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm0IsSleep(void);
1596:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm0IsDeepSleep(void);
1597:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_IsSystemLp(void);
1598:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_IsSystemUlp(void);
1599:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1600:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** uint32_t Cy_SysPm_ReadStatus(void);
1601:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_power_status */
1602:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1603:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1604:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_power
1605:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1606:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1607:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_CpuEnterSleep(cy_en_syspm_waitfor_t waitFor);
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 90


1608:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_CpuEnterDeepSleep(cy_en_syspm_waitfor_t waitFor);
1609:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_SystemEnterLp(void);
1610:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_SystemEnterUlp(void);
1611:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_SystemEnterHibernate(void);
1612:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1613:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_SetHibernateWakeupSource(uint32_t wakeupSource);
1614:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_ClearHibernateWakeupSource(uint32_t wakeupSource);
1615:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1616:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_SystemSetMinRegulatorCurrent(void);
1617:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_SystemSetNormalRegulatorCurrent(void);
1618:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_SystemIsMinRegulatorCurrentSet(void);
1619:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1620:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_CpuSleepOnExit(bool enable);
1621:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1622:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_CpuSendWakeupEvent(void);
1623:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_power */
1624:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1625:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1626:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_iofreeze
1627:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1628:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1629:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1630:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_IoUnfreeze(void);
1631:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_IoIsFrozen(void);
1632:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_iofreeze */
1633:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1634:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1635:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_ldo
1636:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1637:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1638:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_LdoSetVoltage(cy_en_syspm_ldo_voltage_t voltage);
1639:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_ldo_voltage_t Cy_SysPm_LdoGetVoltage(void);
1640:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_LdoIsEnabled(void);
1641:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_LdoSetMode(cy_en_syspm_ldo_mode_t mode);
1642:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_ldo_mode_t Cy_SysPm_LdoGetMode(void);
1643:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_ldo */
1644:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1645:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1646:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_pmic
1647:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1648:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1649:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicEnable(void);
1650:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicDisable(cy_en_syspm_pmic_wakeup_polarity_t polarity); 
1651:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_PmicIsEnabled(void);
1652:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicAlwaysEnable(void);
1653:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicEnableOutput(void);
1654:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicDisableOutput(void); 
1655:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_PmicIsOutputEnabled(void);
1656:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicLock(void);
1657:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicUnlock(void);
1658:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_PmicIsLocked(void);
1659:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_pmic */
1660:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1661:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1662:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_backup
1663:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1664:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 91


1665:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BackupSetSupply(cy_en_syspm_vddbackup_control_t vddBackControl);
1666:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_vddbackup_control_t Cy_SysPm_BackupGetSupply(void);
1667:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BackupEnableVoltageMeasurement(void);
1668:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BackupDisableVoltageMeasurement(void);
1669:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BackupSuperCapCharge(cy_en_syspm_sc_charge_key_t key);
1670:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_backup */
1671:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1672:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1673:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_buck
1674:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1675:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1676:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_BuckEnable(cy_en_syspm_buck_voltage1_t voltage);
1677:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_BuckIsEnabled(void);
1678:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_BuckSetVoltage1(cy_en_syspm_buck_voltage1_t voltage);
1679:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_buck_voltage1_t Cy_SysPm_BuckGetVoltage1(void);
1680:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_BuckSetVoltage2(cy_en_syspm_buck_voltage2_t voltage, bool waitToSettle);
1681:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_buck_voltage2_t Cy_SysPm_BuckGetVoltage2(void);
1682:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** void Cy_SysPm_BuckEnableVoltage2(void);
1683:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BuckDisableVoltage2(void);
1684:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BuckSetVoltage2HwControl(bool hwControl);
1685:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_BuckIsVoltage2HwControlled(void);
1686:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** bool Cy_SysPm_BuckIsOutputEnabled(cy_en_syspm_buck_out_t output);
1687:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_buck */
1688:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1689:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1690:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_callback
1691:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1692:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1693:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** bool Cy_SysPm_RegisterCallback(cy_stc_syspm_callback_t *handler);
1694:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** bool Cy_SysPm_UnregisterCallback(cy_stc_syspm_callback_t const *handler);
1695:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** cy_en_syspm_status_t Cy_SysPm_ExecuteCallback(cy_en_syspm_callback_type_t type, cy_en_syspm_callbac
1696:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_callback */
1697:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1698:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1699:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1700:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_power_status
1701:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1702:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1703:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1704:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_Cm4IsActive
1705:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1706:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1707:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if CM4 is in CPU Active mode.
1708:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1709:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1710:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if CM4 is in CPU Active mode.
1711:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if the CM4 is not in CPU Active mode.
1712:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1713:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1714:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Cm4IsActive
1715:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1716:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1717:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm4IsActive(void)
1718:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1719:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_CM4_ACTIVE) != 0U);
1720:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1721:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 92


1722:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1723:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1724:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_Cm4IsSleep
1725:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1726:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1727:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the CM4 is in CPU Sleep mode.
1728:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1729:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1730:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if the CM4 is in CPU Sleep mode.
1731:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if the CM4 is not in CPU Sleep mode.
1732:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1733:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1734:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Cm4IsSleep
1735:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1736:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1737:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm4IsSleep(void)
1738:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1739:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_CM4_SLEEP) != 0U);
1740:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1741:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1742:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1743:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1744:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_Cm4IsDeepSleep
1745:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1746:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1747:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the CM4 is in the CPU Deep Sleep mode.
1748:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1749:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1750:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if CM4 is in CPU Deep Sleep mode.
1751:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if the CM4 is not CPU in Deep Sleep mode.
1752:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1753:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1754:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Cm4IsDeepSleep
1755:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1756:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1757:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm4IsDeepSleep(void)
1758:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1759:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_CM4_DEEPSLEEP) != 0U);
1760:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1761:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1762:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1763:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1764:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_Cm0IsActive
1765:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1766:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1767:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the CM0+ is in CPU Active mode.
1768:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1769:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1770:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if the CM0+ is in CPU Sleep mode.
1771:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if the CM0+ is not in CPU Sleep mode.
1772:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1773:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1774:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Cm0IsActive
1775:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1776:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1777:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm0IsActive(void)
1778:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 93


1779:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_CM0_ACTIVE) != 0U);
1780:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1781:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1782:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1783:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1784:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_Cm0IsSleep
1785:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1786:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1787:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the CM0+ is in CPU Sleep mode.
1788:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1789:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1790:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if the CM0+ is in CPU Sleep mode.
1791:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if the CM0+ is not in CPU Sleep mode.
1792:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1793:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1794:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Cm0IsSleep
1795:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1796:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1797:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm0IsSleep(void)
1798:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1799:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_CM0_SLEEP) != 0U);
1800:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1801:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1802:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1803:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1804:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_Cm0IsDeepSleep
1805:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1806:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1807:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the CM0+ is in CPU Deep Sleep mode.
1808:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1809:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1810:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if the CM0+ is in CPU Deep Sleep mode
1811:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if the CM0+ is not in CPU Deep Sleep mode
1812:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1813:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1814:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_Cm0IsDeepSleep
1815:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1816:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1817:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_Cm0IsDeepSleep(void)
1818:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1819:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_CM0_DEEPSLEEP) != 0U);
1820:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1821:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1822:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1823:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1824:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_IsSystemLp
1825:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1826:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1827:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the system is in LP mode.
1828:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1829:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1830:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True the system is in LP mode.
1831:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False the system is not in LP mode.
1832:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1833:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1834:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_IsSystemLp
1835:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 94


1836:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1837:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_IsSystemLp(void)
1838:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1839:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_SYSTEM_LP) != 0U);
1840:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1841:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1842:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1843:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1844:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_IsSystemUlp
1845:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1846:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1847:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks if the system is in ULP mode.
1848:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1849:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1850:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True the system is in ULP mode.
1851:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False the system is is not ULP mode.
1852:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1853:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1854:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_IsSystemUlp
1855:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1856:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1857:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_IsSystemUlp(void)
1858:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1859:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return((Cy_SysPm_ReadStatus() & CY_SYSPM_STATUS_SYSTEM_ULP) != 0U);
1860:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1861:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_power_status */
1862:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1863:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1864:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1865:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_power
1866:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1867:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1868:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1869:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_CpuSendWakeupEvent
1870:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1871:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1872:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Sends the SEV (Send Event) ARM instruction to the system.
1873:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1874:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1875:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_CpuSendWakeupEvent
1876:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1877:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1878:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_CpuSendWakeupEvent(void)
1879:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1880:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     __SEV();
1881:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1882:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1883:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1884:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1885:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_SystemIsMinRegulatorCurrentSet
1886:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1887:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1888:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Check whether the system regulator is set to minimal current mode.
1889:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1890:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1891:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True - system is in regulator minimum current mode.
1892:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False - system is in normal regulator current mode.
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 95


1893:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1894:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1895:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_SystemSetNormalRegulatorCurrent
1896:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1897:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1898:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_SystemIsMinRegulatorCurrentSet(void)
1899:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1900:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t regMask = Cy_SysPm_LdoIsEnabled() ? CY_SYSPM_PWR_CIRCUITS_LPMODE_ACTIVE_LDO_MASK : CY_
1901:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1902:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((SRSS_PWR_CTL & regMask) == regMask);
1903:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1904:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_power */
1905:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1906:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1907:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
1908:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_buck
1909:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
1910:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
1911:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1912:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_BuckIsEnabled
1913:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1914:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1915:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Get the current status of the Buck regulator.
1916:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1917:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1918:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if the Buck regulator is enabled.
1919:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if it is disabled.
1920:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1921:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1922:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_VoltageRegulator
1923:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1924:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1925:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_BuckIsEnabled(void)
1926:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1927:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return (0U != _FLD2VAL(SRSS_PWR_BUCK_CTL_BUCK_EN, SRSS_PWR_BUCK_CTL));
1928:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1929:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1930:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1931:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_BuckGetVoltage1
1932:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1933:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1934:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Gets the current nominal output 1 voltage (Vccbuck1) of 
1935:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the Buck regulator.
1936:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1937:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note The actual device output 1 voltage (Vccbuck1) can be different from
1938:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the nominal voltage because the actual voltage value depends on conditions 
1939:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * including load current.
1940:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1941:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1942:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The nominal output voltage 1 (Vccbuck1) of the Buck regulator.
1943:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * See \ref cy_en_syspm_buck_voltage1_t.
1944:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1945:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1946:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_VoltageRegulator
1947:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1948:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1949:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_buck_voltage1_t Cy_SysPm_BuckGetVoltage1(void)
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 96


1950:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1951:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t retVal;
1952:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     retVal = _FLD2VAL(SRSS_PWR_BUCK_CTL_BUCK_OUT1_SEL, SRSS_PWR_BUCK_CTL);
1953:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1954:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((cy_en_syspm_buck_voltage1_t) retVal);
1955:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1956:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1957:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1958:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1959:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_BuckGetVoltage2
1960:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1961:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1962:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Gets the current output 2 nominal voltage (Vbuckrf) of the SIMO 
1963:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Buck regulator.
1964:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1965:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note The actual device output 2 voltage (Vbuckrf) can be different from the 
1966:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * nominal voltage because the actual voltage value depends on conditions 
1967:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * including load current.
1968:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1969:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
1970:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The nominal output voltage of the Buck SIMO regulator output 2 
1971:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * voltage (Vbuckrf). See \ref cy_en_syspm_buck_voltage2_t.
1972:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1973:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note
1974:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function returns zero for devices without a SIMO Buck regulator.
1975:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to the device datasheet about information on whether device contains 
1976:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * a SIMO Buck.
1977:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1978:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
1979:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_BuckGetVoltage2
1980:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1981:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
1982:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_buck_voltage2_t Cy_SysPm_BuckGetVoltage2(void)
1983:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
1984:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t retVal = 0UL;
1985:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1986:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (0U != cy_device->sysPmSimoPresent)
1987:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
1988:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         retVal = _FLD2VAL(SRSS_PWR_BUCK_CTL2_BUCK_OUT2_SEL, SRSS_PWR_BUCK_CTL2);
1989:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
1990:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1991:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((cy_en_syspm_buck_voltage2_t) retVal);
1992:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
1993:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1994:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
1995:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
1996:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_BuckDisableVoltage2
1997:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
1998:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
1999:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Disables the output 2 voltage (Vbuckrf) of the SIMO Buck regulator. The 
2000:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * output 2 voltage (Vbuckrf) of the Buck regulator is typically used to supply 
2001:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * the BLE radio.
2002:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2003:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note The function does not have effect, if the Buck regulator is
2004:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * switched off.
2005:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2006:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note If you are switching the voltage supply source for BLE radio, ensure 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 97


2007:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * that the new voltage supply for the BLE HW block is settled 
2008:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * and is stable before calling the Cy_SysPm_BuckDisableVoltage2() function.
2009:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2010:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This function is applicable for devices with the SIMO Buck regulator.
2011:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to the device datasheet for information about whether the device 
2012:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * contains a SIMO Buck.
2013:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2014:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2015:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_BuckDisableVoltage2
2016:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2017:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2018:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BuckDisableVoltage2(void)
2019:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2020:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (0U != cy_device->sysPmSimoPresent)
2021:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2022:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         /* Disable the Vbuck2 output */
2023:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         SRSS_PWR_BUCK_CTL2 &= (uint32_t) ~_VAL2FLD(SRSS_PWR_BUCK_CTL2_BUCK_OUT2_EN, 1U);
2024:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
2025:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2026:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2027:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2028:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2029:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_BuckSetVoltage2HwControl
2030:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2031:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2032:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Sets the hardware control for SIMO Buck output 2 (Vbuckrf).
2033:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2034:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When hardware control is enabled for the Vbuckrf output, the firmware 
2035:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controlled enable register setting is ignored and the hardware signal is used 
2036:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * instead. If the product has supporting hardware like BLE radio, it can 
2037:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * directly control the enable signal for Vbuckrf.
2038:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2039:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \param hwControl
2040:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Enables/disables hardware control for the SIMO Buck output 2.
2041:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2042:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function does not have an effect if SIMO Buck regulator is disabled.
2043:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2044:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The function is applicable for devices with the SIMO Buck regulator.
2045:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to the device datasheet for information about whether the device 
2046:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * contains a SIMO Buck.
2047:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2048:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2049:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_BuckSetVoltage2HwControl
2050:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2051:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2052:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_BuckSetVoltage2HwControl(bool hwControl)
2053:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2054:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     bool isBuckEnabled = Cy_SysPm_BuckIsEnabled();
2055:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     
2056:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if ((0U != cy_device->sysPmSimoPresent) && isBuckEnabled)
2057:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2058:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         if(hwControl)
2059:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         {
2060:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****             SRSS_PWR_BUCK_CTL2 |= _VAL2FLD(SRSS_PWR_BUCK_CTL2_BUCK_OUT2_HW_SEL, 1U);
2061:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         }
2062:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         else
2063:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         {
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 98


2064:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****             SRSS_PWR_BUCK_CTL2 &= (uint32_t) ~_VAL2FLD(SRSS_PWR_BUCK_CTL2_BUCK_OUT2_HW_SEL, 1U);
2065:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         }
2066:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
2067:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2068:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2069:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2070:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2071:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_BuckIsVoltage2HwControlled
2072:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2073:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2074:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Returns the hardware control state for Buck output 2 (Vbuckrf).
2075:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2076:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When hardware control is enabled for the Vbuckrf output, the firmware 
2077:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controlled enable register setting is ignored and the hardware signal is used 
2078:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * instead. If the product has supporting hardware like BLE radio, it can 
2079:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * directly control the enable signal for Vbuckrf.
2080:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2081:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
2082:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if HW control is set.
2083:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if FW control is set for the Buck output 2.
2084:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2085:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The function is applicable for devices with the SIMO Buck regulator.
2086:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Refer to device datasheet about information if device contains 
2087:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * SIMO Buck.
2088:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2089:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2090:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_BuckIsVoltage2HwControlled
2091:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2092:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2093:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_BuckIsVoltage2HwControlled(void)
2094:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2095:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     bool retVal = false;
2096:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2097:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (0U != cy_device->sysPmSimoPresent)
2098:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2099:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         retVal = (0U != _FLD2VAL(SRSS_PWR_BUCK_CTL2_BUCK_OUT2_HW_SEL, SRSS_PWR_BUCK_CTL2));
2100:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
2101:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2102:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return retVal;
2103:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2104:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_buck */
2105:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2106:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2107:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
2108:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_ldo
2109:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
2110:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
2111:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2112:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_LdoGetVoltage
2113:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2114:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2115:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Gets the current output voltage value of the core LDO regulator.
2116:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2117:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note The actual device Vccd voltage can be different from the 
2118:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * nominal voltage because the actual voltage value depends on conditions 
2119:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * including the load current.
2120:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 99


2121:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
2122:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The nominal output voltage of the LDO. See \ref cy_en_syspm_ldo_voltage_t.
2123:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2124:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2125:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_VoltageRegulator
2126:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2127:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2128:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE cy_en_syspm_ldo_voltage_t Cy_SysPm_LdoGetVoltage(void)
2129:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2130:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     uint32_t curVoltage;
2131:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2132:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     curVoltage = _FLD2VAL(SRSS_PWR_TRIM_PWRSYS_CTL_ACT_REG_TRIM, SRSS_PWR_TRIM_PWRSYS_CTL);
2133:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2134:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((curVoltage == (SFLASH_LDO_0P9V_TRIM)) ? CY_SYSPM_LDO_VOLTAGE_ULP : CY_SYSPM_LDO_VOLTAG
2135:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2136:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2137:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2138:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2139:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_LdoIsEnabled
2140:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2141:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2142:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Reads the current status of the core LDO regulator.
2143:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2144:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return
2145:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True means the LDO is enabled. 
2146:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False means it is disabled.
2147:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2148:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2149:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_VoltageRegulator
2150:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2151:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2152:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_LdoIsEnabled(void)
2153:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2154:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return ((0U != _FLD2VAL(SRSS_PWR_CTL_LINREG_DIS, SRSS_PWR_CTL)) ? false : true);
2155:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2156:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_ldo */
2157:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2158:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2159:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
2160:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_iofreeze
2161:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
2162:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
2163:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2164:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_IoIsFrozen
2165:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2166:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2167:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Checks whether IOs are frozen.
2168:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2169:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \return 
2170:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - True if IOs are frozen.
2171:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * - False if IOs are unfrozen.
2172:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2173:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2174:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_IoUnfreeze
2175:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2176:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2177:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE bool Cy_SysPm_IoIsFrozen(void)
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 100


2178:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2179:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     return (0U != _FLD2VAL(SRSS_PWR_HIBERNATE_FREEZE, SRSS_PWR_HIBERNATE));
2180:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2181:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /** \} group_syspm_functions_iofreeze */
2182:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2183:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /**
2184:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \addtogroup group_syspm_functions_pmic
2185:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \{
2186:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** */
2187:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2188:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2189:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2190:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicEnable
2191:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2192:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2193:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Enable the external PMIC controller that supplies Vddd (if present).
2194:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2195:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For information about the PMIC controller input and output pins and their 
2196:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * assignment in specific devices, refer to the appropriate device TRM.
2197:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
2198:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This function is not effective when the PMIC controller is locked. Call 
2199:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock() before enabling the PMIC.
2200:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2201:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2202:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicEnable
2203:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2204:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2205:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicEnable(void)
2206:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2207:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (CY_SYSPM_PMIC_UNLOCK_KEY == _FLD2VAL(BACKUP_PMIC_CTL_UNLOCK, BACKUP_PMIC_CTL))
2208:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2209:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         BACKUP_PMIC_CTL =
2210:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         _VAL2FLD(BACKUP_PMIC_CTL_UNLOCK, CY_SYSPM_PMIC_UNLOCK_KEY) |
2211:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         _VAL2FLD(BACKUP_PMIC_CTL_PMIC_EN_OUTEN, 1U) |
2212:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         _VAL2FLD(BACKUP_PMIC_CTL_PMIC_EN, 1U);
2213:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
2214:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2215:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2216:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2217:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2218:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicDisable
2219:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2220:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2221:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Disable the external PMIC controller that supplies Vddd (if present).
2222:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * This function does not affect the PMIC controller output pin. The PMIC 
2223:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controller input pin has programmable polarity to 
2224:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * enable the external PMIC using different input polarities. The PMIC controller
2225:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * is automatically enabled when the input pin polarity and configured polarity 
2226:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * match. This function is not effective when the active level of PMIC controller
2227:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * input pin is equal to the configured PMIC controller polarity.
2228:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2229:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The function is not effective when the PMIC controller is locked. Call 
2230:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock() before enabling the PMIC controller.
2231:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2232:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \param polarity
2233:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Configures the PMIC controller wakeup input pin to be active low or active 
2234:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * high. The PMIC will be automatically enabled when the set polarity and the 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 101


2235:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * active level of PMIC input pin match. 
2236:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * See \ref cy_en_syspm_pmic_wakeup_polarity_t.
2237:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2238:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The PMIC controller will be enabled automatically by any of RTC alarm or 
2239:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * PMIC wakeup events, regardless of the PMIC controller lock state.
2240:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2241:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note
2242:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Before disabling the PMIC controller, ensure that PMIC input and PMIC output 
2243:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * pins are configured correctly to enable expected PMIC operation.
2244:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2245:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning
2246:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The PMIC is enabled automatically when you call Cy_SysPm_PmicLock(). 
2247:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * To keep the external PMIC disabled, the PMIC controller must remain unlocked.
2248:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2249:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning 
2250:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Do not call Cy_SysPm_PmicDisable(CY_SYSPM_PMIC_POLARITY_LOW) because this 
2251:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * is not supported by hardware.
2252:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2253:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For information about the PMIC controller input and output pins and their 
2254:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * assignment in the specific devices, refer to the appropriate 
2255:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * device TRM.
2256:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2257:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2258:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicDisable
2259:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2260:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2261:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicDisable(cy_en_syspm_pmic_wakeup_polarity_t polarity)
2262:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2263:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     CY_ASSERT_L3(CY_SYSPM_IS_POLARITY_VALID(polarity));
2264:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     
2265:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (CY_SYSPM_PMIC_UNLOCK_KEY == _FLD2VAL(BACKUP_PMIC_CTL_UNLOCK, BACKUP_PMIC_CTL))
2266:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2267:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         BACKUP_PMIC_CTL = 
2268:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         (_VAL2FLD(BACKUP_PMIC_CTL_UNLOCK, CY_SYSPM_PMIC_UNLOCK_KEY) | 
2269:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****          _CLR_SET_FLD32U(BACKUP_PMIC_CTL, BACKUP_PMIC_CTL_POLARITY, (uint32_t) polarity)) &
2270:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         ((uint32_t) ~ _VAL2FLD(BACKUP_PMIC_CTL_PMIC_EN, 1U));
2271:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
2272:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2273:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2274:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2275:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2276:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicAlwaysEnable
2277:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2278:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2279:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Enable the external PMIC controller that supplies Vddd (if present) and force 
2280:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * active. This is a Write once API. It ensures that the PMIC controller cannot 
2281:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * be disabled or polarity changed until a next device reset.
2282:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * 
2283:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For information about the PMIC controller input and output pins and their 
2284:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * assignment in the specific devices, refer to the appropriate device TRM.
2285:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2286:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2287:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicAlwaysEnable
2288:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2289:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2290:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicAlwaysEnable(void)
2291:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 102


2292:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     BACKUP_PMIC_CTL |= _VAL2FLD(BACKUP_PMIC_CTL_PMIC_ALWAYSEN, 1U);
2293:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2294:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2295:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2296:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2297:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicEnableOutput
2298:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2299:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2300:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Enables the PMIC controller output pin. 
2301:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2302:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The function is not effective when the PMIC controller is locked. Call 
2303:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock() before enabling the PMIC controller.
2304:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2305:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For information about the PMIC controller output pin and its assignment in 
2306:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * specific devices, refer to the appropriate device TRM.
2307:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2308:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2309:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicEnableOutput
2310:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2311:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2312:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicEnableOutput(void)
2313:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2314:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (CY_SYSPM_PMIC_UNLOCK_KEY == _FLD2VAL(BACKUP_PMIC_CTL_UNLOCK, BACKUP_PMIC_CTL))
2315:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2316:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         BACKUP_PMIC_CTL |=
2317:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         _VAL2FLD(BACKUP_PMIC_CTL_UNLOCK, CY_SYSPM_PMIC_UNLOCK_KEY) | _VAL2FLD(BACKUP_PMIC_CTL_PMIC_
2318:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     }
2319:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2320:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2321:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2322:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2323:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicDisableOutput
2324:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2325:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2326:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Disables the PMIC controller output pin. 
2327:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2328:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * When the PMIC controller output pin is disabled and is unlocked, the PMIC 
2329:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controller output pin can be used for the another purpose.
2330:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2331:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The function has no effect when the PMIC is locked. Call 
2332:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicUnlock() before enabling the PMIC.
2333:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2334:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * For information about the PMIC controller output pin and its assignment in 
2335:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * specific devices, refer to the appropriate device TRM.
2336:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2337:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \note
2338:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * After the PMIC controller output is disabled, the PMIC output pin returns to 
2339:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * its GPIO configured state. 
2340:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2341:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning
2342:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The PMIC controller output is enabled automatically when you call 
2343:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Cy_SysPm_PmicLock(). To keep the PMIC controller output disabled, the PMIC
2344:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * controller must remain unlocked.
2345:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2346:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2347:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicDisableOutput
2348:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 103


2349:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2350:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicDisableOutput(void)
2351:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2352:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     if (CY_SYSPM_PMIC_UNLOCK_KEY == _FLD2VAL(BACKUP_PMIC_CTL_UNLOCK, BACKUP_PMIC_CTL))
2353:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
2354:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         BACKUP_PMIC_CTL = 
2355:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         (BACKUP_PMIC_CTL | _VAL2FLD(BACKUP_PMIC_CTL_UNLOCK, CY_SYSPM_PMIC_UNLOCK_KEY)) &
2356:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         ((uint32_t) ~ _VAL2FLD(BACKUP_PMIC_CTL_PMIC_EN_OUTEN, 1U));
2357:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     } 
2358:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2359:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2360:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2361:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2362:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicLock
2363:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2364:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2365:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Locks the PMIC control controller register so that no changes can be made. 
2366:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The changes are related to PMIC enabling/disabling and PMIC output pin 
2367:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * enabling/disabling.
2368:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2369:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning
2370:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The PMIC controller and/or the PMIC output are enabled automatically when 
2371:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * you call Cy_SysPm_PmicLock(). To keep the PMIC or PMIC controller output 
2372:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * disabled, the PMIC controller must remain unlocked.
2373:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2374:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2375:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicLock
2376:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2377:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2378:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicLock(void)
2379:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2380:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     BACKUP_PMIC_CTL = _CLR_SET_FLD32U(BACKUP_PMIC_CTL, BACKUP_PMIC_CTL_UNLOCK, 0U);
2381:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** }
2382:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2383:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** 
2384:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** /*******************************************************************************
2385:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Function Name: Cy_SysPm_PmicUnlock
2386:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** ****************************************************************************//**
2387:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2388:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * Unlocks the PMIC control register so that changes can be made. The changes are
2389:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * related to the PMIC controller enabling/disabling and PMIC output pin 
2390:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * enabling/disabling.
2391:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2392:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \warning
2393:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * The PMIC controller and/or the PMIC output are enabled automatically when 
2394:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * you call Cy_SysPm_PmicLock(). To keep the PMIC controller or PMIC output 
2395:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * disabled, the PMIC must remain unlocked.
2396:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2397:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \funcusage
2398:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** * \snippet syspm/4.0/snippet/main.c snippet_Cy_SysPm_PmicEnable
2399:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *
2400:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** *******************************************************************************/
2401:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** __STATIC_INLINE void Cy_SysPm_PmicUnlock(void)
2402:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h **** {
2403:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     BACKUP_PMIC_CTL = _CLR_SET_FLD32U(BACKUP_PMIC_CTL, BACKUP_PMIC_CTL_UNLOCK, CY_SYSPM_PMIC_UNLOCK
 427              		.loc 3 2403 0
 428 001e 214A     		ldr	r2, .L14
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 104


 429 0020 516C     		ldr	r1, [r2, #68]
 430 0022 214B     		ldr	r3, .L14+4
 431 0024 0B40     		ands	r3, r1
 432 0026 E821     		movs	r1, #232
 433 0028 8901     		lsls	r1, r1, #6
 434 002a 0B43     		orrs	r3, r1
 435 002c 5364     		str	r3, [r2, #68]
 436              	.LBE76:
 437              	.LBE75:
 438              	.LBB77:
 439              	.LBB78:
2352:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****     {
 440              		.loc 3 2352 0
 441 002e 536C     		ldr	r3, [r2, #68]
 442 0030 1B0A     		lsrs	r3, r3, #8
 443 0032 FF22     		movs	r2, #255
 444 0034 1340     		ands	r3, r2
 445 0036 3A2B     		cmp	r3, #58
 446 0038 07D1     		bne	.L13
2355:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         ((uint32_t) ~ _VAL2FLD(BACKUP_PMIC_CTL_PMIC_EN_OUTEN, 1U));
 447              		.loc 3 2355 0
 448 003a 1A4A     		ldr	r2, .L14
 449 003c 516C     		ldr	r1, [r2, #68]
 450 003e 1B4B     		ldr	r3, .L14+8
 451 0040 0B40     		ands	r3, r1
 452 0042 E821     		movs	r1, #232
 453 0044 8901     		lsls	r1, r1, #6
 454 0046 0B43     		orrs	r3, r1
2354:Generated_Source\PSoC6\pdl\drivers/peripheral/syspm/cy_syspm.h ****         (BACKUP_PMIC_CTL | _VAL2FLD(BACKUP_PMIC_CTL_UNLOCK, CY_SYSPM_PMIC_UNLOCK_KEY)) &
 455              		.loc 3 2354 0
 456 0048 5364     		str	r3, [r2, #68]
 457              	.L13:
 458              	.LBE78:
 459              	.LBE77:
 270:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 271:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* PMIC Control */
 272:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysPm_UnlockPmic();
 273:Generated_Source\PSoC6/cyfitter_cfg.c **** 	Cy_SysPm_DisablePmicOutput();
 274:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 275:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Clock */
 276:Generated_Source\PSoC6/cyfitter_cfg.c **** 	ClockInit();
 460              		.loc 1 276 0
 461 004a FFF7FEFF 		bl	ClockInit
 462              	.LVL37:
 463              	.LBB79:
 277:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 278:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Port0 configuration */
 279:Generated_Source\PSoC6/cyfitter_cfg.c **** 	{
 280:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    const cy_stc_gpio_prt_config_t port0_cfg =
 464              		.loc 1 280 0
 465 004e 01AD     		add	r5, sp, #4
 466 0050 174C     		ldr	r4, .L14+12
 467 0052 2A00     		movs	r2, r5
 468 0054 2300     		movs	r3, r4
 469 0056 1433     		adds	r3, r3, #20
 470 0058 43CB     		ldmia	r3!, {r0, r1, r6}
 471 005a 43C2     		stmia	r2!, {r0, r1, r6}
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 105


 472 005c 43CB     		ldmia	r3!, {r0, r1, r6}
 473 005e 43C2     		stmia	r2!, {r0, r1, r6}
 474 0060 43CB     		ldmia	r3!, {r0, r1, r6}
 475 0062 43C2     		stmia	r2!, {r0, r1, r6}
 281:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    {
 282:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .out        = 0x00000010u,
 283:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .intrMask   = 0x00000010u,
 284:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .intrCfg    = 0x00000200u,
 285:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfg        = 0x000A0000u,
 286:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfgIn      = 0x00000000u,
 287:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfgOut     = 0x00000000u,
 288:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfgSIO     = 0x00000000u,
 289:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .sel0Active = 0x00000000u,
 290:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .sel1Active = 0x00000000u,
 291:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    };
 292:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    (void)Cy_GPIO_Port_Init(GPIO_PRT0, &port0_cfg);
 476              		.loc 1 292 0
 477 0064 2900     		movs	r1, r5
 478 0066 1348     		ldr	r0, .L14+16
 479 0068 FFF7FEFF 		bl	Cy_GPIO_Port_Init
 480              	.LVL38:
 481              	.LBE79:
 482              	.LBB80:
 293:Generated_Source\PSoC6/cyfitter_cfg.c **** 	}
 294:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 295:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Port6 configuration */
 296:Generated_Source\PSoC6/cyfitter_cfg.c **** 	{
 297:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    const cy_stc_gpio_prt_config_t port6_cfg =
 483              		.loc 1 297 0
 484 006c 2A00     		movs	r2, r5
 485 006e 2300     		movs	r3, r4
 486 0070 3833     		adds	r3, r3, #56
 487 0072 43CB     		ldmia	r3!, {r0, r1, r6}
 488 0074 43C2     		stmia	r2!, {r0, r1, r6}
 489 0076 43CB     		ldmia	r3!, {r0, r1, r6}
 490 0078 43C2     		stmia	r2!, {r0, r1, r6}
 491 007a 43CB     		ldmia	r3!, {r0, r1, r6}
 492 007c 43C2     		stmia	r2!, {r0, r1, r6}
 298:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    {
 299:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .out        = 0x00000000u,
 300:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .intrMask   = 0x00000000u,
 301:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .intrCfg    = 0x00000000u,
 302:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfg        = 0xBA000000u,
 303:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfgIn      = 0x00000000u,
 304:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfgOut     = 0x00000000u,
 305:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfgSIO     = 0x00000000u,
 306:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .sel0Active = 0x00000000u,
 307:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .sel1Active = 0x1D1D0000u,
 308:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    };
 309:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    (void)Cy_GPIO_Port_Init(GPIO_PRT6, &port6_cfg);
 493              		.loc 1 309 0
 494 007e 2900     		movs	r1, r5
 495 0080 0D48     		ldr	r0, .L14+20
 496 0082 FFF7FEFF 		bl	Cy_GPIO_Port_Init
 497              	.LVL39:
 498              	.LBE80:
 499              	.LBB81:
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 106


 310:Generated_Source\PSoC6/cyfitter_cfg.c **** 	}
 311:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 312:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Port13 configuration */
 313:Generated_Source\PSoC6/cyfitter_cfg.c **** 	{
 314:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    const cy_stc_gpio_prt_config_t port13_cfg =
 500              		.loc 1 314 0
 501 0086 2A00     		movs	r2, r5
 502 0088 2300     		movs	r3, r4
 503 008a 5C33     		adds	r3, r3, #92
 504 008c 13CB     		ldmia	r3!, {r0, r1, r4}
 505 008e 13C2     		stmia	r2!, {r0, r1, r4}
 506 0090 13CB     		ldmia	r3!, {r0, r1, r4}
 507 0092 13C2     		stmia	r2!, {r0, r1, r4}
 508 0094 13CB     		ldmia	r3!, {r0, r1, r4}
 509 0096 13C2     		stmia	r2!, {r0, r1, r4}
 315:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    {
 316:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .out        = 0x00000080u,
 317:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .intrMask   = 0x00000000u,
 318:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .intrCfg    = 0x00000000u,
 319:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfg        = 0x60000000u,
 320:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfgIn      = 0x00000000u,
 321:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfgOut     = 0x00000000u,
 322:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .cfgSIO     = 0x00000000u,
 323:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .sel0Active = 0x00000000u,
 324:Generated_Source\PSoC6/cyfitter_cfg.c **** 	        .sel1Active = 0x00000000u,
 325:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    };
 326:Generated_Source\PSoC6/cyfitter_cfg.c **** 	    (void)Cy_GPIO_Port_Init(GPIO_PRT13, &port13_cfg);
 510              		.loc 1 326 0
 511 0098 2900     		movs	r1, r5
 512 009a 0848     		ldr	r0, .L14+24
 513 009c FFF7FEFF 		bl	Cy_GPIO_Port_Init
 514              	.LVL40:
 515              	.LBE81:
 327:Generated_Source\PSoC6/cyfitter_cfg.c **** 	}
 328:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 329:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 330:Generated_Source\PSoC6/cyfitter_cfg.c **** 	/* Perform basic analog initialization to defaults */
 331:Generated_Source\PSoC6/cyfitter_cfg.c **** 	AnalogSetDefault();
 332:Generated_Source\PSoC6/cyfitter_cfg.c **** 
 333:Generated_Source\PSoC6/cyfitter_cfg.c **** }
 516              		.loc 1 333 0
 517 00a0 0AB0     		add	sp, sp, #40
 518              		@ sp needed
 519 00a2 70BD     		pop	{r4, r5, r6, pc}
 520              	.L15:
 521              		.align	2
 522              	.L14:
 523 00a4 00002740 		.word	1076297728
 524 00a8 FF00FFFF 		.word	-65281
 525 00ac FFC5FFDF 		.word	-536885761
 526 00b0 00000000 		.word	.LANCHOR0
 527 00b4 00003240 		.word	1077018624
 528 00b8 00033240 		.word	1077019392
 529 00bc 80063240 		.word	1077020288
 530              		.cfi_endproc
 531              	.LFE190:
 532              		.size	Cy_SystemInit, .-Cy_SystemInit
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 107


 533              		.section	.rodata
 534              		.align	2
 535              		.set	.LANCHOR0,. + 0
 536              	.LC3:
 537 0000 F4010000 		.word	500
 538 0004 1400     		.short	20
 539 0006 04       		.byte	4
 540 0007 01       		.byte	1
 541 0008 0A00     		.short	10
 542 000a 09       		.byte	9
 543 000b 05       		.byte	5
 544 000c 0800     		.short	8
 545 000e 00       		.byte	0
 546 000f 00       		.space	1
 547 0010 6301     		.short	355
 548 0012 0000     		.space	2
 549              	.LC0:
 550 0014 10000000 		.word	16
 551 0018 10000000 		.word	16
 552 001c 00020000 		.word	512
 553 0020 00000A00 		.word	655360
 554 0024 00000000 		.word	0
 555 0028 00000000 		.word	0
 556 002c 00000000 		.word	0
 557 0030 00000000 		.word	0
 558 0034 00000000 		.word	0
 559              	.LC1:
 560 0038 00000000 		.word	0
 561 003c 00000000 		.word	0
 562 0040 00000000 		.word	0
 563 0044 000000BA 		.word	-1174405120
 564 0048 00000000 		.word	0
 565 004c 00000000 		.word	0
 566 0050 00000000 		.word	0
 567 0054 00000000 		.word	0
 568 0058 00001D1D 		.word	488439808
 569              	.LC2:
 570 005c 80000000 		.word	128
 571 0060 00000000 		.word	0
 572 0064 00000000 		.word	0
 573 0068 00000060 		.word	1610612736
 574 006c 00000000 		.word	0
 575 0070 00000000 		.word	0
 576 0074 00000000 		.word	0
 577 0078 00000000 		.word	0
 578 007c 00000000 		.word	0
 579              		.text
 580              	.Letext0:
 581              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 582              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 583              		.file 6 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_srss.h"
 584              		.file 7 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_backup.h"
 585              		.file 8 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/ip/cyip_gpio.h"
 586              		.file 9 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/include/psoc6_01_config.h"
 587              		.file 10 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/device/cy_device.h"
 588              		.file 11 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 589              		.file 12 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/gpio/cy_gpio.h"
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 108


 590              		.file 13 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/systick/cy_systick.h"
 591              		.section	.debug_info,"",%progbits
 592              	.Ldebug_info0:
 593 0000 38190000 		.4byte	0x1938
 594 0004 0400     		.2byte	0x4
 595 0006 00000000 		.4byte	.Ldebug_abbrev0
 596 000a 04       		.byte	0x4
 597 000b 01       		.uleb128 0x1
 598 000c 3D0F0000 		.4byte	.LASF384
 599 0010 0C       		.byte	0xc
 600 0011 1A0E0000 		.4byte	.LASF385
 601 0015 D90F0000 		.4byte	.LASF386
 602 0019 00000000 		.4byte	.Ldebug_ranges0+0
 603 001d 00000000 		.4byte	0
 604 0021 00000000 		.4byte	.Ldebug_line0
 605 0025 02       		.uleb128 0x2
 606 0026 04       		.byte	0x4
 607 0027 05       		.byte	0x5
 608 0028 696E7400 		.ascii	"int\000"
 609 002c 03       		.uleb128 0x3
 610 002d 04       		.byte	0x4
 611 002e 07       		.byte	0x7
 612 002f B70D0000 		.4byte	.LASF0
 613 0033 03       		.uleb128 0x3
 614 0034 08       		.byte	0x8
 615 0035 05       		.byte	0x5
 616 0036 C60E0000 		.4byte	.LASF1
 617 003a 03       		.uleb128 0x3
 618 003b 08       		.byte	0x8
 619 003c 04       		.byte	0x4
 620 003d 02120000 		.4byte	.LASF2
 621 0041 03       		.uleb128 0x3
 622 0042 01       		.byte	0x1
 623 0043 06       		.byte	0x6
 624 0044 63190000 		.4byte	.LASF3
 625 0048 04       		.uleb128 0x4
 626 0049 5D150000 		.4byte	.LASF5
 627 004d 04       		.byte	0x4
 628 004e 1D       		.byte	0x1d
 629 004f 53000000 		.4byte	0x53
 630 0053 03       		.uleb128 0x3
 631 0054 01       		.byte	0x1
 632 0055 08       		.byte	0x8
 633 0056 0B170000 		.4byte	.LASF4
 634 005a 04       		.uleb128 0x4
 635 005b CF0F0000 		.4byte	.LASF6
 636 005f 04       		.byte	0x4
 637 0060 29       		.byte	0x29
 638 0061 65000000 		.4byte	0x65
 639 0065 03       		.uleb128 0x3
 640 0066 02       		.byte	0x2
 641 0067 05       		.byte	0x5
 642 0068 F4030000 		.4byte	.LASF7
 643 006c 04       		.uleb128 0x4
 644 006d D6080000 		.4byte	.LASF8
 645 0071 04       		.byte	0x4
 646 0072 2B       		.byte	0x2b
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 109


 647 0073 77000000 		.4byte	0x77
 648 0077 03       		.uleb128 0x3
 649 0078 02       		.byte	0x2
 650 0079 07       		.byte	0x7
 651 007a EF110000 		.4byte	.LASF9
 652 007e 03       		.uleb128 0x3
 653 007f 04       		.byte	0x4
 654 0080 05       		.byte	0x5
 655 0081 26000000 		.4byte	.LASF10
 656 0085 04       		.uleb128 0x4
 657 0086 19170000 		.4byte	.LASF11
 658 008a 04       		.byte	0x4
 659 008b 41       		.byte	0x41
 660 008c 90000000 		.4byte	0x90
 661 0090 03       		.uleb128 0x3
 662 0091 04       		.byte	0x4
 663 0092 07       		.byte	0x7
 664 0093 7C160000 		.4byte	.LASF12
 665 0097 03       		.uleb128 0x3
 666 0098 08       		.byte	0x8
 667 0099 07       		.byte	0x7
 668 009a 6B070000 		.4byte	.LASF13
 669 009e 03       		.uleb128 0x3
 670 009f 04       		.byte	0x4
 671 00a0 07       		.byte	0x7
 672 00a1 CD120000 		.4byte	.LASF14
 673 00a5 03       		.uleb128 0x3
 674 00a6 01       		.byte	0x1
 675 00a7 08       		.byte	0x8
 676 00a8 660D0000 		.4byte	.LASF15
 677 00ac 04       		.uleb128 0x4
 678 00ad E30D0000 		.4byte	.LASF16
 679 00b1 05       		.byte	0x5
 680 00b2 18       		.byte	0x18
 681 00b3 48000000 		.4byte	0x48
 682 00b7 04       		.uleb128 0x4
 683 00b8 20070000 		.4byte	.LASF17
 684 00bc 05       		.byte	0x5
 685 00bd 20       		.byte	0x20
 686 00be 5A000000 		.4byte	0x5a
 687 00c2 04       		.uleb128 0x4
 688 00c3 0E120000 		.4byte	.LASF18
 689 00c7 05       		.byte	0x5
 690 00c8 24       		.byte	0x24
 691 00c9 6C000000 		.4byte	0x6c
 692 00cd 04       		.uleb128 0x4
 693 00ce F4050000 		.4byte	.LASF19
 694 00d2 05       		.byte	0x5
 695 00d3 30       		.byte	0x30
 696 00d4 85000000 		.4byte	0x85
 697 00d8 05       		.uleb128 0x5
 698 00d9 CD000000 		.4byte	0xcd
 699 00dd 06       		.uleb128 0x6
 700 00de D8000000 		.4byte	0xd8
 701 00e2 07       		.uleb128 0x7
 702 00e3 DD000000 		.4byte	0xdd
 703 00e7 F2000000 		.4byte	0xf2
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 110


 704 00eb 08       		.uleb128 0x8
 705 00ec 9E000000 		.4byte	0x9e
 706 00f0 01       		.byte	0x1
 707 00f1 00       		.byte	0
 708 00f2 07       		.uleb128 0x7
 709 00f3 DD000000 		.4byte	0xdd
 710 00f7 02010000 		.4byte	0x102
 711 00fb 08       		.uleb128 0x8
 712 00fc 9E000000 		.4byte	0x9e
 713 0100 07       		.byte	0x7
 714 0101 00       		.byte	0
 715 0102 07       		.uleb128 0x7
 716 0103 D8000000 		.4byte	0xd8
 717 0107 12010000 		.4byte	0x112
 718 010b 08       		.uleb128 0x8
 719 010c 9E000000 		.4byte	0x9e
 720 0110 0F       		.byte	0xf
 721 0111 00       		.byte	0
 722 0112 07       		.uleb128 0x7
 723 0113 DD000000 		.4byte	0xdd
 724 0117 22010000 		.4byte	0x122
 725 011b 08       		.uleb128 0x8
 726 011c 9E000000 		.4byte	0x9e
 727 0120 2F       		.byte	0x2f
 728 0121 00       		.byte	0
 729 0122 07       		.uleb128 0x7
 730 0123 D8000000 		.4byte	0xd8
 731 0127 32010000 		.4byte	0x132
 732 012b 08       		.uleb128 0x8
 733 012c 9E000000 		.4byte	0x9e
 734 0130 3F       		.byte	0x3f
 735 0131 00       		.byte	0
 736 0132 07       		.uleb128 0x7
 737 0133 DD000000 		.4byte	0xdd
 738 0137 42010000 		.4byte	0x142
 739 013b 08       		.uleb128 0x8
 740 013c 9E000000 		.4byte	0x9e
 741 0140 04       		.byte	0x4
 742 0141 00       		.byte	0
 743 0142 07       		.uleb128 0x7
 744 0143 DD000000 		.4byte	0xdd
 745 0147 52010000 		.4byte	0x152
 746 014b 08       		.uleb128 0x8
 747 014c 9E000000 		.4byte	0x9e
 748 0150 0F       		.byte	0xf
 749 0151 00       		.byte	0
 750 0152 07       		.uleb128 0x7
 751 0153 DD000000 		.4byte	0xdd
 752 0157 62010000 		.4byte	0x162
 753 015b 08       		.uleb128 0x8
 754 015c 9E000000 		.4byte	0x9e
 755 0160 1A       		.byte	0x1a
 756 0161 00       		.byte	0
 757 0162 07       		.uleb128 0x7
 758 0163 DD000000 		.4byte	0xdd
 759 0167 72010000 		.4byte	0x172
 760 016b 08       		.uleb128 0x8
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 111


 761 016c 9E000000 		.4byte	0x9e
 762 0170 1C       		.byte	0x1c
 763 0171 00       		.byte	0
 764 0172 09       		.uleb128 0x9
 765 0173 40       		.byte	0x40
 766 0174 06       		.byte	0x6
 767 0175 22       		.byte	0x22
 768 0176 0B020000 		.4byte	0x20b
 769 017a 0A       		.uleb128 0xa
 770 017b 2F000000 		.4byte	.LASF20
 771 017f 06       		.byte	0x6
 772 0180 23       		.byte	0x23
 773 0181 DD000000 		.4byte	0xdd
 774 0185 00       		.byte	0
 775 0186 0A       		.uleb128 0xa
 776 0187 910E0000 		.4byte	.LASF21
 777 018b 06       		.byte	0x6
 778 018c 24       		.byte	0x24
 779 018d D8000000 		.4byte	0xd8
 780 0191 04       		.byte	0x4
 781 0192 0A       		.uleb128 0xa
 782 0193 C6050000 		.4byte	.LASF22
 783 0197 06       		.byte	0x6
 784 0198 25       		.byte	0x25
 785 0199 D8000000 		.4byte	0xd8
 786 019d 08       		.byte	0x8
 787 019e 0A       		.uleb128 0xa
 788 019f 561A0000 		.4byte	.LASF23
 789 01a3 06       		.byte	0x6
 790 01a4 26       		.byte	0x26
 791 01a5 D8000000 		.4byte	0xd8
 792 01a9 0C       		.byte	0xc
 793 01aa 0A       		.uleb128 0xa
 794 01ab CC180000 		.4byte	.LASF24
 795 01af 06       		.byte	0x6
 796 01b0 27       		.byte	0x27
 797 01b1 D8000000 		.4byte	0xd8
 798 01b5 10       		.byte	0x10
 799 01b6 0A       		.uleb128 0xa
 800 01b7 83180000 		.4byte	.LASF25
 801 01bb 06       		.byte	0x6
 802 01bc 28       		.byte	0x28
 803 01bd D8000000 		.4byte	0xd8
 804 01c1 14       		.byte	0x14
 805 01c2 0A       		.uleb128 0xa
 806 01c3 D9110000 		.4byte	.LASF26
 807 01c7 06       		.byte	0x6
 808 01c8 29       		.byte	0x29
 809 01c9 D8000000 		.4byte	0xd8
 810 01cd 18       		.byte	0x18
 811 01ce 0A       		.uleb128 0xa
 812 01cf CC140000 		.4byte	.LASF27
 813 01d3 06       		.byte	0x6
 814 01d4 2A       		.byte	0x2a
 815 01d5 D8000000 		.4byte	0xd8
 816 01d9 1C       		.byte	0x1c
 817 01da 0A       		.uleb128 0xa
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 112


 818 01db 610B0000 		.4byte	.LASF28
 819 01df 06       		.byte	0x6
 820 01e0 2B       		.byte	0x2b
 821 01e1 D8000000 		.4byte	0xd8
 822 01e5 20       		.byte	0x20
 823 01e6 0A       		.uleb128 0xa
 824 01e7 BB060000 		.4byte	.LASF29
 825 01eb 06       		.byte	0x6
 826 01ec 2C       		.byte	0x2c
 827 01ed DD000000 		.4byte	0xdd
 828 01f1 24       		.byte	0x24
 829 01f2 0A       		.uleb128 0xa
 830 01f3 E4110000 		.4byte	.LASF30
 831 01f7 06       		.byte	0x6
 832 01f8 2D       		.byte	0x2d
 833 01f9 D8000000 		.4byte	0xd8
 834 01fd 28       		.byte	0x28
 835 01fe 0A       		.uleb128 0xa
 836 01ff 16070000 		.4byte	.LASF31
 837 0203 06       		.byte	0x6
 838 0204 2E       		.byte	0x2e
 839 0205 10020000 		.4byte	0x210
 840 0209 2C       		.byte	0x2c
 841 020a 00       		.byte	0
 842 020b 05       		.uleb128 0x5
 843 020c 32010000 		.4byte	0x132
 844 0210 06       		.uleb128 0x6
 845 0211 0B020000 		.4byte	0x20b
 846 0215 04       		.uleb128 0x4
 847 0216 10010000 		.4byte	.LASF32
 848 021a 06       		.byte	0x6
 849 021b 2F       		.byte	0x2f
 850 021c 72010000 		.4byte	0x172
 851 0220 0B       		.uleb128 0xb
 852 0221 30FF     		.2byte	0xff30
 853 0223 06       		.byte	0x6
 854 0224 34       		.byte	0x34
 855 0225 94050000 		.4byte	0x594
 856 0229 0A       		.uleb128 0xa
 857 022a 80050000 		.4byte	.LASF33
 858 022e 06       		.byte	0x6
 859 022f 35       		.byte	0x35
 860 0230 D8000000 		.4byte	0xd8
 861 0234 00       		.byte	0
 862 0235 0A       		.uleb128 0xa
 863 0236 5C110000 		.4byte	.LASF34
 864 023a 06       		.byte	0x6
 865 023b 36       		.byte	0x36
 866 023c D8000000 		.4byte	0xd8
 867 0240 04       		.byte	0x4
 868 0241 0A       		.uleb128 0xa
 869 0242 8C0D0000 		.4byte	.LASF35
 870 0246 06       		.byte	0x6
 871 0247 37       		.byte	0x37
 872 0248 D8000000 		.4byte	0xd8
 873 024c 08       		.byte	0x8
 874 024d 0A       		.uleb128 0xa
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 113


 875 024e 2F000000 		.4byte	.LASF20
 876 0252 06       		.byte	0x6
 877 0253 38       		.byte	0x38
 878 0254 99050000 		.4byte	0x599
 879 0258 0C       		.byte	0xc
 880 0259 0A       		.uleb128 0xa
 881 025a EE130000 		.4byte	.LASF36
 882 025e 06       		.byte	0x6
 883 025f 39       		.byte	0x39
 884 0260 D8000000 		.4byte	0xd8
 885 0264 14       		.byte	0x14
 886 0265 0A       		.uleb128 0xa
 887 0266 E1080000 		.4byte	.LASF37
 888 026a 06       		.byte	0x6
 889 026b 3A       		.byte	0x3a
 890 026c D8000000 		.4byte	0xd8
 891 0270 18       		.byte	0x18
 892 0271 0A       		.uleb128 0xa
 893 0272 C4010000 		.4byte	.LASF38
 894 0276 06       		.byte	0x6
 895 0277 3B       		.byte	0x3b
 896 0278 DD000000 		.4byte	0xdd
 897 027c 1C       		.byte	0x1c
 898 027d 0A       		.uleb128 0xa
 899 027e 16070000 		.4byte	.LASF31
 900 0282 06       		.byte	0x6
 901 0283 3C       		.byte	0x3c
 902 0284 B3050000 		.4byte	0x5b3
 903 0288 20       		.byte	0x20
 904 0289 0A       		.uleb128 0xa
 905 028a 9A050000 		.4byte	.LASF39
 906 028e 06       		.byte	0x6
 907 028f 3D       		.byte	0x3d
 908 0290 B8050000 		.4byte	0x5b8
 909 0294 80       		.byte	0x80
 910 0295 0A       		.uleb128 0xa
 911 0296 2B130000 		.4byte	.LASF40
 912 029a 06       		.byte	0x6
 913 029b 3E       		.byte	0x3e
 914 029c C2050000 		.4byte	0x5c2
 915 02a0 C0       		.byte	0xc0
 916 02a1 0C       		.uleb128 0xc
 917 02a2 03170000 		.4byte	.LASF41
 918 02a6 06       		.byte	0x6
 919 02a7 3F       		.byte	0x3f
 920 02a8 D8000000 		.4byte	0xd8
 921 02ac 8001     		.2byte	0x180
 922 02ae 0C       		.uleb128 0xc
 923 02af AF0D0000 		.4byte	.LASF42
 924 02b3 06       		.byte	0x6
 925 02b4 40       		.byte	0x40
 926 02b5 D8000000 		.4byte	0xd8
 927 02b9 8401     		.2byte	0x184
 928 02bb 0C       		.uleb128 0xc
 929 02bc 720E0000 		.4byte	.LASF43
 930 02c0 06       		.byte	0x6
 931 02c1 41       		.byte	0x41
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 114


 932 02c2 D8000000 		.4byte	0xd8
 933 02c6 8801     		.2byte	0x188
 934 02c8 0C       		.uleb128 0xc
 935 02c9 35130000 		.4byte	.LASF44
 936 02cd 06       		.byte	0x6
 937 02ce 42       		.byte	0x42
 938 02cf CC050000 		.4byte	0x5cc
 939 02d3 8C01     		.2byte	0x18c
 940 02d5 0C       		.uleb128 0xc
 941 02d6 70140000 		.4byte	.LASF45
 942 02da 06       		.byte	0x6
 943 02db 43       		.byte	0x43
 944 02dc D1050000 		.4byte	0x5d1
 945 02e0 0002     		.2byte	0x200
 946 02e2 0C       		.uleb128 0xc
 947 02e3 2D1A0000 		.4byte	.LASF46
 948 02e7 06       		.byte	0x6
 949 02e8 44       		.byte	0x44
 950 02e9 E1050000 		.4byte	0x5e1
 951 02ed 0003     		.2byte	0x300
 952 02ef 0C       		.uleb128 0xc
 953 02f0 83130000 		.4byte	.LASF47
 954 02f4 06       		.byte	0x6
 955 02f5 45       		.byte	0x45
 956 02f6 E6050000 		.4byte	0x5e6
 957 02fa 4003     		.2byte	0x340
 958 02fc 0C       		.uleb128 0xc
 959 02fd 94120000 		.4byte	.LASF48
 960 0301 06       		.byte	0x6
 961 0302 46       		.byte	0x46
 962 0303 EB050000 		.4byte	0x5eb
 963 0307 8003     		.2byte	0x380
 964 0309 0C       		.uleb128 0xc
 965 030a 3F130000 		.4byte	.LASF49
 966 030e 06       		.byte	0x6
 967 030f 47       		.byte	0x47
 968 0310 05060000 		.4byte	0x605
 969 0314 C003     		.2byte	0x3c0
 970 0316 0C       		.uleb128 0xc
 971 0317 FE030000 		.4byte	.LASF50
 972 031b 06       		.byte	0x6
 973 031c 48       		.byte	0x48
 974 031d D8000000 		.4byte	0xd8
 975 0321 0005     		.2byte	0x500
 976 0323 0C       		.uleb128 0xc
 977 0324 EB0D0000 		.4byte	.LASF51
 978 0328 06       		.byte	0x6
 979 0329 49       		.byte	0x49
 980 032a D8000000 		.4byte	0xd8
 981 032e 0405     		.2byte	0x504
 982 0330 0C       		.uleb128 0xc
 983 0331 49130000 		.4byte	.LASF52
 984 0335 06       		.byte	0x6
 985 0336 4A       		.byte	0x4a
 986 0337 DD000000 		.4byte	0xdd
 987 033b 0805     		.2byte	0x508
 988 033d 0C       		.uleb128 0xc
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 115


 989 033e 74020000 		.4byte	.LASF53
 990 0342 06       		.byte	0x6
 991 0343 4B       		.byte	0x4b
 992 0344 D8000000 		.4byte	0xd8
 993 0348 0C05     		.2byte	0x50c
 994 034a 0C       		.uleb128 0xc
 995 034b 8D020000 		.4byte	.LASF54
 996 034f 06       		.byte	0x6
 997 0350 4C       		.byte	0x4c
 998 0351 D8000000 		.4byte	0xd8
 999 0355 1005     		.2byte	0x510
 1000 0357 0C       		.uleb128 0xc
 1001 0358 2D0F0000 		.4byte	.LASF55
 1002 035c 06       		.byte	0x6
 1003 035d 4D       		.byte	0x4d
 1004 035e D8000000 		.4byte	0xd8
 1005 0362 1405     		.2byte	0x514
 1006 0364 0C       		.uleb128 0xc
 1007 0365 A9030000 		.4byte	.LASF56
 1008 0369 06       		.byte	0x6
 1009 036a 4E       		.byte	0x4e
 1010 036b D8000000 		.4byte	0xd8
 1011 036f 1805     		.2byte	0x518
 1012 0371 0C       		.uleb128 0xc
 1013 0372 BD0A0000 		.4byte	.LASF57
 1014 0376 06       		.byte	0x6
 1015 0377 4F       		.byte	0x4f
 1016 0378 D8000000 		.4byte	0xd8
 1017 037c 1C05     		.2byte	0x51c
 1018 037e 0C       		.uleb128 0xc
 1019 037f CA0A0000 		.4byte	.LASF58
 1020 0383 06       		.byte	0x6
 1021 0384 50       		.byte	0x50
 1022 0385 DD000000 		.4byte	0xdd
 1023 0389 2005     		.2byte	0x520
 1024 038b 0C       		.uleb128 0xc
 1025 038c 53130000 		.4byte	.LASF59
 1026 0390 06       		.byte	0x6
 1027 0391 51       		.byte	0x51
 1028 0392 0F060000 		.4byte	0x60f
 1029 0396 2405     		.2byte	0x524
 1030 0398 0C       		.uleb128 0xc
 1031 0399 AE0A0000 		.4byte	.LASF60
 1032 039d 06       		.byte	0x6
 1033 039e 52       		.byte	0x52
 1034 039f D8000000 		.4byte	0xd8
 1035 03a3 2C05     		.2byte	0x52c
 1036 03a5 0C       		.uleb128 0xc
 1037 03a6 A5090000 		.4byte	.LASF61
 1038 03aa 06       		.byte	0x6
 1039 03ab 53       		.byte	0x53
 1040 03ac DD000000 		.4byte	0xdd
 1041 03b0 3005     		.2byte	0x530
 1042 03b2 0C       		.uleb128 0xc
 1043 03b3 5D130000 		.4byte	.LASF62
 1044 03b7 06       		.byte	0x6
 1045 03b8 54       		.byte	0x54
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 116


 1046 03b9 19060000 		.4byte	0x619
 1047 03bd 3405     		.2byte	0x534
 1048 03bf 0C       		.uleb128 0xc
 1049 03c0 78110000 		.4byte	.LASF63
 1050 03c4 06       		.byte	0x6
 1051 03c5 55       		.byte	0x55
 1052 03c6 D8000000 		.4byte	0xd8
 1053 03ca 3C05     		.2byte	0x53c
 1054 03cc 0C       		.uleb128 0xc
 1055 03cd 67130000 		.4byte	.LASF64
 1056 03d1 06       		.byte	0x6
 1057 03d2 56       		.byte	0x56
 1058 03d3 23060000 		.4byte	0x623
 1059 03d7 4005     		.2byte	0x540
 1060 03d9 0C       		.uleb128 0xc
 1061 03da 65090000 		.4byte	.LASF65
 1062 03de 06       		.byte	0x6
 1063 03df 57       		.byte	0x57
 1064 03e0 D8000000 		.4byte	0xd8
 1065 03e4 8005     		.2byte	0x580
 1066 03e6 0C       		.uleb128 0xc
 1067 03e7 7E0A0000 		.4byte	.LASF66
 1068 03eb 06       		.byte	0x6
 1069 03ec 58       		.byte	0x58
 1070 03ed D8000000 		.4byte	0xd8
 1071 03f1 8405     		.2byte	0x584
 1072 03f3 0C       		.uleb128 0xc
 1073 03f4 8E0A0000 		.4byte	.LASF67
 1074 03f8 06       		.byte	0x6
 1075 03f9 59       		.byte	0x59
 1076 03fa D8000000 		.4byte	0xd8
 1077 03fe 8805     		.2byte	0x588
 1078 0400 0C       		.uleb128 0xc
 1079 0401 9E0A0000 		.4byte	.LASF68
 1080 0405 06       		.byte	0x6
 1081 0406 5A       		.byte	0x5a
 1082 0407 D8000000 		.4byte	0xd8
 1083 040b 8C05     		.2byte	0x58c
 1084 040d 0C       		.uleb128 0xc
 1085 040e 45020000 		.4byte	.LASF69
 1086 0412 06       		.byte	0x6
 1087 0413 5B       		.byte	0x5b
 1088 0414 D8000000 		.4byte	0xd8
 1089 0418 9005     		.2byte	0x590
 1090 041a 0C       		.uleb128 0xc
 1091 041b 71130000 		.4byte	.LASF70
 1092 041f 06       		.byte	0x6
 1093 0420 5C       		.byte	0x5c
 1094 0421 2D060000 		.4byte	0x62d
 1095 0425 9405     		.2byte	0x594
 1096 0427 0C       		.uleb128 0xc
 1097 0428 12110000 		.4byte	.LASF71
 1098 042c 06       		.byte	0x6
 1099 042d 5D       		.byte	0x5d
 1100 042e 42060000 		.4byte	0x642
 1101 0432 0006     		.2byte	0x600
 1102 0434 0C       		.uleb128 0xc
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 117


 1103 0435 96170000 		.4byte	.LASF72
 1104 0439 06       		.byte	0x6
 1105 043a 5E       		.byte	0x5e
 1106 043b DD000000 		.4byte	0xdd
 1107 043f 3C06     		.2byte	0x63c
 1108 0441 0C       		.uleb128 0xc
 1109 0442 B00B0000 		.4byte	.LASF73
 1110 0446 06       		.byte	0x6
 1111 0447 5F       		.byte	0x5f
 1112 0448 47060000 		.4byte	0x647
 1113 044c 4006     		.2byte	0x640
 1114 044e 0C       		.uleb128 0xc
 1115 044f A1170000 		.4byte	.LASF74
 1116 0453 06       		.byte	0x6
 1117 0454 60       		.byte	0x60
 1118 0455 61060000 		.4byte	0x661
 1119 0459 7C06     		.2byte	0x67c
 1120 045b 0C       		.uleb128 0xc
 1121 045c F7190000 		.4byte	.LASF75
 1122 0460 06       		.byte	0x6
 1123 0461 61       		.byte	0x61
 1124 0462 D8000000 		.4byte	0xd8
 1125 0466 0007     		.2byte	0x700
 1126 0468 0C       		.uleb128 0xc
 1127 0469 D50D0000 		.4byte	.LASF76
 1128 046d 06       		.byte	0x6
 1129 046e 62       		.byte	0x62
 1130 046f D8000000 		.4byte	0xd8
 1131 0473 0407     		.2byte	0x704
 1132 0475 0C       		.uleb128 0xc
 1133 0476 2E020000 		.4byte	.LASF77
 1134 047a 06       		.byte	0x6
 1135 047b 63       		.byte	0x63
 1136 047c D8000000 		.4byte	0xd8
 1137 0480 0807     		.2byte	0x708
 1138 0482 0C       		.uleb128 0xc
 1139 0483 DD130000 		.4byte	.LASF78
 1140 0487 06       		.byte	0x6
 1141 0488 64       		.byte	0x64
 1142 0489 DD000000 		.4byte	0xdd
 1143 048d 0C07     		.2byte	0x70c
 1144 048f 0C       		.uleb128 0xc
 1145 0490 DF040000 		.4byte	.LASF79
 1146 0494 06       		.byte	0x6
 1147 0495 65       		.byte	0x65
 1148 0496 D8000000 		.4byte	0xd8
 1149 049a 1007     		.2byte	0x710
 1150 049c 0C       		.uleb128 0xc
 1151 049d AC170000 		.4byte	.LASF80
 1152 04a1 06       		.byte	0x6
 1153 04a2 66       		.byte	0x66
 1154 04a3 7B060000 		.4byte	0x67b
 1155 04a7 1407     		.2byte	0x714
 1156 04a9 0C       		.uleb128 0xc
 1157 04aa 72160000 		.4byte	.LASF81
 1158 04ae 06       		.byte	0x6
 1159 04af 67       		.byte	0x67
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 118


 1160 04b0 D8000000 		.4byte	0xd8
 1161 04b4 0008     		.2byte	0x800
 1162 04b6 0C       		.uleb128 0xc
 1163 04b7 D3010000 		.4byte	.LASF82
 1164 04bb 06       		.byte	0x6
 1165 04bc 68       		.byte	0x68
 1166 04bd D8000000 		.4byte	0xd8
 1167 04c1 0408     		.2byte	0x804
 1168 04c3 0C       		.uleb128 0xc
 1169 04c4 B7170000 		.4byte	.LASF83
 1170 04c8 06       		.byte	0x6
 1171 04c9 69       		.byte	0x69
 1172 04ca 96060000 		.4byte	0x696
 1173 04ce 0808     		.2byte	0x808
 1174 04d0 0C       		.uleb128 0xc
 1175 04d1 9E110000 		.4byte	.LASF84
 1176 04d5 06       		.byte	0x6
 1177 04d6 6A       		.byte	0x6a
 1178 04d7 D8000000 		.4byte	0xd8
 1179 04db 007F     		.2byte	0x7f00
 1180 04dd 0C       		.uleb128 0xc
 1181 04de AA040000 		.4byte	.LASF85
 1182 04e2 06       		.byte	0x6
 1183 04e3 6B       		.byte	0x6b
 1184 04e4 D8000000 		.4byte	0xd8
 1185 04e8 047F     		.2byte	0x7f04
 1186 04ea 0C       		.uleb128 0xc
 1187 04eb 93140000 		.4byte	.LASF86
 1188 04ef 06       		.byte	0x6
 1189 04f0 6C       		.byte	0x6c
 1190 04f1 D8000000 		.4byte	0xd8
 1191 04f5 087F     		.2byte	0x7f08
 1192 04f7 0C       		.uleb128 0xc
 1193 04f8 6F190000 		.4byte	.LASF87
 1194 04fc 06       		.byte	0x6
 1195 04fd 6D       		.byte	0x6d
 1196 04fe D8000000 		.4byte	0xd8
 1197 0502 0C7F     		.2byte	0x7f0c
 1198 0504 0C       		.uleb128 0xc
 1199 0505 C2170000 		.4byte	.LASF88
 1200 0509 06       		.byte	0x6
 1201 050a 6E       		.byte	0x6e
 1202 050b A0060000 		.4byte	0x6a0
 1203 050f 107F     		.2byte	0x7f10
 1204 0511 0C       		.uleb128 0xc
 1205 0512 88050000 		.4byte	.LASF89
 1206 0516 06       		.byte	0x6
 1207 0517 6F       		.byte	0x6f
 1208 0518 D8000000 		.4byte	0xd8
 1209 051c 307F     		.2byte	0x7f30
 1210 051e 0C       		.uleb128 0xc
 1211 051f CD170000 		.4byte	.LASF90
 1212 0523 06       		.byte	0x6
 1213 0524 70       		.byte	0x70
 1214 0525 BB060000 		.4byte	0x6bb
 1215 0529 347F     		.2byte	0x7f34
 1216 052b 0C       		.uleb128 0xc
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 119


 1217 052c 5A070000 		.4byte	.LASF91
 1218 0530 06       		.byte	0x6
 1219 0531 71       		.byte	0x71
 1220 0532 D8000000 		.4byte	0xd8
 1221 0536 10FF     		.2byte	0xff10
 1222 0538 0C       		.uleb128 0xc
 1223 0539 D8170000 		.4byte	.LASF92
 1224 053d 06       		.byte	0x6
 1225 053e 72       		.byte	0x72
 1226 053f DD000000 		.4byte	0xdd
 1227 0543 14FF     		.2byte	0xff14
 1228 0545 0C       		.uleb128 0xc
 1229 0546 AA060000 		.4byte	.LASF93
 1230 054a 06       		.byte	0x6
 1231 054b 73       		.byte	0x73
 1232 054c D8000000 		.4byte	0xd8
 1233 0550 18FF     		.2byte	0xff18
 1234 0552 0C       		.uleb128 0xc
 1235 0553 EA180000 		.4byte	.LASF94
 1236 0557 06       		.byte	0x6
 1237 0558 74       		.byte	0x74
 1238 0559 D8000000 		.4byte	0xd8
 1239 055d 1CFF     		.2byte	0xff1c
 1240 055f 0C       		.uleb128 0xc
 1241 0560 3B070000 		.4byte	.LASF95
 1242 0564 06       		.byte	0x6
 1243 0565 75       		.byte	0x75
 1244 0566 D8000000 		.4byte	0xd8
 1245 056a 20FF     		.2byte	0xff20
 1246 056c 0C       		.uleb128 0xc
 1247 056d CB130000 		.4byte	.LASF96
 1248 0571 06       		.byte	0x6
 1249 0572 76       		.byte	0x76
 1250 0573 D8000000 		.4byte	0xd8
 1251 0577 24FF     		.2byte	0xff24
 1252 0579 0C       		.uleb128 0xc
 1253 057a 220C0000 		.4byte	.LASF97
 1254 057e 06       		.byte	0x6
 1255 057f 77       		.byte	0x77
 1256 0580 D8000000 		.4byte	0xd8
 1257 0584 28FF     		.2byte	0xff28
 1258 0586 0C       		.uleb128 0xc
 1259 0587 350C0000 		.4byte	.LASF98
 1260 058b 06       		.byte	0x6
 1261 058c 78       		.byte	0x78
 1262 058d D8000000 		.4byte	0xd8
 1263 0591 2CFF     		.2byte	0xff2c
 1264 0593 00       		.byte	0
 1265 0594 05       		.uleb128 0x5
 1266 0595 E2000000 		.4byte	0xe2
 1267 0599 06       		.uleb128 0x6
 1268 059a 94050000 		.4byte	0x594
 1269 059e 07       		.uleb128 0x7
 1270 059f DD000000 		.4byte	0xdd
 1271 05a3 AE050000 		.4byte	0x5ae
 1272 05a7 08       		.uleb128 0x8
 1273 05a8 9E000000 		.4byte	0x9e
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 120


 1274 05ac 17       		.byte	0x17
 1275 05ad 00       		.byte	0
 1276 05ae 05       		.uleb128 0x5
 1277 05af 9E050000 		.4byte	0x59e
 1278 05b3 06       		.uleb128 0x6
 1279 05b4 AE050000 		.4byte	0x5ae
 1280 05b8 05       		.uleb128 0x5
 1281 05b9 02010000 		.4byte	0x102
 1282 05bd 05       		.uleb128 0x5
 1283 05be 12010000 		.4byte	0x112
 1284 05c2 06       		.uleb128 0x6
 1285 05c3 BD050000 		.4byte	0x5bd
 1286 05c7 05       		.uleb128 0x5
 1287 05c8 62010000 		.4byte	0x162
 1288 05cc 06       		.uleb128 0x6
 1289 05cd C7050000 		.4byte	0x5c7
 1290 05d1 07       		.uleb128 0x7
 1291 05d2 15020000 		.4byte	0x215
 1292 05d6 E1050000 		.4byte	0x5e1
 1293 05da 08       		.uleb128 0x8
 1294 05db 9E000000 		.4byte	0x9e
 1295 05df 03       		.byte	0x3
 1296 05e0 00       		.byte	0
 1297 05e1 05       		.uleb128 0x5
 1298 05e2 02010000 		.4byte	0x102
 1299 05e6 05       		.uleb128 0x5
 1300 05e7 02010000 		.4byte	0x102
 1301 05eb 05       		.uleb128 0x5
 1302 05ec 02010000 		.4byte	0x102
 1303 05f0 07       		.uleb128 0x7
 1304 05f1 DD000000 		.4byte	0xdd
 1305 05f5 00060000 		.4byte	0x600
 1306 05f9 08       		.uleb128 0x8
 1307 05fa 9E000000 		.4byte	0x9e
 1308 05fe 4F       		.byte	0x4f
 1309 05ff 00       		.byte	0
 1310 0600 05       		.uleb128 0x5
 1311 0601 F0050000 		.4byte	0x5f0
 1312 0605 06       		.uleb128 0x6
 1313 0606 00060000 		.4byte	0x600
 1314 060a 05       		.uleb128 0x5
 1315 060b E2000000 		.4byte	0xe2
 1316 060f 06       		.uleb128 0x6
 1317 0610 0A060000 		.4byte	0x60a
 1318 0614 05       		.uleb128 0x5
 1319 0615 E2000000 		.4byte	0xe2
 1320 0619 06       		.uleb128 0x6
 1321 061a 14060000 		.4byte	0x614
 1322 061e 05       		.uleb128 0x5
 1323 061f 42010000 		.4byte	0x142
 1324 0623 06       		.uleb128 0x6
 1325 0624 1E060000 		.4byte	0x61e
 1326 0628 05       		.uleb128 0x5
 1327 0629 52010000 		.4byte	0x152
 1328 062d 06       		.uleb128 0x6
 1329 062e 28060000 		.4byte	0x628
 1330 0632 07       		.uleb128 0x7
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 121


 1331 0633 D8000000 		.4byte	0xd8
 1332 0637 42060000 		.4byte	0x642
 1333 063b 08       		.uleb128 0x8
 1334 063c 9E000000 		.4byte	0x9e
 1335 0640 0E       		.byte	0xe
 1336 0641 00       		.byte	0
 1337 0642 05       		.uleb128 0x5
 1338 0643 32060000 		.4byte	0x632
 1339 0647 05       		.uleb128 0x5
 1340 0648 32060000 		.4byte	0x632
 1341 064c 07       		.uleb128 0x7
 1342 064d DD000000 		.4byte	0xdd
 1343 0651 5C060000 		.4byte	0x65c
 1344 0655 08       		.uleb128 0x8
 1345 0656 9E000000 		.4byte	0x9e
 1346 065a 20       		.byte	0x20
 1347 065b 00       		.byte	0
 1348 065c 05       		.uleb128 0x5
 1349 065d 4C060000 		.4byte	0x64c
 1350 0661 06       		.uleb128 0x6
 1351 0662 5C060000 		.4byte	0x65c
 1352 0666 07       		.uleb128 0x7
 1353 0667 DD000000 		.4byte	0xdd
 1354 066b 76060000 		.4byte	0x676
 1355 066f 08       		.uleb128 0x8
 1356 0670 9E000000 		.4byte	0x9e
 1357 0674 3A       		.byte	0x3a
 1358 0675 00       		.byte	0
 1359 0676 05       		.uleb128 0x5
 1360 0677 66060000 		.4byte	0x666
 1361 067b 06       		.uleb128 0x6
 1362 067c 76060000 		.4byte	0x676
 1363 0680 07       		.uleb128 0x7
 1364 0681 DD000000 		.4byte	0xdd
 1365 0685 91060000 		.4byte	0x691
 1366 0689 0D       		.uleb128 0xd
 1367 068a 9E000000 		.4byte	0x9e
 1368 068e BD1D     		.2byte	0x1dbd
 1369 0690 00       		.byte	0
 1370 0691 05       		.uleb128 0x5
 1371 0692 80060000 		.4byte	0x680
 1372 0696 06       		.uleb128 0x6
 1373 0697 91060000 		.4byte	0x691
 1374 069b 05       		.uleb128 0x5
 1375 069c F2000000 		.4byte	0xf2
 1376 06a0 06       		.uleb128 0x6
 1377 06a1 9B060000 		.4byte	0x69b
 1378 06a5 07       		.uleb128 0x7
 1379 06a6 DD000000 		.4byte	0xdd
 1380 06aa B6060000 		.4byte	0x6b6
 1381 06ae 0D       		.uleb128 0xd
 1382 06af 9E000000 		.4byte	0x9e
 1383 06b3 F61F     		.2byte	0x1ff6
 1384 06b5 00       		.byte	0
 1385 06b6 05       		.uleb128 0x5
 1386 06b7 A5060000 		.4byte	0x6a5
 1387 06bb 06       		.uleb128 0x6
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 122


 1388 06bc B6060000 		.4byte	0x6b6
 1389 06c0 04       		.uleb128 0x4
 1390 06c1 100F0000 		.4byte	.LASF99
 1391 06c5 06       		.byte	0x6
 1392 06c6 79       		.byte	0x79
 1393 06c7 20020000 		.4byte	0x220
 1394 06cb 0B       		.uleb128 0xb
 1395 06cc 04FF     		.2byte	0xff04
 1396 06ce 07       		.byte	0x7
 1397 06cf 21       		.byte	0x21
 1398 06d0 EC070000 		.4byte	0x7ec
 1399 06d4 0E       		.uleb128 0xe
 1400 06d5 43544C00 		.ascii	"CTL\000"
 1401 06d9 07       		.byte	0x7
 1402 06da 22       		.byte	0x22
 1403 06db D8000000 		.4byte	0xd8
 1404 06df 00       		.byte	0
 1405 06e0 0A       		.uleb128 0xa
 1406 06e1 2F000000 		.4byte	.LASF20
 1407 06e5 07       		.byte	0x7
 1408 06e6 23       		.byte	0x23
 1409 06e7 DD000000 		.4byte	0xdd
 1410 06eb 04       		.byte	0x4
 1411 06ec 0A       		.uleb128 0xa
 1412 06ed AF110000 		.4byte	.LASF100
 1413 06f1 07       		.byte	0x7
 1414 06f2 24       		.byte	0x24
 1415 06f3 D8000000 		.4byte	0xd8
 1416 06f7 08       		.byte	0x8
 1417 06f8 0A       		.uleb128 0xa
 1418 06f9 20150000 		.4byte	.LASF101
 1419 06fd 07       		.byte	0x7
 1420 06fe 25       		.byte	0x25
 1421 06ff D8000000 		.4byte	0xd8
 1422 0703 0C       		.byte	0xc
 1423 0704 0A       		.uleb128 0xa
 1424 0705 711A0000 		.4byte	.LASF102
 1425 0709 07       		.byte	0x7
 1426 070a 26       		.byte	0x26
 1427 070b DD000000 		.4byte	0xdd
 1428 070f 10       		.byte	0x10
 1429 0710 0A       		.uleb128 0xa
 1430 0711 14040000 		.4byte	.LASF103
 1431 0715 07       		.byte	0x7
 1432 0716 27       		.byte	0x27
 1433 0717 D8000000 		.4byte	0xd8
 1434 071b 14       		.byte	0x14
 1435 071c 0A       		.uleb128 0xa
 1436 071d 7A180000 		.4byte	.LASF104
 1437 0721 07       		.byte	0x7
 1438 0722 28       		.byte	0x28
 1439 0723 D8000000 		.4byte	0xd8
 1440 0727 18       		.byte	0x18
 1441 0728 0A       		.uleb128 0xa
 1442 0729 7C090000 		.4byte	.LASF105
 1443 072d 07       		.byte	0x7
 1444 072e 29       		.byte	0x29
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 123


 1445 072f D8000000 		.4byte	0xd8
 1446 0733 1C       		.byte	0x1c
 1447 0734 0A       		.uleb128 0xa
 1448 0735 940B0000 		.4byte	.LASF106
 1449 0739 07       		.byte	0x7
 1450 073a 2A       		.byte	0x2a
 1451 073b D8000000 		.4byte	0xd8
 1452 073f 20       		.byte	0x20
 1453 0740 0A       		.uleb128 0xa
 1454 0741 011A0000 		.4byte	.LASF107
 1455 0745 07       		.byte	0x7
 1456 0746 2B       		.byte	0x2b
 1457 0747 D8000000 		.4byte	0xd8
 1458 074b 24       		.byte	0x24
 1459 074c 0A       		.uleb128 0xa
 1460 074d 081B0000 		.4byte	.LASF108
 1461 0751 07       		.byte	0x7
 1462 0752 2C       		.byte	0x2c
 1463 0753 D8000000 		.4byte	0xd8
 1464 0757 28       		.byte	0x28
 1465 0758 0A       		.uleb128 0xa
 1466 0759 A5060000 		.4byte	.LASF109
 1467 075d 07       		.byte	0x7
 1468 075e 2D       		.byte	0x2d
 1469 075f D8000000 		.4byte	0xd8
 1470 0763 2C       		.byte	0x2c
 1471 0764 0A       		.uleb128 0xa
 1472 0765 51040000 		.4byte	.LASF110
 1473 0769 07       		.byte	0x7
 1474 076a 2E       		.byte	0x2e
 1475 076b D8000000 		.4byte	0xd8
 1476 076f 30       		.byte	0x30
 1477 0770 0A       		.uleb128 0xa
 1478 0771 C2180000 		.4byte	.LASF111
 1479 0775 07       		.byte	0x7
 1480 0776 2F       		.byte	0x2f
 1481 0777 D8000000 		.4byte	0xd8
 1482 077b 34       		.byte	0x34
 1483 077c 0A       		.uleb128 0xa
 1484 077d D4150000 		.4byte	.LASF112
 1485 0781 07       		.byte	0x7
 1486 0782 30       		.byte	0x30
 1487 0783 DD000000 		.4byte	0xdd
 1488 0787 38       		.byte	0x38
 1489 0788 0A       		.uleb128 0xa
 1490 0789 C8160000 		.4byte	.LASF113
 1491 078d 07       		.byte	0x7
 1492 078e 31       		.byte	0x31
 1493 078f DD000000 		.4byte	0xdd
 1494 0793 3C       		.byte	0x3c
 1495 0794 0A       		.uleb128 0xa
 1496 0795 DB0B0000 		.4byte	.LASF114
 1497 0799 07       		.byte	0x7
 1498 079a 32       		.byte	0x32
 1499 079b DD000000 		.4byte	0xdd
 1500 079f 40       		.byte	0x40
 1501 07a0 0A       		.uleb128 0xa
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 124


 1502 07a1 97070000 		.4byte	.LASF115
 1503 07a5 07       		.byte	0x7
 1504 07a6 33       		.byte	0x33
 1505 07a7 D8000000 		.4byte	0xd8
 1506 07ab 44       		.byte	0x44
 1507 07ac 0A       		.uleb128 0xa
 1508 07ad 84140000 		.4byte	.LASF116
 1509 07b1 07       		.byte	0x7
 1510 07b2 34       		.byte	0x34
 1511 07b3 D8000000 		.4byte	0xd8
 1512 07b7 48       		.byte	0x48
 1513 07b8 0A       		.uleb128 0xa
 1514 07b9 16070000 		.4byte	.LASF31
 1515 07bd 07       		.byte	0x7
 1516 07be 35       		.byte	0x35
 1517 07bf 02080000 		.4byte	0x802
 1518 07c3 4C       		.byte	0x4c
 1519 07c4 0C       		.uleb128 0xc
 1520 07c5 6D0E0000 		.4byte	.LASF117
 1521 07c9 07       		.byte	0x7
 1522 07ca 36       		.byte	0x36
 1523 07cb 07080000 		.4byte	0x807
 1524 07cf 0010     		.2byte	0x1000
 1525 07d1 0C       		.uleb128 0xc
 1526 07d2 2B130000 		.4byte	.LASF40
 1527 07d6 07       		.byte	0x7
 1528 07d7 37       		.byte	0x37
 1529 07d8 22080000 		.4byte	0x822
 1530 07dc 0011     		.2byte	0x1100
 1531 07de 0C       		.uleb128 0xc
 1532 07df 6B0D0000 		.4byte	.LASF118
 1533 07e3 07       		.byte	0x7
 1534 07e4 38       		.byte	0x38
 1535 07e5 D8000000 		.4byte	0xd8
 1536 07e9 00FF     		.2byte	0xff00
 1537 07eb 00       		.byte	0
 1538 07ec 07       		.uleb128 0x7
 1539 07ed DD000000 		.4byte	0xdd
 1540 07f1 FD070000 		.4byte	0x7fd
 1541 07f5 0D       		.uleb128 0xd
 1542 07f6 9E000000 		.4byte	0x9e
 1543 07fa EC03     		.2byte	0x3ec
 1544 07fc 00       		.byte	0
 1545 07fd 05       		.uleb128 0x5
 1546 07fe EC070000 		.4byte	0x7ec
 1547 0802 06       		.uleb128 0x6
 1548 0803 FD070000 		.4byte	0x7fd
 1549 0807 05       		.uleb128 0x5
 1550 0808 22010000 		.4byte	0x122
 1551 080c 07       		.uleb128 0x7
 1552 080d DD000000 		.4byte	0xdd
 1553 0811 1D080000 		.4byte	0x81d
 1554 0815 0D       		.uleb128 0xd
 1555 0816 9E000000 		.4byte	0x9e
 1556 081a 7F3B     		.2byte	0x3b7f
 1557 081c 00       		.byte	0
 1558 081d 05       		.uleb128 0x5
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 125


 1559 081e 0C080000 		.4byte	0x80c
 1560 0822 06       		.uleb128 0x6
 1561 0823 1D080000 		.4byte	0x81d
 1562 0827 04       		.uleb128 0x4
 1563 0828 4C0D0000 		.4byte	.LASF119
 1564 082c 07       		.byte	0x7
 1565 082d 39       		.byte	0x39
 1566 082e CB060000 		.4byte	0x6cb
 1567 0832 09       		.uleb128 0x9
 1568 0833 80       		.byte	0x80
 1569 0834 08       		.byte	0x8
 1570 0835 22       		.byte	0x22
 1571 0836 06090000 		.4byte	0x906
 1572 083a 0E       		.uleb128 0xe
 1573 083b 4F555400 		.ascii	"OUT\000"
 1574 083f 08       		.byte	0x8
 1575 0840 23       		.byte	0x23
 1576 0841 D8000000 		.4byte	0xd8
 1577 0845 00       		.byte	0
 1578 0846 0A       		.uleb128 0xa
 1579 0847 0E070000 		.4byte	.LASF120
 1580 084b 08       		.byte	0x8
 1581 084c 24       		.byte	0x24
 1582 084d D8000000 		.4byte	0xd8
 1583 0851 04       		.byte	0x4
 1584 0852 0A       		.uleb128 0xa
 1585 0853 600A0000 		.4byte	.LASF121
 1586 0857 08       		.byte	0x8
 1587 0858 25       		.byte	0x25
 1588 0859 D8000000 		.4byte	0xd8
 1589 085d 08       		.byte	0x8
 1590 085e 0A       		.uleb128 0xa
 1591 085f 40150000 		.4byte	.LASF122
 1592 0863 08       		.byte	0x8
 1593 0864 26       		.byte	0x26
 1594 0865 D8000000 		.4byte	0xd8
 1595 0869 0C       		.byte	0xc
 1596 086a 0E       		.uleb128 0xe
 1597 086b 494E00   		.ascii	"IN\000"
 1598 086e 08       		.byte	0x8
 1599 086f 27       		.byte	0x27
 1600 0870 DD000000 		.4byte	0xdd
 1601 0874 10       		.byte	0x10
 1602 0875 0A       		.uleb128 0xa
 1603 0876 A5060000 		.4byte	.LASF109
 1604 087a 08       		.byte	0x8
 1605 087b 28       		.byte	0x28
 1606 087c D8000000 		.4byte	0xd8
 1607 0880 14       		.byte	0x14
 1608 0881 0A       		.uleb128 0xa
 1609 0882 C2180000 		.4byte	.LASF111
 1610 0886 08       		.byte	0x8
 1611 0887 29       		.byte	0x29
 1612 0888 D8000000 		.4byte	0xd8
 1613 088c 18       		.byte	0x18
 1614 088d 0A       		.uleb128 0xa
 1615 088e D4150000 		.4byte	.LASF112
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 126


 1616 0892 08       		.byte	0x8
 1617 0893 2A       		.byte	0x2a
 1618 0894 DD000000 		.4byte	0xdd
 1619 0898 1C       		.byte	0x1c
 1620 0899 0A       		.uleb128 0xa
 1621 089a 51040000 		.4byte	.LASF110
 1622 089e 08       		.byte	0x8
 1623 089f 2B       		.byte	0x2b
 1624 08a0 D8000000 		.4byte	0xd8
 1625 08a4 20       		.byte	0x20
 1626 08a5 0A       		.uleb128 0xa
 1627 08a6 74170000 		.4byte	.LASF123
 1628 08aa 08       		.byte	0x8
 1629 08ab 2C       		.byte	0x2c
 1630 08ac D8000000 		.4byte	0xd8
 1631 08b0 24       		.byte	0x24
 1632 08b1 0E       		.uleb128 0xe
 1633 08b2 43464700 		.ascii	"CFG\000"
 1634 08b6 08       		.byte	0x8
 1635 08b7 2D       		.byte	0x2d
 1636 08b8 D8000000 		.4byte	0xd8
 1637 08bc 28       		.byte	0x28
 1638 08bd 0A       		.uleb128 0xa
 1639 08be 67050000 		.4byte	.LASF124
 1640 08c2 08       		.byte	0x8
 1641 08c3 2E       		.byte	0x2e
 1642 08c4 D8000000 		.4byte	0xd8
 1643 08c8 2C       		.byte	0x2c
 1644 08c9 0A       		.uleb128 0xa
 1645 08ca 74090000 		.4byte	.LASF125
 1646 08ce 08       		.byte	0x8
 1647 08cf 2F       		.byte	0x2f
 1648 08d0 D8000000 		.4byte	0xd8
 1649 08d4 30       		.byte	0x30
 1650 08d5 0A       		.uleb128 0xa
 1651 08d6 3D020000 		.4byte	.LASF126
 1652 08da 08       		.byte	0x8
 1653 08db 30       		.byte	0x30
 1654 08dc D8000000 		.4byte	0xd8
 1655 08e0 34       		.byte	0x34
 1656 08e1 0A       		.uleb128 0xa
 1657 08e2 2F000000 		.4byte	.LASF20
 1658 08e6 08       		.byte	0x8
 1659 08e7 31       		.byte	0x31
 1660 08e8 DD000000 		.4byte	0xdd
 1661 08ec 38       		.byte	0x38
 1662 08ed 0A       		.uleb128 0xa
 1663 08ee BE140000 		.4byte	.LASF127
 1664 08f2 08       		.byte	0x8
 1665 08f3 32       		.byte	0x32
 1666 08f4 D8000000 		.4byte	0xd8
 1667 08f8 3C       		.byte	0x3c
 1668 08f9 0A       		.uleb128 0xa
 1669 08fa 16070000 		.4byte	.LASF31
 1670 08fe 08       		.byte	0x8
 1671 08ff 33       		.byte	0x33
 1672 0900 0B090000 		.4byte	0x90b
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 127


 1673 0904 40       		.byte	0x40
 1674 0905 00       		.byte	0
 1675 0906 05       		.uleb128 0x5
 1676 0907 42010000 		.4byte	0x142
 1677 090b 06       		.uleb128 0x6
 1678 090c 06090000 		.4byte	0x906
 1679 0910 04       		.uleb128 0x4
 1680 0911 2F140000 		.4byte	.LASF128
 1681 0915 08       		.byte	0x8
 1682 0916 34       		.byte	0x34
 1683 0917 32080000 		.4byte	0x832
 1684 091b 0B       		.uleb128 0xb
 1685 091c 2440     		.2byte	0x4024
 1686 091e 08       		.byte	0x8
 1687 091f 39       		.byte	0x39
 1688 0920 A6090000 		.4byte	0x9a6
 1689 0924 0E       		.uleb128 0xe
 1690 0925 50525400 		.ascii	"PRT\000"
 1691 0929 08       		.byte	0x8
 1692 092a 3A       		.byte	0x3a
 1693 092b A6090000 		.4byte	0x9a6
 1694 092f 00       		.byte	0
 1695 0930 0C       		.uleb128 0xc
 1696 0931 43000000 		.4byte	.LASF129
 1697 0935 08       		.byte	0x8
 1698 0936 3B       		.byte	0x3b
 1699 0937 DD000000 		.4byte	0xdd
 1700 093b 0040     		.2byte	0x4000
 1701 093d 0C       		.uleb128 0xc
 1702 093e 4F000000 		.4byte	.LASF130
 1703 0942 08       		.byte	0x8
 1704 0943 3C       		.byte	0x3c
 1705 0944 DD000000 		.4byte	0xdd
 1706 0948 0440     		.2byte	0x4004
 1707 094a 0C       		.uleb128 0xc
 1708 094b 5B000000 		.4byte	.LASF131
 1709 094f 08       		.byte	0x8
 1710 0950 3D       		.byte	0x3d
 1711 0951 DD000000 		.4byte	0xdd
 1712 0955 0840     		.2byte	0x4008
 1713 0957 0C       		.uleb128 0xc
 1714 0958 67000000 		.4byte	.LASF132
 1715 095c 08       		.byte	0x8
 1716 095d 3E       		.byte	0x3e
 1717 095e DD000000 		.4byte	0xdd
 1718 0962 0C40     		.2byte	0x400c
 1719 0964 0C       		.uleb128 0xc
 1720 0965 38000000 		.4byte	.LASF133
 1721 0969 08       		.byte	0x8
 1722 096a 3F       		.byte	0x3f
 1723 096b DD000000 		.4byte	0xdd
 1724 096f 1040     		.2byte	0x4010
 1725 0971 0C       		.uleb128 0xc
 1726 0972 9E0B0000 		.4byte	.LASF134
 1727 0976 08       		.byte	0x8
 1728 0977 40       		.byte	0x40
 1729 0978 D8000000 		.4byte	0xd8
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 128


 1730 097c 1440     		.2byte	0x4014
 1731 097e 0C       		.uleb128 0xc
 1732 097f 55190000 		.4byte	.LASF135
 1733 0983 08       		.byte	0x8
 1734 0984 41       		.byte	0x41
 1735 0985 D8000000 		.4byte	0xd8
 1736 0989 1840     		.2byte	0x4018
 1737 098b 0C       		.uleb128 0xc
 1738 098c B6110000 		.4byte	.LASF136
 1739 0990 08       		.byte	0x8
 1740 0991 42       		.byte	0x42
 1741 0992 DD000000 		.4byte	0xdd
 1742 0996 1C40     		.2byte	0x401c
 1743 0998 0C       		.uleb128 0xc
 1744 0999 20120000 		.4byte	.LASF137
 1745 099d 08       		.byte	0x8
 1746 099e 43       		.byte	0x43
 1747 099f D8000000 		.4byte	0xd8
 1748 09a3 2040     		.2byte	0x4020
 1749 09a5 00       		.byte	0
 1750 09a6 07       		.uleb128 0x7
 1751 09a7 10090000 		.4byte	0x910
 1752 09ab B6090000 		.4byte	0x9b6
 1753 09af 08       		.uleb128 0x8
 1754 09b0 9E000000 		.4byte	0x9e
 1755 09b4 7F       		.byte	0x7f
 1756 09b5 00       		.byte	0
 1757 09b6 04       		.uleb128 0x4
 1758 09b7 67060000 		.4byte	.LASF138
 1759 09bb 08       		.byte	0x8
 1760 09bc 44       		.byte	0x44
 1761 09bd 1B090000 		.4byte	0x91b
 1762 09c1 0F       		.uleb128 0xf
 1763 09c2 73000000 		.4byte	.LASF139
 1764 09c6 09       		.byte	0x9
 1765 09c7 2806     		.2byte	0x628
 1766 09c9 C0060000 		.4byte	0x6c0
 1767 09cd 0F       		.uleb128 0xf
 1768 09ce 1A000000 		.4byte	.LASF140
 1769 09d2 09       		.byte	0x9
 1770 09d3 2906     		.2byte	0x629
 1771 09d5 27080000 		.4byte	0x827
 1772 09d9 0F       		.uleb128 0xf
 1773 09da 47190000 		.4byte	.LASF141
 1774 09de 09       		.byte	0x9
 1775 09df 3106     		.2byte	0x631
 1776 09e1 10090000 		.4byte	0x910
 1777 09e5 0F       		.uleb128 0xf
 1778 09e6 24170000 		.4byte	.LASF142
 1779 09ea 09       		.byte	0x9
 1780 09eb 3206     		.2byte	0x632
 1781 09ed B6090000 		.4byte	0x9b6
 1782 09f1 09       		.uleb128 0x9
 1783 09f2 B8       		.byte	0xb8
 1784 09f3 0A       		.byte	0xa
 1785 09f4 34       		.byte	0x34
 1786 09f5 020E0000 		.4byte	0xe02
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 129


 1787 09f9 0A       		.uleb128 0xa
 1788 09fa 83020000 		.4byte	.LASF143
 1789 09fe 0A       		.byte	0xa
 1790 09ff 37       		.byte	0x37
 1791 0a00 CD000000 		.4byte	0xcd
 1792 0a04 00       		.byte	0
 1793 0a05 0A       		.uleb128 0xa
 1794 0a06 5B0D0000 		.4byte	.LASF144
 1795 0a0a 0A       		.byte	0xa
 1796 0a0b 38       		.byte	0x38
 1797 0a0c CD000000 		.4byte	0xcd
 1798 0a10 04       		.byte	0x4
 1799 0a11 0A       		.uleb128 0xa
 1800 0a12 07010000 		.4byte	.LASF145
 1801 0a16 0A       		.byte	0xa
 1802 0a17 39       		.byte	0x39
 1803 0a18 CD000000 		.4byte	0xcd
 1804 0a1c 08       		.byte	0x8
 1805 0a1d 0A       		.uleb128 0xa
 1806 0a1e DE000000 		.4byte	.LASF146
 1807 0a22 0A       		.byte	0xa
 1808 0a23 3A       		.byte	0x3a
 1809 0a24 CD000000 		.4byte	0xcd
 1810 0a28 0C       		.byte	0xc
 1811 0a29 0A       		.uleb128 0xa
 1812 0a2a 17120000 		.4byte	.LASF147
 1813 0a2e 0A       		.byte	0xa
 1814 0a2f 3B       		.byte	0x3b
 1815 0a30 CD000000 		.4byte	0xcd
 1816 0a34 10       		.byte	0x10
 1817 0a35 0A       		.uleb128 0xa
 1818 0a36 B7100000 		.4byte	.LASF148
 1819 0a3a 0A       		.byte	0xa
 1820 0a3b 3C       		.byte	0x3c
 1821 0a3c CD000000 		.4byte	0xcd
 1822 0a40 14       		.byte	0x14
 1823 0a41 0A       		.uleb128 0xa
 1824 0a42 A70B0000 		.4byte	.LASF149
 1825 0a46 0A       		.byte	0xa
 1826 0a47 3D       		.byte	0x3d
 1827 0a48 CD000000 		.4byte	0xcd
 1828 0a4c 18       		.byte	0x18
 1829 0a4d 0A       		.uleb128 0xa
 1830 0a4e 241A0000 		.4byte	.LASF150
 1831 0a52 0A       		.byte	0xa
 1832 0a53 3E       		.byte	0x3e
 1833 0a54 CD000000 		.4byte	0xcd
 1834 0a58 1C       		.byte	0x1c
 1835 0a59 0A       		.uleb128 0xa
 1836 0a5a D40E0000 		.4byte	.LASF151
 1837 0a5e 0A       		.byte	0xa
 1838 0a5f 3F       		.byte	0x3f
 1839 0a60 CD000000 		.4byte	0xcd
 1840 0a64 20       		.byte	0x20
 1841 0a65 0A       		.uleb128 0xa
 1842 0a66 EB0E0000 		.4byte	.LASF152
 1843 0a6a 0A       		.byte	0xa
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 130


 1844 0a6b 40       		.byte	0x40
 1845 0a6c CD000000 		.4byte	0xcd
 1846 0a70 24       		.byte	0x24
 1847 0a71 0A       		.uleb128 0xa
 1848 0a72 9E130000 		.4byte	.LASF153
 1849 0a76 0A       		.byte	0xa
 1850 0a77 43       		.byte	0x43
 1851 0a78 AC000000 		.4byte	0xac
 1852 0a7c 28       		.byte	0x28
 1853 0a7d 0A       		.uleb128 0xa
 1854 0a7e EE060000 		.4byte	.LASF154
 1855 0a82 0A       		.byte	0xa
 1856 0a83 44       		.byte	0x44
 1857 0a84 AC000000 		.4byte	0xac
 1858 0a88 29       		.byte	0x29
 1859 0a89 0A       		.uleb128 0xa
 1860 0a8a AF120000 		.4byte	.LASF155
 1861 0a8e 0A       		.byte	0xa
 1862 0a8f 45       		.byte	0x45
 1863 0a90 AC000000 		.4byte	0xac
 1864 0a94 2A       		.byte	0x2a
 1865 0a95 0A       		.uleb128 0xa
 1866 0a96 FB130000 		.4byte	.LASF156
 1867 0a9a 0A       		.byte	0xa
 1868 0a9b 46       		.byte	0x46
 1869 0a9c AC000000 		.4byte	0xac
 1870 0aa0 2B       		.byte	0x2b
 1871 0aa1 0A       		.uleb128 0xa
 1872 0aa2 BF130000 		.4byte	.LASF157
 1873 0aa6 0A       		.byte	0xa
 1874 0aa7 47       		.byte	0x47
 1875 0aa8 AC000000 		.4byte	0xac
 1876 0aac 2C       		.byte	0x2c
 1877 0aad 0A       		.uleb128 0xa
 1878 0aae 65160000 		.4byte	.LASF158
 1879 0ab2 0A       		.byte	0xa
 1880 0ab3 48       		.byte	0x48
 1881 0ab4 AC000000 		.4byte	0xac
 1882 0ab8 2D       		.byte	0x2d
 1883 0ab9 0A       		.uleb128 0xa
 1884 0aba A4120000 		.4byte	.LASF159
 1885 0abe 0A       		.byte	0xa
 1886 0abf 49       		.byte	0x49
 1887 0ac0 AC000000 		.4byte	0xac
 1888 0ac4 2E       		.byte	0x2e
 1889 0ac5 0A       		.uleb128 0xa
 1890 0ac6 0B1A0000 		.4byte	.LASF160
 1891 0aca 0A       		.byte	0xa
 1892 0acb 4A       		.byte	0x4a
 1893 0acc AC000000 		.4byte	0xac
 1894 0ad0 2F       		.byte	0x2f
 1895 0ad1 0A       		.uleb128 0xa
 1896 0ad2 D3040000 		.4byte	.LASF161
 1897 0ad6 0A       		.byte	0xa
 1898 0ad7 4B       		.byte	0x4b
 1899 0ad8 AC000000 		.4byte	0xac
 1900 0adc 30       		.byte	0x30
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 131


 1901 0add 0A       		.uleb128 0xa
 1902 0ade 2C110000 		.4byte	.LASF162
 1903 0ae2 0A       		.byte	0xa
 1904 0ae3 4E       		.byte	0x4e
 1905 0ae4 AC000000 		.4byte	0xac
 1906 0ae8 31       		.byte	0x31
 1907 0ae9 0A       		.uleb128 0xa
 1908 0aea 81190000 		.4byte	.LASF163
 1909 0aee 0A       		.byte	0xa
 1910 0aef 4F       		.byte	0x4f
 1911 0af0 AC000000 		.4byte	0xac
 1912 0af4 32       		.byte	0x32
 1913 0af5 0A       		.uleb128 0xa
 1914 0af6 ED100000 		.4byte	.LASF164
 1915 0afa 0A       		.byte	0xa
 1916 0afb 50       		.byte	0x50
 1917 0afc AC000000 		.4byte	0xac
 1918 0b00 33       		.byte	0x33
 1919 0b01 0A       		.uleb128 0xa
 1920 0b02 4A160000 		.4byte	.LASF165
 1921 0b06 0A       		.byte	0xa
 1922 0b07 51       		.byte	0x51
 1923 0b08 AC000000 		.4byte	0xac
 1924 0b0c 34       		.byte	0x34
 1925 0b0d 0A       		.uleb128 0xa
 1926 0b0e AB070000 		.4byte	.LASF166
 1927 0b12 0A       		.byte	0xa
 1928 0b13 52       		.byte	0x52
 1929 0b14 B7000000 		.4byte	0xb7
 1930 0b18 36       		.byte	0x36
 1931 0b19 0A       		.uleb128 0xa
 1932 0b1a 09040000 		.4byte	.LASF167
 1933 0b1e 0A       		.byte	0xa
 1934 0b1f 53       		.byte	0x53
 1935 0b20 B7000000 		.4byte	0xb7
 1936 0b24 38       		.byte	0x38
 1937 0b25 0A       		.uleb128 0xa
 1938 0b26 D4030000 		.4byte	.LASF168
 1939 0b2a 0A       		.byte	0xa
 1940 0b2b 54       		.byte	0x54
 1941 0b2c B7000000 		.4byte	0xb7
 1942 0b30 3A       		.byte	0x3a
 1943 0b31 0A       		.uleb128 0xa
 1944 0b32 621A0000 		.4byte	.LASF169
 1945 0b36 0A       		.byte	0xa
 1946 0b37 55       		.byte	0x55
 1947 0b38 AC000000 		.4byte	0xac
 1948 0b3c 3C       		.byte	0x3c
 1949 0b3d 0A       		.uleb128 0xa
 1950 0b3e 030A0000 		.4byte	.LASF170
 1951 0b42 0A       		.byte	0xa
 1952 0b43 56       		.byte	0x56
 1953 0b44 AC000000 		.4byte	0xac
 1954 0b48 3D       		.byte	0x3d
 1955 0b49 0A       		.uleb128 0xa
 1956 0b4a 6D120000 		.4byte	.LASF171
 1957 0b4e 0A       		.byte	0xa
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 132


 1958 0b4f 57       		.byte	0x57
 1959 0b50 AC000000 		.4byte	0xac
 1960 0b54 3E       		.byte	0x3e
 1961 0b55 0A       		.uleb128 0xa
 1962 0b56 B9000000 		.4byte	.LASF172
 1963 0b5a 0A       		.byte	0xa
 1964 0b5b 58       		.byte	0x58
 1965 0b5c AC000000 		.4byte	0xac
 1966 0b60 3F       		.byte	0x3f
 1967 0b61 0A       		.uleb128 0xa
 1968 0b62 F6010000 		.4byte	.LASF173
 1969 0b66 0A       		.byte	0xa
 1970 0b67 59       		.byte	0x59
 1971 0b68 AC000000 		.4byte	0xac
 1972 0b6c 40       		.byte	0x40
 1973 0b6d 0A       		.uleb128 0xa
 1974 0b6e 4C110000 		.4byte	.LASF174
 1975 0b72 0A       		.byte	0xa
 1976 0b73 5A       		.byte	0x5a
 1977 0b74 AC000000 		.4byte	0xac
 1978 0b78 41       		.byte	0x41
 1979 0b79 0A       		.uleb128 0xa
 1980 0b7a 27190000 		.4byte	.LASF175
 1981 0b7e 0A       		.byte	0xa
 1982 0b7f 5B       		.byte	0x5b
 1983 0b80 AC000000 		.4byte	0xac
 1984 0b84 42       		.byte	0x42
 1985 0b85 0A       		.uleb128 0xa
 1986 0b86 700D0000 		.4byte	.LASF176
 1987 0b8a 0A       		.byte	0xa
 1988 0b8b 5C       		.byte	0x5c
 1989 0b8c AC000000 		.4byte	0xac
 1990 0b90 43       		.byte	0x43
 1991 0b91 0A       		.uleb128 0xa
 1992 0b92 7B0D0000 		.4byte	.LASF177
 1993 0b96 0A       		.byte	0xa
 1994 0b97 5D       		.byte	0x5d
 1995 0b98 AC000000 		.4byte	0xac
 1996 0b9c 44       		.byte	0x44
 1997 0b9d 0A       		.uleb128 0xa
 1998 0b9e 09140000 		.4byte	.LASF178
 1999 0ba2 0A       		.byte	0xa
 2000 0ba3 5E       		.byte	0x5e
 2001 0ba4 CD000000 		.4byte	0xcd
 2002 0ba8 48       		.byte	0x48
 2003 0ba9 0A       		.uleb128 0xa
 2004 0baa 5A040000 		.4byte	.LASF179
 2005 0bae 0A       		.byte	0xa
 2006 0baf 5F       		.byte	0x5f
 2007 0bb0 CD000000 		.4byte	0xcd
 2008 0bb4 4C       		.byte	0x4c
 2009 0bb5 0A       		.uleb128 0xa
 2010 0bb6 D9180000 		.4byte	.LASF180
 2011 0bba 0A       		.byte	0xa
 2012 0bbb 60       		.byte	0x60
 2013 0bbc AC000000 		.4byte	0xac
 2014 0bc0 50       		.byte	0x50
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 133


 2015 0bc1 0A       		.uleb128 0xa
 2016 0bc2 D70A0000 		.4byte	.LASF181
 2017 0bc6 0A       		.byte	0xa
 2018 0bc7 61       		.byte	0x61
 2019 0bc8 AC000000 		.4byte	0xac
 2020 0bcc 51       		.byte	0x51
 2021 0bcd 0A       		.uleb128 0xa
 2022 0bce 1D0F0000 		.4byte	.LASF182
 2023 0bd2 0A       		.byte	0xa
 2024 0bd3 62       		.byte	0x62
 2025 0bd4 AC000000 		.4byte	0xac
 2026 0bd8 52       		.byte	0x52
 2027 0bd9 0A       		.uleb128 0xa
 2028 0bda FC060000 		.4byte	.LASF183
 2029 0bde 0A       		.byte	0xa
 2030 0bdf 63       		.byte	0x63
 2031 0be0 AC000000 		.4byte	0xac
 2032 0be4 53       		.byte	0x53
 2033 0be5 0A       		.uleb128 0xa
 2034 0be6 F5140000 		.4byte	.LASF184
 2035 0bea 0A       		.byte	0xa
 2036 0beb 64       		.byte	0x64
 2037 0bec AC000000 		.4byte	0xac
 2038 0bf0 54       		.byte	0x54
 2039 0bf1 0A       		.uleb128 0xa
 2040 0bf2 0E0C0000 		.4byte	.LASF185
 2041 0bf6 0A       		.byte	0xa
 2042 0bf7 65       		.byte	0x65
 2043 0bf8 AC000000 		.4byte	0xac
 2044 0bfc 55       		.byte	0x55
 2045 0bfd 0A       		.uleb128 0xa
 2046 0bfe 33190000 		.4byte	.LASF186
 2047 0c02 0A       		.byte	0xa
 2048 0c03 66       		.byte	0x66
 2049 0c04 AC000000 		.4byte	0xac
 2050 0c08 56       		.byte	0x56
 2051 0c09 0A       		.uleb128 0xa
 2052 0c0a B9120000 		.4byte	.LASF187
 2053 0c0e 0A       		.byte	0xa
 2054 0c0f 67       		.byte	0x67
 2055 0c10 AC000000 		.4byte	0xac
 2056 0c14 57       		.byte	0x57
 2057 0c15 0A       		.uleb128 0xa
 2058 0c16 B4090000 		.4byte	.LASF188
 2059 0c1a 0A       		.byte	0xa
 2060 0c1b 68       		.byte	0x68
 2061 0c1c AC000000 		.4byte	0xac
 2062 0c20 58       		.byte	0x58
 2063 0c21 0A       		.uleb128 0xa
 2064 0c22 781A0000 		.4byte	.LASF189
 2065 0c26 0A       		.byte	0xa
 2066 0c27 69       		.byte	0x69
 2067 0c28 AC000000 		.4byte	0xac
 2068 0c2c 59       		.byte	0x59
 2069 0c2d 0A       		.uleb128 0xa
 2070 0c2e FF170000 		.4byte	.LASF190
 2071 0c32 0A       		.byte	0xa
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 134


 2072 0c33 6E       		.byte	0x6e
 2073 0c34 C2000000 		.4byte	0xc2
 2074 0c38 5A       		.byte	0x5a
 2075 0c39 0A       		.uleb128 0xa
 2076 0c3a 3A010000 		.4byte	.LASF191
 2077 0c3e 0A       		.byte	0xa
 2078 0c3f 6F       		.byte	0x6f
 2079 0c40 C2000000 		.4byte	0xc2
 2080 0c44 5C       		.byte	0x5c
 2081 0c45 0A       		.uleb128 0xa
 2082 0c46 DC0E0000 		.4byte	.LASF192
 2083 0c4a 0A       		.byte	0xa
 2084 0c4b 70       		.byte	0x70
 2085 0c4c AC000000 		.4byte	0xac
 2086 0c50 5E       		.byte	0x5e
 2087 0c51 0A       		.uleb128 0xa
 2088 0c52 8F190000 		.4byte	.LASF193
 2089 0c56 0A       		.byte	0xa
 2090 0c57 71       		.byte	0x71
 2091 0c58 AC000000 		.4byte	0xac
 2092 0c5c 5F       		.byte	0x5f
 2093 0c5d 0A       		.uleb128 0xa
 2094 0c5e 5E0C0000 		.4byte	.LASF194
 2095 0c62 0A       		.byte	0xa
 2096 0c63 72       		.byte	0x72
 2097 0c64 AC000000 		.4byte	0xac
 2098 0c68 60       		.byte	0x60
 2099 0c69 0A       		.uleb128 0xa
 2100 0c6a C40D0000 		.4byte	.LASF195
 2101 0c6e 0A       		.byte	0xa
 2102 0c6f 73       		.byte	0x73
 2103 0c70 CD000000 		.4byte	0xcd
 2104 0c74 64       		.byte	0x64
 2105 0c75 0A       		.uleb128 0xa
 2106 0c76 E90A0000 		.4byte	.LASF196
 2107 0c7a 0A       		.byte	0xa
 2108 0c7b 76       		.byte	0x76
 2109 0c7c C2000000 		.4byte	0xc2
 2110 0c80 68       		.byte	0x68
 2111 0c81 0A       		.uleb128 0xa
 2112 0c82 2D120000 		.4byte	.LASF197
 2113 0c86 0A       		.byte	0xa
 2114 0c87 77       		.byte	0x77
 2115 0c88 C2000000 		.4byte	0xc2
 2116 0c8c 6A       		.byte	0x6a
 2117 0c8d 0A       		.uleb128 0xa
 2118 0c8e DE100000 		.4byte	.LASF198
 2119 0c92 0A       		.byte	0xa
 2120 0c93 78       		.byte	0x78
 2121 0c94 C2000000 		.4byte	0xc2
 2122 0c98 6C       		.byte	0x6c
 2123 0c99 0A       		.uleb128 0xa
 2124 0c9a BE040000 		.4byte	.LASF199
 2125 0c9e 0A       		.byte	0xa
 2126 0c9f 79       		.byte	0x79
 2127 0ca0 C2000000 		.4byte	0xc2
 2128 0ca4 6E       		.byte	0x6e
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 135


 2129 0ca5 0A       		.uleb128 0xa
 2130 0ca6 590E0000 		.4byte	.LASF200
 2131 0caa 0A       		.byte	0xa
 2132 0cab 7B       		.byte	0x7b
 2133 0cac AC000000 		.4byte	0xac
 2134 0cb0 70       		.byte	0x70
 2135 0cb1 0A       		.uleb128 0xa
 2136 0cb2 20050000 		.4byte	.LASF201
 2137 0cb6 0A       		.byte	0xa
 2138 0cb7 7C       		.byte	0x7c
 2139 0cb8 AC000000 		.4byte	0xac
 2140 0cbc 71       		.byte	0x71
 2141 0cbd 0A       		.uleb128 0xa
 2142 0cbe 27040000 		.4byte	.LASF202
 2143 0cc2 0A       		.byte	0xa
 2144 0cc3 7D       		.byte	0x7d
 2145 0cc4 AC000000 		.4byte	0xac
 2146 0cc8 72       		.byte	0x72
 2147 0cc9 0A       		.uleb128 0xa
 2148 0cca 03020000 		.4byte	.LASF203
 2149 0cce 0A       		.byte	0xa
 2150 0ccf 7E       		.byte	0x7e
 2151 0cd0 AC000000 		.4byte	0xac
 2152 0cd4 73       		.byte	0x73
 2153 0cd5 0A       		.uleb128 0xa
 2154 0cd6 19130000 		.4byte	.LASF204
 2155 0cda 0A       		.byte	0xa
 2156 0cdb 80       		.byte	0x80
 2157 0cdc C2000000 		.4byte	0xc2
 2158 0ce0 74       		.byte	0x74
 2159 0ce1 0A       		.uleb128 0xa
 2160 0ce2 C6110000 		.4byte	.LASF205
 2161 0ce6 0A       		.byte	0xa
 2162 0ce7 81       		.byte	0x81
 2163 0ce8 C2000000 		.4byte	0xc2
 2164 0cec 76       		.byte	0x76
 2165 0ced 0A       		.uleb128 0xa
 2166 0cee 7C0E0000 		.4byte	.LASF206
 2167 0cf2 0A       		.byte	0xa
 2168 0cf3 82       		.byte	0x82
 2169 0cf4 C2000000 		.4byte	0xc2
 2170 0cf8 78       		.byte	0x78
 2171 0cf9 0A       		.uleb128 0xa
 2172 0cfa 82070000 		.4byte	.LASF207
 2173 0cfe 0A       		.byte	0xa
 2174 0cff 83       		.byte	0x83
 2175 0d00 C2000000 		.4byte	0xc2
 2176 0d04 7A       		.byte	0x7a
 2177 0d05 0A       		.uleb128 0xa
 2178 0d06 8A150000 		.4byte	.LASF208
 2179 0d0a 0A       		.byte	0xa
 2180 0d0b 86       		.byte	0x86
 2181 0d0c AC000000 		.4byte	0xac
 2182 0d10 7C       		.byte	0x7c
 2183 0d11 0A       		.uleb128 0xa
 2184 0d12 FE180000 		.4byte	.LASF209
 2185 0d16 0A       		.byte	0xa
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 136


 2186 0d17 87       		.byte	0x87
 2187 0d18 AC000000 		.4byte	0xac
 2188 0d1c 7D       		.byte	0x7d
 2189 0d1d 0A       		.uleb128 0xa
 2190 0d1e 28070000 		.4byte	.LASF210
 2191 0d22 0A       		.byte	0xa
 2192 0d23 88       		.byte	0x88
 2193 0d24 AC000000 		.4byte	0xac
 2194 0d28 7E       		.byte	0x7e
 2195 0d29 0A       		.uleb128 0xa
 2196 0d2a 74060000 		.4byte	.LASF211
 2197 0d2e 0A       		.byte	0xa
 2198 0d2f 89       		.byte	0x89
 2199 0d30 AC000000 		.4byte	0xac
 2200 0d34 7F       		.byte	0x7f
 2201 0d35 0A       		.uleb128 0xa
 2202 0d36 AB130000 		.4byte	.LASF212
 2203 0d3a 0A       		.byte	0xa
 2204 0d3b 8A       		.byte	0x8a
 2205 0d3c AC000000 		.4byte	0xac
 2206 0d40 80       		.byte	0x80
 2207 0d41 0A       		.uleb128 0xa
 2208 0d42 A2000000 		.4byte	.LASF213
 2209 0d46 0A       		.byte	0xa
 2210 0d47 8D       		.byte	0x8d
 2211 0d48 CD000000 		.4byte	0xcd
 2212 0d4c 84       		.byte	0x84
 2213 0d4d 0A       		.uleb128 0xa
 2214 0d4e BD150000 		.4byte	.LASF214
 2215 0d52 0A       		.byte	0xa
 2216 0d53 8E       		.byte	0x8e
 2217 0d54 CD000000 		.4byte	0xcd
 2218 0d58 88       		.byte	0x88
 2219 0d59 0A       		.uleb128 0xa
 2220 0d5a 37110000 		.4byte	.LASF215
 2221 0d5e 0A       		.byte	0xa
 2222 0d5f 8F       		.byte	0x8f
 2223 0d60 CD000000 		.4byte	0xcd
 2224 0d64 8C       		.byte	0x8c
 2225 0d65 0A       		.uleb128 0xa
 2226 0d66 EE160000 		.4byte	.LASF216
 2227 0d6a 0A       		.byte	0xa
 2228 0d6b 90       		.byte	0x90
 2229 0d6c CD000000 		.4byte	0xcd
 2230 0d70 90       		.byte	0x90
 2231 0d71 0A       		.uleb128 0xa
 2232 0d72 48150000 		.4byte	.LASF217
 2233 0d76 0A       		.byte	0xa
 2234 0d77 91       		.byte	0x91
 2235 0d78 CD000000 		.4byte	0xcd
 2236 0d7c 94       		.byte	0x94
 2237 0d7d 0A       		.uleb128 0xa
 2238 0d7e 51050000 		.4byte	.LASF218
 2239 0d82 0A       		.byte	0xa
 2240 0d83 92       		.byte	0x92
 2241 0d84 CD000000 		.4byte	0xcd
 2242 0d88 98       		.byte	0x98
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 137


 2243 0d89 0A       		.uleb128 0xa
 2244 0d8a FB150000 		.4byte	.LASF219
 2245 0d8e 0A       		.byte	0xa
 2246 0d8f 93       		.byte	0x93
 2247 0d90 CD000000 		.4byte	0xcd
 2248 0d94 9C       		.byte	0x9c
 2249 0d95 0A       		.uleb128 0xa
 2250 0d96 F80B0000 		.4byte	.LASF220
 2251 0d9a 0A       		.byte	0xa
 2252 0d9b 94       		.byte	0x94
 2253 0d9c CD000000 		.4byte	0xcd
 2254 0da0 A0       		.byte	0xa0
 2255 0da1 0A       		.uleb128 0xa
 2256 0da2 25010000 		.4byte	.LASF221
 2257 0da6 0A       		.byte	0xa
 2258 0da7 95       		.byte	0x95
 2259 0da8 C2000000 		.4byte	0xc2
 2260 0dac A4       		.byte	0xa4
 2261 0dad 0A       		.uleb128 0xa
 2262 0dae EA120000 		.4byte	.LASF222
 2263 0db2 0A       		.byte	0xa
 2264 0db3 96       		.byte	0x96
 2265 0db4 C2000000 		.4byte	0xc2
 2266 0db8 A6       		.byte	0xa6
 2267 0db9 0A       		.uleb128 0xa
 2268 0dba B2160000 		.4byte	.LASF223
 2269 0dbe 0A       		.byte	0xa
 2270 0dbf 97       		.byte	0x97
 2271 0dc0 C2000000 		.4byte	0xc2
 2272 0dc4 A8       		.byte	0xa8
 2273 0dc5 0A       		.uleb128 0xa
 2274 0dc6 9E0E0000 		.4byte	.LASF224
 2275 0dca 0A       		.byte	0xa
 2276 0dcb 98       		.byte	0x98
 2277 0dcc C2000000 		.4byte	0xc2
 2278 0dd0 AA       		.byte	0xaa
 2279 0dd1 0A       		.uleb128 0xa
 2280 0dd2 68040000 		.4byte	.LASF225
 2281 0dd6 0A       		.byte	0xa
 2282 0dd7 99       		.byte	0x99
 2283 0dd8 C2000000 		.4byte	0xc2
 2284 0ddc AC       		.byte	0xac
 2285 0ddd 0A       		.uleb128 0xa
 2286 0dde 6A110000 		.4byte	.LASF226
 2287 0de2 0A       		.byte	0xa
 2288 0de3 9A       		.byte	0x9a
 2289 0de4 C2000000 		.4byte	0xc2
 2290 0de8 AE       		.byte	0xae
 2291 0de9 0A       		.uleb128 0xa
 2292 0dea 9C040000 		.4byte	.LASF227
 2293 0dee 0A       		.byte	0xa
 2294 0def 9D       		.byte	0x9d
 2295 0df0 C2000000 		.4byte	0xc2
 2296 0df4 B0       		.byte	0xb0
 2297 0df5 0A       		.uleb128 0xa
 2298 0df6 2E170000 		.4byte	.LASF228
 2299 0dfa 0A       		.byte	0xa
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 138


 2300 0dfb 9E       		.byte	0x9e
 2301 0dfc CD000000 		.4byte	0xcd
 2302 0e00 B4       		.byte	0xb4
 2303 0e01 00       		.byte	0
 2304 0e02 04       		.uleb128 0x4
 2305 0e03 A5190000 		.4byte	.LASF229
 2306 0e07 0A       		.byte	0xa
 2307 0e08 9F       		.byte	0x9f
 2308 0e09 F1090000 		.4byte	0x9f1
 2309 0e0d 0F       		.uleb128 0xf
 2310 0e0e 7D140000 		.4byte	.LASF230
 2311 0e12 0B       		.byte	0xb
 2312 0e13 F601     		.2byte	0x1f6
 2313 0e15 A5000000 		.4byte	0xa5
 2314 0e19 03       		.uleb128 0x3
 2315 0e1a 04       		.byte	0x4
 2316 0e1b 04       		.byte	0x4
 2317 0e1c CD060000 		.4byte	.LASF231
 2318 0e20 03       		.uleb128 0x3
 2319 0e21 08       		.byte	0x8
 2320 0e22 04       		.byte	0x4
 2321 0e23 1D1A0000 		.4byte	.LASF232
 2322 0e27 0F       		.uleb128 0xf
 2323 0e28 171A0000 		.4byte	.LASF233
 2324 0e2c 0B       		.byte	0xb
 2325 0e2d EA03     		.2byte	0x3ea
 2326 0e2f AC000000 		.4byte	0xac
 2327 0e33 09       		.uleb128 0x9
 2328 0e34 24       		.byte	0x24
 2329 0e35 0C       		.byte	0xc
 2330 0e36 EF       		.byte	0xef
 2331 0e37 A80E0000 		.4byte	0xea8
 2332 0e3b 0E       		.uleb128 0xe
 2333 0e3c 6F757400 		.ascii	"out\000"
 2334 0e40 0C       		.byte	0xc
 2335 0e41 F1       		.byte	0xf1
 2336 0e42 CD000000 		.4byte	0xcd
 2337 0e46 00       		.byte	0
 2338 0e47 0A       		.uleb128 0xa
 2339 0e48 FF1A0000 		.4byte	.LASF234
 2340 0e4c 0C       		.byte	0xc
 2341 0e4d F2       		.byte	0xf2
 2342 0e4e CD000000 		.4byte	0xcd
 2343 0e52 04       		.byte	0x4
 2344 0e53 0A       		.uleb128 0xa
 2345 0e54 120B0000 		.4byte	.LASF235
 2346 0e58 0C       		.byte	0xc
 2347 0e59 F3       		.byte	0xf3
 2348 0e5a CD000000 		.4byte	0xcd
 2349 0e5e 08       		.byte	0x8
 2350 0e5f 0E       		.uleb128 0xe
 2351 0e60 63666700 		.ascii	"cfg\000"
 2352 0e64 0C       		.byte	0xc
 2353 0e65 F4       		.byte	0xf4
 2354 0e66 CD000000 		.4byte	0xcd
 2355 0e6a 0C       		.byte	0xc
 2356 0e6b 0A       		.uleb128 0xa
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 139


 2357 0e6c 01010000 		.4byte	.LASF236
 2358 0e70 0C       		.byte	0xc
 2359 0e71 F5       		.byte	0xf5
 2360 0e72 CD000000 		.4byte	0xcd
 2361 0e76 10       		.byte	0x10
 2362 0e77 0A       		.uleb128 0xa
 2363 0e78 980D0000 		.4byte	.LASF237
 2364 0e7c 0C       		.byte	0xc
 2365 0e7d F6       		.byte	0xf6
 2366 0e7e CD000000 		.4byte	0xcd
 2367 0e82 14       		.byte	0x14
 2368 0e83 0A       		.uleb128 0xa
 2369 0e84 54020000 		.4byte	.LASF238
 2370 0e88 0C       		.byte	0xc
 2371 0e89 F7       		.byte	0xf7
 2372 0e8a CD000000 		.4byte	0xcd
 2373 0e8e 18       		.byte	0x18
 2374 0e8f 0A       		.uleb128 0xa
 2375 0e90 93130000 		.4byte	.LASF239
 2376 0e94 0C       		.byte	0xc
 2377 0e95 F8       		.byte	0xf8
 2378 0e96 CD000000 		.4byte	0xcd
 2379 0e9a 1C       		.byte	0x1c
 2380 0e9b 0A       		.uleb128 0xa
 2381 0e9c A0070000 		.4byte	.LASF240
 2382 0ea0 0C       		.byte	0xc
 2383 0ea1 F9       		.byte	0xf9
 2384 0ea2 CD000000 		.4byte	0xcd
 2385 0ea6 20       		.byte	0x20
 2386 0ea7 00       		.byte	0
 2387 0ea8 04       		.uleb128 0x4
 2388 0ea9 5B170000 		.4byte	.LASF241
 2389 0ead 0C       		.byte	0xc
 2390 0eae FA       		.byte	0xfa
 2391 0eaf 330E0000 		.4byte	0xe33
 2392 0eb3 10       		.uleb128 0x10
 2393 0eb4 01       		.byte	0x1
 2394 0eb5 53000000 		.4byte	0x53
 2395 0eb9 03       		.byte	0x3
 2396 0eba 4E05     		.2byte	0x54e
 2397 0ebc D90E0000 		.4byte	0xed9
 2398 0ec0 11       		.uleb128 0x11
 2399 0ec1 C5000000 		.4byte	.LASF242
 2400 0ec5 00       		.byte	0
 2401 0ec6 11       		.uleb128 0x11
 2402 0ec7 A3010000 		.4byte	.LASF243
 2403 0ecb 01       		.byte	0x1
 2404 0ecc 11       		.uleb128 0x11
 2405 0ecd 3C1A0000 		.4byte	.LASF244
 2406 0ed1 00       		.byte	0
 2407 0ed2 11       		.uleb128 0x11
 2408 0ed3 00000000 		.4byte	.LASF245
 2409 0ed7 01       		.byte	0x1
 2410 0ed8 00       		.byte	0
 2411 0ed9 10       		.uleb128 0x10
 2412 0eda 04       		.byte	0x4
 2413 0edb 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 140


 2414 0edf 02       		.byte	0x2
 2415 0ee0 5102     		.2byte	0x251
 2416 0ee2 080F0000 		.4byte	0xf08
 2417 0ee6 11       		.uleb128 0x11
 2418 0ee7 76040000 		.4byte	.LASF246
 2419 0eeb 00       		.byte	0
 2420 0eec 12       		.uleb128 0x12
 2421 0eed D6120000 		.4byte	.LASF247
 2422 0ef1 01004A00 		.4byte	0x4a0001
 2423 0ef5 12       		.uleb128 0x12
 2424 0ef6 5F010000 		.4byte	.LASF248
 2425 0efa 02004A00 		.4byte	0x4a0002
 2426 0efe 12       		.uleb128 0x12
 2427 0eff 3F120000 		.4byte	.LASF249
 2428 0f03 03004A00 		.4byte	0x4a0003
 2429 0f07 00       		.byte	0
 2430 0f08 0F       		.uleb128 0xf
 2431 0f09 680A0000 		.4byte	.LASF250
 2432 0f0d 02       		.byte	0x2
 2433 0f0e 5602     		.2byte	0x256
 2434 0f10 D90E0000 		.4byte	0xed9
 2435 0f14 10       		.uleb128 0x10
 2436 0f15 02       		.byte	0x2
 2437 0f16 77000000 		.4byte	0x77
 2438 0f1a 02       		.byte	0x2
 2439 0f1b B302     		.2byte	0x2b3
 2440 0f1d 630F0000 		.4byte	0xf63
 2441 0f21 11       		.uleb128 0x11
 2442 0f22 57140000 		.4byte	.LASF251
 2443 0f26 00       		.byte	0
 2444 0f27 11       		.uleb128 0x11
 2445 0f28 7D170000 		.4byte	.LASF252
 2446 0f2c 01       		.byte	0x1
 2447 0f2d 11       		.uleb128 0x11
 2448 0f2e 400E0000 		.4byte	.LASF253
 2449 0f32 02       		.byte	0x2
 2450 0f33 11       		.uleb128 0x11
 2451 0f34 05150000 		.4byte	.LASF254
 2452 0f38 03       		.byte	0x3
 2453 0f39 11       		.uleb128 0x11
 2454 0f3a 6E150000 		.4byte	.LASF255
 2455 0f3e 04       		.byte	0x4
 2456 0f3f 13       		.uleb128 0x13
 2457 0f40 4E060000 		.4byte	.LASF256
 2458 0f44 0001     		.2byte	0x100
 2459 0f46 13       		.uleb128 0x13
 2460 0f47 7B120000 		.4byte	.LASF257
 2461 0f4b 1001     		.2byte	0x110
 2462 0f4d 13       		.uleb128 0x13
 2463 0f4e 7B0B0000 		.4byte	.LASF258
 2464 0f52 1101     		.2byte	0x111
 2465 0f54 13       		.uleb128 0x13
 2466 0f55 291B0000 		.4byte	.LASF259
 2467 0f59 1201     		.2byte	0x112
 2468 0f5b 13       		.uleb128 0x13
 2469 0f5c 2A0A0000 		.4byte	.LASF260
 2470 0f60 1301     		.2byte	0x113
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 141


 2471 0f62 00       		.byte	0
 2472 0f63 10       		.uleb128 0x10
 2473 0f64 01       		.byte	0x1
 2474 0f65 53000000 		.4byte	0x53
 2475 0f69 02       		.byte	0x2
 2476 0f6a DD02     		.2byte	0x2dd
 2477 0f6c 890F0000 		.4byte	0xf89
 2478 0f70 11       		.uleb128 0x11
 2479 0f71 95160000 		.4byte	.LASF261
 2480 0f75 00       		.byte	0
 2481 0f76 11       		.uleb128 0x11
 2482 0f77 9F150000 		.4byte	.LASF262
 2483 0f7b 01       		.byte	0x1
 2484 0f7c 11       		.uleb128 0x11
 2485 0f7d 2C160000 		.4byte	.LASF263
 2486 0f81 02       		.byte	0x2
 2487 0f82 11       		.uleb128 0x11
 2488 0f83 C8090000 		.4byte	.LASF264
 2489 0f87 03       		.byte	0x3
 2490 0f88 00       		.byte	0
 2491 0f89 0F       		.uleb128 0xf
 2492 0f8a BF0B0000 		.4byte	.LASF265
 2493 0f8e 02       		.byte	0x2
 2494 0f8f E202     		.2byte	0x2e2
 2495 0f91 630F0000 		.4byte	0xf63
 2496 0f95 10       		.uleb128 0x10
 2497 0f96 01       		.byte	0x1
 2498 0f97 53000000 		.4byte	0x53
 2499 0f9b 02       		.byte	0x2
 2500 0f9c E802     		.2byte	0x2e8
 2501 0f9e C10F0000 		.4byte	0xfc1
 2502 0fa2 11       		.uleb128 0x11
 2503 0fa3 B60C0000 		.4byte	.LASF266
 2504 0fa7 00       		.byte	0
 2505 0fa8 11       		.uleb128 0x11
 2506 0fa9 CF0C0000 		.4byte	.LASF267
 2507 0fad 01       		.byte	0x1
 2508 0fae 11       		.uleb128 0x11
 2509 0faf E80C0000 		.4byte	.LASF268
 2510 0fb3 02       		.byte	0x2
 2511 0fb4 11       		.uleb128 0x11
 2512 0fb5 010D0000 		.4byte	.LASF269
 2513 0fb9 03       		.byte	0x3
 2514 0fba 11       		.uleb128 0x11
 2515 0fbb 1A0D0000 		.4byte	.LASF270
 2516 0fbf 04       		.byte	0x4
 2517 0fc0 00       		.byte	0
 2518 0fc1 0F       		.uleb128 0xf
 2519 0fc2 E10B0000 		.4byte	.LASF271
 2520 0fc6 02       		.byte	0x2
 2521 0fc7 EE02     		.2byte	0x2ee
 2522 0fc9 950F0000 		.4byte	0xf95
 2523 0fcd 14       		.uleb128 0x14
 2524 0fce 14       		.byte	0x14
 2525 0fcf 02       		.byte	0x2
 2526 0fd0 F702     		.2byte	0x2f7
 2527 0fd2 59100000 		.4byte	0x1059
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 142


 2528 0fd6 15       		.uleb128 0x15
 2529 0fd7 CB040000 		.4byte	.LASF272
 2530 0fdb 02       		.byte	0x2
 2531 0fdc F902     		.2byte	0x2f9
 2532 0fde CD000000 		.4byte	0xcd
 2533 0fe2 00       		.byte	0
 2534 0fe3 15       		.uleb128 0x15
 2535 0fe4 AA020000 		.4byte	.LASF273
 2536 0fe8 02       		.byte	0x2
 2537 0fe9 FA02     		.2byte	0x2fa
 2538 0feb C2000000 		.4byte	0xc2
 2539 0fef 04       		.byte	0x4
 2540 0ff0 15       		.uleb128 0x15
 2541 0ff1 8A140000 		.4byte	.LASF274
 2542 0ff5 02       		.byte	0x2
 2543 0ff6 FB02     		.2byte	0x2fb
 2544 0ff8 C10F0000 		.4byte	0xfc1
 2545 0ffc 06       		.byte	0x6
 2546 0ffd 15       		.uleb128 0x15
 2547 0ffe 9F0D0000 		.4byte	.LASF275
 2548 1002 02       		.byte	0x2
 2549 1003 FC02     		.2byte	0x2fc
 2550 1005 59100000 		.4byte	0x1059
 2551 1009 07       		.byte	0x7
 2552 100a 15       		.uleb128 0x15
 2553 100b 9C020000 		.4byte	.LASF276
 2554 100f 02       		.byte	0x2
 2555 1010 FD02     		.2byte	0x2fd
 2556 1012 C2000000 		.4byte	0xc2
 2557 1016 08       		.byte	0x8
 2558 1017 15       		.uleb128 0x15
 2559 1018 B8070000 		.4byte	.LASF277
 2560 101c 02       		.byte	0x2
 2561 101d FE02     		.2byte	0x2fe
 2562 101f AC000000 		.4byte	0xac
 2563 1023 0A       		.byte	0xa
 2564 1024 15       		.uleb128 0x15
 2565 1025 E8160000 		.4byte	.LASF278
 2566 1029 02       		.byte	0x2
 2567 102a FF02     		.2byte	0x2ff
 2568 102c AC000000 		.4byte	0xac
 2569 1030 0B       		.byte	0xb
 2570 1031 15       		.uleb128 0x15
 2571 1032 4C070000 		.4byte	.LASF279
 2572 1036 02       		.byte	0x2
 2573 1037 0003     		.2byte	0x300
 2574 1039 C2000000 		.4byte	0xc2
 2575 103d 0C       		.byte	0xc
 2576 103e 15       		.uleb128 0x15
 2577 103f E9030000 		.4byte	.LASF280
 2578 1043 02       		.byte	0x2
 2579 1044 0103     		.2byte	0x301
 2580 1046 890F0000 		.4byte	0xf89
 2581 104a 0E       		.byte	0xe
 2582 104b 15       		.uleb128 0x15
 2583 104c BB010000 		.4byte	.LASF281
 2584 1050 02       		.byte	0x2
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 143


 2585 1051 0203     		.2byte	0x302
 2586 1053 C2000000 		.4byte	0xc2
 2587 1057 10       		.byte	0x10
 2588 1058 00       		.byte	0
 2589 1059 03       		.uleb128 0x3
 2590 105a 01       		.byte	0x1
 2591 105b 02       		.byte	0x2
 2592 105c 1A0B0000 		.4byte	.LASF282
 2593 1060 0F       		.uleb128 0xf
 2594 1061 11160000 		.4byte	.LASF283
 2595 1065 02       		.byte	0x2
 2596 1066 0303     		.2byte	0x303
 2597 1068 CD0F0000 		.4byte	0xfcd
 2598 106c 10       		.uleb128 0x10
 2599 106d 01       		.byte	0x1
 2600 106e 53000000 		.4byte	0x53
 2601 1072 02       		.byte	0x2
 2602 1073 A105     		.2byte	0x5a1
 2603 1075 DA100000 		.4byte	0x10da
 2604 1079 11       		.uleb128 0x11
 2605 107a BE070000 		.4byte	.LASF284
 2606 107e 00       		.byte	0
 2607 107f 11       		.uleb128 0x11
 2608 1080 DA070000 		.4byte	.LASF285
 2609 1084 01       		.byte	0x1
 2610 1085 11       		.uleb128 0x11
 2611 1086 F6070000 		.4byte	.LASF286
 2612 108a 02       		.byte	0x2
 2613 108b 11       		.uleb128 0x11
 2614 108c 12080000 		.4byte	.LASF287
 2615 1090 03       		.byte	0x3
 2616 1091 11       		.uleb128 0x11
 2617 1092 2E080000 		.4byte	.LASF288
 2618 1096 04       		.byte	0x4
 2619 1097 11       		.uleb128 0x11
 2620 1098 4A080000 		.4byte	.LASF289
 2621 109c 05       		.byte	0x5
 2622 109d 11       		.uleb128 0x11
 2623 109e 66080000 		.4byte	.LASF290
 2624 10a2 06       		.byte	0x6
 2625 10a3 11       		.uleb128 0x11
 2626 10a4 82080000 		.4byte	.LASF291
 2627 10a8 07       		.byte	0x7
 2628 10a9 11       		.uleb128 0x11
 2629 10aa 9E080000 		.4byte	.LASF292
 2630 10ae 08       		.byte	0x8
 2631 10af 11       		.uleb128 0x11
 2632 10b0 BA080000 		.4byte	.LASF293
 2633 10b4 09       		.byte	0x9
 2634 10b5 11       		.uleb128 0x11
 2635 10b6 31060000 		.4byte	.LASF294
 2636 10ba 0A       		.byte	0xa
 2637 10bb 11       		.uleb128 0x11
 2638 10bc 60100000 		.4byte	.LASF295
 2639 10c0 0B       		.byte	0xb
 2640 10c1 11       		.uleb128 0x11
 2641 10c2 7D100000 		.4byte	.LASF296
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 144


 2642 10c6 0C       		.byte	0xc
 2643 10c7 11       		.uleb128 0x11
 2644 10c8 9A100000 		.4byte	.LASF297
 2645 10cc 0D       		.byte	0xd
 2646 10cd 11       		.uleb128 0x11
 2647 10ce 88060000 		.4byte	.LASF298
 2648 10d2 0E       		.byte	0xe
 2649 10d3 11       		.uleb128 0x11
 2650 10d4 C1100000 		.4byte	.LASF299
 2651 10d8 0F       		.byte	0xf
 2652 10d9 00       		.byte	0
 2653 10da 0F       		.uleb128 0xf
 2654 10db F90A0000 		.4byte	.LASF300
 2655 10df 02       		.byte	0x2
 2656 10e0 B205     		.2byte	0x5b2
 2657 10e2 6C100000 		.4byte	0x106c
 2658 10e6 10       		.uleb128 0x10
 2659 10e7 01       		.byte	0x1
 2660 10e8 53000000 		.4byte	0x53
 2661 10ec 02       		.byte	0x2
 2662 10ed BA05     		.2byte	0x5ba
 2663 10ef 0C110000 		.4byte	0x110c
 2664 10f3 11       		.uleb128 0x11
 2665 10f4 A4140000 		.4byte	.LASF301
 2666 10f8 00       		.byte	0
 2667 10f9 11       		.uleb128 0x11
 2668 10fa E7090000 		.4byte	.LASF302
 2669 10fe 01       		.byte	0x1
 2670 10ff 11       		.uleb128 0x11
 2671 1100 0E0A0000 		.4byte	.LASF303
 2672 1104 02       		.byte	0x2
 2673 1105 11       		.uleb128 0x11
 2674 1106 440A0000 		.4byte	.LASF304
 2675 110a 03       		.byte	0x3
 2676 110b 00       		.byte	0
 2677 110c 0F       		.uleb128 0xf
 2678 110d ED040000 		.4byte	.LASF305
 2679 1111 02       		.byte	0x2
 2680 1112 BF05     		.2byte	0x5bf
 2681 1114 E6100000 		.4byte	0x10e6
 2682 1118 10       		.uleb128 0x10
 2683 1119 01       		.byte	0x1
 2684 111a 53000000 		.4byte	0x53
 2685 111e 02       		.byte	0x2
 2686 111f 2009     		.2byte	0x920
 2687 1121 3E110000 		.4byte	0x113e
 2688 1125 11       		.uleb128 0x11
 2689 1126 121B0000 		.4byte	.LASF306
 2690 112a 00       		.byte	0
 2691 112b 11       		.uleb128 0x11
 2692 112c 8C010000 		.4byte	.LASF307
 2693 1130 01       		.byte	0x1
 2694 1131 11       		.uleb128 0x11
 2695 1132 42170000 		.4byte	.LASF308
 2696 1136 02       		.byte	0x2
 2697 1137 11       		.uleb128 0x11
 2698 1138 0F190000 		.4byte	.LASF309
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 145


 2699 113c 03       		.byte	0x3
 2700 113d 00       		.byte	0
 2701 113e 0F       		.uleb128 0xf
 2702 113f CF160000 		.4byte	.LASF310
 2703 1143 02       		.byte	0x2
 2704 1144 2509     		.2byte	0x925
 2705 1146 18110000 		.4byte	0x1118
 2706 114a 10       		.uleb128 0x10
 2707 114b 02       		.byte	0x2
 2708 114c 77000000 		.4byte	0x77
 2709 1150 02       		.byte	0x2
 2710 1151 6309     		.2byte	0x963
 2711 1153 79110000 		.4byte	0x1179
 2712 1157 11       		.uleb128 0x11
 2713 1158 DB140000 		.4byte	.LASF311
 2714 115c 00       		.byte	0
 2715 115d 11       		.uleb128 0x11
 2716 115e 2A0B0000 		.4byte	.LASF312
 2717 1162 01       		.byte	0x1
 2718 1163 13       		.uleb128 0x13
 2719 1164 27090000 		.4byte	.LASF313
 2720 1168 0101     		.2byte	0x101
 2721 116a 13       		.uleb128 0x13
 2722 116b 46090000 		.4byte	.LASF314
 2723 116f 0102     		.2byte	0x201
 2724 1171 13       		.uleb128 0x13
 2725 1172 86090000 		.4byte	.LASF315
 2726 1176 0103     		.2byte	0x301
 2727 1178 00       		.byte	0
 2728 1179 0F       		.uleb128 0xf
 2729 117a 0B090000 		.4byte	.LASF316
 2730 117e 02       		.byte	0x2
 2731 117f 6909     		.2byte	0x969
 2732 1181 4A110000 		.4byte	0x114a
 2733 1185 10       		.uleb128 0x10
 2734 1186 01       		.byte	0x1
 2735 1187 53000000 		.4byte	0x53
 2736 118b 02       		.byte	0x2
 2737 118c F709     		.2byte	0x9f7
 2738 118e F3110000 		.4byte	0x11f3
 2739 1192 11       		.uleb128 0x11
 2740 1193 D1020000 		.4byte	.LASF317
 2741 1197 00       		.byte	0
 2742 1198 11       		.uleb128 0x11
 2743 1199 EC020000 		.4byte	.LASF318
 2744 119d 01       		.byte	0x1
 2745 119e 11       		.uleb128 0x11
 2746 119f 07030000 		.4byte	.LASF319
 2747 11a3 02       		.byte	0x2
 2748 11a4 11       		.uleb128 0x11
 2749 11a5 22030000 		.4byte	.LASF320
 2750 11a9 03       		.byte	0x3
 2751 11aa 11       		.uleb128 0x11
 2752 11ab 3D030000 		.4byte	.LASF321
 2753 11af 04       		.byte	0x4
 2754 11b0 11       		.uleb128 0x11
 2755 11b1 58030000 		.4byte	.LASF322
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 146


 2756 11b5 05       		.byte	0x5
 2757 11b6 11       		.uleb128 0x11
 2758 11b7 73030000 		.4byte	.LASF323
 2759 11bb 06       		.byte	0x6
 2760 11bc 11       		.uleb128 0x11
 2761 11bd 8E030000 		.4byte	.LASF324
 2762 11c1 07       		.byte	0x7
 2763 11c2 11       		.uleb128 0x11
 2764 11c3 E41A0000 		.4byte	.LASF325
 2765 11c7 08       		.byte	0x8
 2766 11c8 11       		.uleb128 0x11
 2767 11c9 B9030000 		.4byte	.LASF326
 2768 11cd 09       		.byte	0x9
 2769 11ce 11       		.uleb128 0x11
 2770 11cf E3170000 		.4byte	.LASF327
 2771 11d3 0A       		.byte	0xa
 2772 11d4 11       		.uleb128 0x11
 2773 11d5 44100000 		.4byte	.LASF328
 2774 11d9 0B       		.byte	0xb
 2775 11da 11       		.uleb128 0x11
 2776 11db 0A180000 		.4byte	.LASF329
 2777 11df 0C       		.byte	0xc
 2778 11e0 11       		.uleb128 0x11
 2779 11e1 26180000 		.4byte	.LASF330
 2780 11e5 0D       		.byte	0xd
 2781 11e6 11       		.uleb128 0x11
 2782 11e7 42180000 		.4byte	.LASF331
 2783 11eb 0E       		.byte	0xe
 2784 11ec 11       		.uleb128 0x11
 2785 11ed 5E180000 		.4byte	.LASF332
 2786 11f1 0F       		.byte	0xf
 2787 11f2 00       		.byte	0
 2788 11f3 0F       		.uleb128 0xf
 2789 11f4 71010000 		.4byte	.LASF333
 2790 11f8 02       		.byte	0x2
 2791 11f9 080A     		.2byte	0xa08
 2792 11fb 85110000 		.4byte	0x1185
 2793 11ff 10       		.uleb128 0x10
 2794 1200 01       		.byte	0x1
 2795 1201 53000000 		.4byte	0x53
 2796 1205 02       		.byte	0x2
 2797 1206 100A     		.2byte	0xa10
 2798 1208 2B120000 		.4byte	0x122b
 2799 120c 11       		.uleb128 0x11
 2800 120d 88110000 		.4byte	.LASF334
 2801 1211 00       		.byte	0
 2802 1212 11       		.uleb128 0x11
 2803 1213 A51A0000 		.4byte	.LASF335
 2804 1217 01       		.byte	0x1
 2805 1218 11       		.uleb128 0x11
 2806 1219 BA1A0000 		.4byte	.LASF336
 2807 121d 02       		.byte	0x2
 2808 121e 11       		.uleb128 0x11
 2809 121f CF1A0000 		.4byte	.LASF337
 2810 1223 03       		.byte	0x3
 2811 1224 11       		.uleb128 0x11
 2812 1225 57120000 		.4byte	.LASF338
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 147


 2813 1229 04       		.byte	0x4
 2814 122a 00       		.byte	0
 2815 122b 0F       		.uleb128 0xf
 2816 122c FD050000 		.4byte	.LASF339
 2817 1230 02       		.byte	0x2
 2818 1231 160A     		.2byte	0xa16
 2819 1233 FF110000 		.4byte	0x11ff
 2820 1237 10       		.uleb128 0x10
 2821 1238 01       		.byte	0x1
 2822 1239 53000000 		.4byte	0x53
 2823 123d 02       		.byte	0x2
 2824 123e A70A     		.2byte	0xaa7
 2825 1240 51120000 		.4byte	0x1251
 2826 1244 11       		.uleb128 0x11
 2827 1245 8D000000 		.4byte	.LASF340
 2828 1249 00       		.byte	0
 2829 124a 11       		.uleb128 0x11
 2830 124b 40140000 		.4byte	.LASF341
 2831 124f 01       		.byte	0x1
 2832 1250 00       		.byte	0
 2833 1251 0F       		.uleb128 0xf
 2834 1252 AC0E0000 		.4byte	.LASF342
 2835 1256 02       		.byte	0x2
 2836 1257 AA0A     		.2byte	0xaaa
 2837 1259 37120000 		.4byte	0x1237
 2838 125d 16       		.uleb128 0x16
 2839 125e 01       		.byte	0x1
 2840 125f 53000000 		.4byte	0x53
 2841 1263 0D       		.byte	0xd
 2842 1264 7B       		.byte	0x7b
 2843 1265 88120000 		.4byte	0x1288
 2844 1269 11       		.uleb128 0x11
 2845 126a A7050000 		.4byte	.LASF343
 2846 126e 00       		.byte	0
 2847 126f 11       		.uleb128 0x11
 2848 1270 B1020000 		.4byte	.LASF344
 2849 1274 01       		.byte	0x1
 2850 1275 11       		.uleb128 0x11
 2851 1276 D4050000 		.4byte	.LASF345
 2852 127a 02       		.byte	0x2
 2853 127b 11       		.uleb128 0x11
 2854 127c D5190000 		.4byte	.LASF346
 2855 1280 03       		.byte	0x3
 2856 1281 11       		.uleb128 0x11
 2857 1282 B5190000 		.4byte	.LASF347
 2858 1286 04       		.byte	0x4
 2859 1287 00       		.byte	0
 2860 1288 17       		.uleb128 0x17
 2861 1289 480C0000 		.4byte	.LASF348
 2862 128d 02       		.byte	0x2
 2863 128e FB05     		.2byte	0x5fb
 2864 1290 080F0000 		.4byte	0xf08
 2865 1294 03       		.byte	0x3
 2866 1295 B2120000 		.4byte	0x12b2
 2867 1299 18       		.uleb128 0x18
 2868 129a 87000000 		.4byte	.LASF350
 2869 129e 02       		.byte	0x2
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 148


 2870 129f FB05     		.2byte	0x5fb
 2871 12a1 CD000000 		.4byte	0xcd
 2872 12a5 19       		.uleb128 0x19
 2873 12a6 8E160000 		.4byte	.LASF352
 2874 12aa 02       		.byte	0x2
 2875 12ab FD05     		.2byte	0x5fd
 2876 12ad 080F0000 		.4byte	0xf08
 2877 12b1 00       		.byte	0
 2878 12b2 17       		.uleb128 0x17
 2879 12b3 000E0000 		.4byte	.LASF349
 2880 12b7 02       		.byte	0x2
 2881 12b8 7B06     		.2byte	0x67b
 2882 12ba 080F0000 		.4byte	0xf08
 2883 12be 03       		.byte	0x3
 2884 12bf E8120000 		.4byte	0x12e8
 2885 12c3 18       		.uleb128 0x18
 2886 12c4 87000000 		.4byte	.LASF350
 2887 12c8 02       		.byte	0x2
 2888 12c9 7B06     		.2byte	0x67b
 2889 12cb CD000000 		.4byte	0xcd
 2890 12cf 18       		.uleb128 0x18
 2891 12d0 7B130000 		.4byte	.LASF351
 2892 12d4 02       		.byte	0x2
 2893 12d5 7B06     		.2byte	0x67b
 2894 12d7 0C110000 		.4byte	0x110c
 2895 12db 19       		.uleb128 0x19
 2896 12dc 8E160000 		.4byte	.LASF352
 2897 12e0 02       		.byte	0x2
 2898 12e1 7D06     		.2byte	0x67d
 2899 12e3 080F0000 		.4byte	0xf08
 2900 12e7 00       		.byte	0
 2901 12e8 17       		.uleb128 0x17
 2902 12e9 F9100000 		.4byte	.LASF353
 2903 12ed 02       		.byte	0x2
 2904 12ee 3E06     		.2byte	0x63e
 2905 12f0 080F0000 		.4byte	0xf08
 2906 12f4 03       		.byte	0x3
 2907 12f5 1E130000 		.4byte	0x131e
 2908 12f9 18       		.uleb128 0x18
 2909 12fa 87000000 		.4byte	.LASF350
 2910 12fe 02       		.byte	0x2
 2911 12ff 3E06     		.2byte	0x63e
 2912 1301 CD000000 		.4byte	0xcd
 2913 1305 18       		.uleb128 0x18
 2914 1306 67150000 		.4byte	.LASF354
 2915 130a 02       		.byte	0x2
 2916 130b 3E06     		.2byte	0x63e
 2917 130d DA100000 		.4byte	0x10da
 2918 1311 19       		.uleb128 0x19
 2919 1312 8E160000 		.4byte	.LASF352
 2920 1316 02       		.byte	0x2
 2921 1317 4006     		.2byte	0x640
 2922 1319 080F0000 		.4byte	0xf08
 2923 131d 00       		.byte	0
 2924 131e 1A       		.uleb128 0x1a
 2925 131f 35050000 		.4byte	.LASF355
 2926 1323 02       		.byte	0x2
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 149


 2927 1324 FB08     		.2byte	0x8fb
 2928 1326 03       		.byte	0x3
 2929 1327 38130000 		.4byte	0x1338
 2930 132b 18       		.uleb128 0x18
 2931 132c 7B130000 		.4byte	.LASF351
 2932 1330 02       		.byte	0x2
 2933 1331 FB08     		.2byte	0x8fb
 2934 1333 AC000000 		.4byte	0xac
 2935 1337 00       		.byte	0
 2936 1338 1A       		.uleb128 0x1a
 2937 1339 EF080000 		.4byte	.LASF356
 2938 133d 02       		.byte	0x2
 2939 133e F406     		.2byte	0x6f4
 2940 1340 03       		.byte	0x3
 2941 1341 52130000 		.4byte	0x1352
 2942 1345 18       		.uleb128 0x18
 2943 1346 7B130000 		.4byte	.LASF351
 2944 134a 02       		.byte	0x2
 2945 134b F406     		.2byte	0x6f4
 2946 134d AC000000 		.4byte	0xac
 2947 1351 00       		.byte	0
 2948 1352 1A       		.uleb128 0x1a
 2949 1353 8D180000 		.4byte	.LASF357
 2950 1357 02       		.byte	0x2
 2951 1358 BF06     		.2byte	0x6bf
 2952 135a 03       		.byte	0x3
 2953 135b 6C130000 		.4byte	0x136c
 2954 135f 18       		.uleb128 0x18
 2955 1360 7B130000 		.4byte	.LASF351
 2956 1364 02       		.byte	0x2
 2957 1365 BF06     		.2byte	0x6bf
 2958 1367 AC000000 		.4byte	0xac
 2959 136b 00       		.byte	0
 2960 136c 1A       		.uleb128 0x1a
 2961 136d A9180000 		.4byte	.LASF358
 2962 1371 02       		.byte	0x2
 2963 1372 3D09     		.2byte	0x93d
 2964 1374 03       		.byte	0x3
 2965 1375 86130000 		.4byte	0x1386
 2966 1379 18       		.uleb128 0x18
 2967 137a 67150000 		.4byte	.LASF354
 2968 137e 02       		.byte	0x2
 2969 137f 3D09     		.2byte	0x93d
 2970 1381 3E110000 		.4byte	0x113e
 2971 1385 00       		.byte	0
 2972 1386 1A       		.uleb128 0x1a
 2973 1387 8C1A0000 		.4byte	.LASF359
 2974 138b 02       		.byte	0x2
 2975 138c 1C04     		.2byte	0x41c
 2976 138e 03       		.byte	0x3
 2977 138f 9F130000 		.4byte	0x139f
 2978 1393 1B       		.uleb128 0x1b
 2979 1394 6F6E00   		.ascii	"on\000"
 2980 1397 02       		.byte	0x2
 2981 1398 1C04     		.2byte	0x41c
 2982 139a 59100000 		.4byte	0x1059
 2983 139e 00       		.byte	0
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 150


 2984 139f 1C       		.uleb128 0x1c
 2985 13a0 1B140000 		.4byte	.LASF361
 2986 13a4 02       		.byte	0x2
 2987 13a5 E903     		.2byte	0x3e9
 2988 13a7 03       		.byte	0x3
 2989 13a8 1A       		.uleb128 0x1a
 2990 13a9 F60E0000 		.4byte	.LASF360
 2991 13ad 02       		.byte	0x2
 2992 13ae C50A     		.2byte	0xac5
 2993 13b0 03       		.byte	0x3
 2994 13b1 C2130000 		.4byte	0x13c2
 2995 13b5 18       		.uleb128 0x18
 2996 13b6 67150000 		.4byte	.LASF354
 2997 13ba 02       		.byte	0x2
 2998 13bb C50A     		.2byte	0xac5
 2999 13bd 51120000 		.4byte	0x1251
 3000 13c1 00       		.byte	0
 3001 13c2 1C       		.uleb128 0x1c
 3002 13c3 DE010000 		.4byte	.LASF362
 3003 13c7 02       		.byte	0x2
 3004 13c8 840A     		.2byte	0xa84
 3005 13ca 03       		.byte	0x3
 3006 13cb 1A       		.uleb128 0x1a
 3007 13cc 04050000 		.4byte	.LASF363
 3008 13d0 02       		.byte	0x2
 3009 13d1 620A     		.2byte	0xa62
 3010 13d3 03       		.byte	0x3
 3011 13d4 E5130000 		.4byte	0x13e5
 3012 13d8 18       		.uleb128 0x18
 3013 13d9 7B130000 		.4byte	.LASF351
 3014 13dd 02       		.byte	0x2
 3015 13de 620A     		.2byte	0xa62
 3016 13e0 2B120000 		.4byte	0x122b
 3017 13e4 00       		.byte	0
 3018 13e5 1A       		.uleb128 0x1a
 3019 13e6 D3060000 		.4byte	.LASF364
 3020 13ea 02       		.byte	0x2
 3021 13eb 3C0A     		.2byte	0xa3c
 3022 13ed 03       		.byte	0x3
 3023 13ee FF130000 		.4byte	0x13ff
 3024 13f2 18       		.uleb128 0x18
 3025 13f3 67150000 		.4byte	.LASF354
 3026 13f7 02       		.byte	0x2
 3027 13f8 3C0A     		.2byte	0xa3c
 3028 13fa F3110000 		.4byte	0x11f3
 3029 13fe 00       		.byte	0
 3030 13ff 1C       		.uleb128 0x1c
 3031 1400 5B020000 		.4byte	.LASF365
 3032 1404 02       		.byte	0x2
 3033 1405 D409     		.2byte	0x9d4
 3034 1407 03       		.byte	0x3
 3035 1408 1A       		.uleb128 0x1a
 3036 1409 14060000 		.4byte	.LASF366
 3037 140d 02       		.byte	0x2
 3038 140e B309     		.2byte	0x9b3
 3039 1410 03       		.byte	0x3
 3040 1411 22140000 		.4byte	0x1422
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 151


 3041 1415 18       		.uleb128 0x18
 3042 1416 7B130000 		.4byte	.LASF351
 3043 141a 02       		.byte	0x2
 3044 141b B309     		.2byte	0x9b3
 3045 141d AC000000 		.4byte	0xac
 3046 1421 00       		.byte	0
 3047 1422 1A       		.uleb128 0x1a
 3048 1423 43010000 		.4byte	.LASF367
 3049 1427 02       		.byte	0x2
 3050 1428 8A09     		.2byte	0x98a
 3051 142a 03       		.byte	0x3
 3052 142b 3C140000 		.4byte	0x143c
 3053 142f 18       		.uleb128 0x18
 3054 1430 67150000 		.4byte	.LASF354
 3055 1434 02       		.byte	0x2
 3056 1435 8A09     		.2byte	0x98a
 3057 1437 79110000 		.4byte	0x1179
 3058 143b 00       		.byte	0
 3059 143c 1C       		.uleb128 0x1c
 3060 143d E0150000 		.4byte	.LASF368
 3061 1441 03       		.byte	0x3
 3062 1442 2E09     		.2byte	0x92e
 3063 1444 03       		.byte	0x3
 3064 1445 1C       		.uleb128 0x1c
 3065 1446 3D040000 		.4byte	.LASF369
 3066 144a 03       		.byte	0x3
 3067 144b 6109     		.2byte	0x961
 3068 144d 03       		.byte	0x3
 3069 144e 1D       		.uleb128 0x1d
 3070 144f 1A020000 		.4byte	.LASF387
 3071 1453 01       		.byte	0x1
 3072 1454 82       		.byte	0x82
 3073 1455 00000000 		.4byte	.LFB187
 3074 1459 02000000 		.4byte	.LFE187-.LFB187
 3075 145d 01       		.uleb128 0x1
 3076 145e 9C       		.byte	0x9c
 3077 145f 71140000 		.4byte	0x1471
 3078 1463 1E       		.uleb128 0x1e
 3079 1464 5B160000 		.4byte	.LASF388
 3080 1468 01       		.byte	0x1
 3081 1469 82       		.byte	0x82
 3082 146a 270E0000 		.4byte	0xe27
 3083 146e 01       		.uleb128 0x1
 3084 146f 50       		.byte	0x50
 3085 1470 00       		.byte	0
 3086 1471 1F       		.uleb128 0x1f
 3087 1472 BE160000 		.4byte	.LASF389
 3088 1476 01       		.byte	0x1
 3089 1477 94       		.byte	0x94
 3090 1478 00000000 		.4byte	.LFB188
 3091 147c A4010000 		.4byte	.LFE188-.LFB188
 3092 1480 01       		.uleb128 0x1
 3093 1481 9C       		.byte	0x9c
 3094 1482 90170000 		.4byte	0x1790
 3095 1486 20       		.uleb128 0x20
 3096 1487 F90D0000 		.4byte	.LASF370
 3097 148b 01       		.byte	0x1
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 152


 3098 148c 96       		.byte	0x96
 3099 148d CD000000 		.4byte	0xcd
 3100 1491 00000000 		.4byte	.LLST0
 3101 1495 21       		.uleb128 0x21
 3102 1496 6C130000 		.4byte	0x136c
 3103 149a 04000000 		.4byte	.LBB42
 3104 149e 0E000000 		.4byte	.LBE42-.LBB42
 3105 14a2 01       		.byte	0x1
 3106 14a3 99       		.byte	0x99
 3107 14a4 B2140000 		.4byte	0x14b2
 3108 14a8 22       		.uleb128 0x22
 3109 14a9 79130000 		.4byte	0x1379
 3110 14ad 34000000 		.4byte	.LLST1
 3111 14b1 00       		.byte	0
 3112 14b2 21       		.uleb128 0x21
 3113 14b3 52130000 		.4byte	0x1352
 3114 14b7 12000000 		.4byte	.LBB44
 3115 14bb 14000000 		.4byte	.LBE44-.LBB44
 3116 14bf 01       		.byte	0x1
 3117 14c0 9C       		.byte	0x9c
 3118 14c1 CF140000 		.4byte	0x14cf
 3119 14c5 22       		.uleb128 0x22
 3120 14c6 5F130000 		.4byte	0x135f
 3121 14ca 48000000 		.4byte	.LLST2
 3122 14ce 00       		.byte	0
 3123 14cf 21       		.uleb128 0x21
 3124 14d0 38130000 		.4byte	0x1338
 3125 14d4 26000000 		.4byte	.LBB46
 3126 14d8 18000000 		.4byte	.LBE46-.LBB46
 3127 14dc 01       		.byte	0x1
 3128 14dd 9D       		.byte	0x9d
 3129 14de EC140000 		.4byte	0x14ec
 3130 14e2 22       		.uleb128 0x22
 3131 14e3 45130000 		.4byte	0x1345
 3132 14e7 5C000000 		.4byte	.LLST3
 3133 14eb 00       		.byte	0
 3134 14ec 21       		.uleb128 0x21
 3135 14ed 1E130000 		.4byte	0x131e
 3136 14f1 3E000000 		.4byte	.LBB48
 3137 14f5 0E000000 		.4byte	.LBE48-.LBB48
 3138 14f9 01       		.byte	0x1
 3139 14fa 9E       		.byte	0x9e
 3140 14fb 09150000 		.4byte	0x1509
 3141 14ff 22       		.uleb128 0x22
 3142 1500 2B130000 		.4byte	0x132b
 3143 1504 70000000 		.4byte	.LLST4
 3144 1508 00       		.byte	0
 3145 1509 21       		.uleb128 0x21
 3146 150a E8120000 		.4byte	0x12e8
 3147 150e 4C000000 		.4byte	.LBB50
 3148 1512 18000000 		.4byte	.LBE50-.LBB50
 3149 1516 01       		.byte	0x1
 3150 1517 A1       		.byte	0xa1
 3151 1518 42150000 		.4byte	0x1542
 3152 151c 22       		.uleb128 0x22
 3153 151d 05130000 		.4byte	0x1305
 3154 1521 84000000 		.4byte	.LLST5
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 153


 3155 1525 22       		.uleb128 0x22
 3156 1526 F9120000 		.4byte	0x12f9
 3157 152a 84000000 		.4byte	.LLST5
 3158 152e 23       		.uleb128 0x23
 3159 152f 4C000000 		.4byte	.LBB51
 3160 1533 18000000 		.4byte	.LBE51-.LBB51
 3161 1537 24       		.uleb128 0x24
 3162 1538 11130000 		.4byte	0x1311
 3163 153c 98000000 		.4byte	.LLST7
 3164 1540 00       		.byte	0
 3165 1541 00       		.byte	0
 3166 1542 21       		.uleb128 0x21
 3167 1543 B2120000 		.4byte	0x12b2
 3168 1547 64000000 		.4byte	.LBB52
 3169 154b 16000000 		.4byte	.LBE52-.LBB52
 3170 154f 01       		.byte	0x1
 3171 1550 A2       		.byte	0xa2
 3172 1551 7B150000 		.4byte	0x157b
 3173 1555 22       		.uleb128 0x22
 3174 1556 CF120000 		.4byte	0x12cf
 3175 155a B0000000 		.4byte	.LLST8
 3176 155e 22       		.uleb128 0x22
 3177 155f C3120000 		.4byte	0x12c3
 3178 1563 B0000000 		.4byte	.LLST8
 3179 1567 23       		.uleb128 0x23
 3180 1568 64000000 		.4byte	.LBB53
 3181 156c 16000000 		.4byte	.LBE53-.LBB53
 3182 1570 24       		.uleb128 0x24
 3183 1571 DB120000 		.4byte	0x12db
 3184 1575 C4000000 		.4byte	.LLST10
 3185 1579 00       		.byte	0
 3186 157a 00       		.byte	0
 3187 157b 21       		.uleb128 0x21
 3188 157c 88120000 		.4byte	0x1288
 3189 1580 7A000000 		.4byte	.LBB54
 3190 1584 18000000 		.4byte	.LBE54-.LBB54
 3191 1588 01       		.byte	0x1
 3192 1589 A3       		.byte	0xa3
 3193 158a AB150000 		.4byte	0x15ab
 3194 158e 22       		.uleb128 0x22
 3195 158f 99120000 		.4byte	0x1299
 3196 1593 DC000000 		.4byte	.LLST11
 3197 1597 23       		.uleb128 0x23
 3198 1598 7A000000 		.4byte	.LBB55
 3199 159c 18000000 		.4byte	.LBE55-.LBB55
 3200 15a0 24       		.uleb128 0x24
 3201 15a1 A5120000 		.4byte	0x12a5
 3202 15a5 F0000000 		.4byte	.LLST12
 3203 15a9 00       		.byte	0
 3204 15aa 00       		.byte	0
 3205 15ab 25       		.uleb128 0x25
 3206 15ac BA000000 		.4byte	.LBB56
 3207 15b0 1E000000 		.4byte	.LBE56-.LBB56
 3208 15b4 EA150000 		.4byte	0x15ea
 3209 15b8 26       		.uleb128 0x26
 3210 15b9 1D040000 		.4byte	.LASF371
 3211 15bd 01       		.byte	0x1
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 154


 3212 15be AC       		.byte	0xac
 3213 15bf 90170000 		.4byte	0x1790
 3214 15c3 02       		.uleb128 0x2
 3215 15c4 91       		.byte	0x91
 3216 15c5 5C       		.sleb128 -36
 3217 15c6 27       		.uleb128 0x27
 3218 15c7 CE000000 		.4byte	.LVL14
 3219 15cb D0180000 		.4byte	0x18d0
 3220 15cf DA150000 		.4byte	0x15da
 3221 15d3 28       		.uleb128 0x28
 3222 15d4 01       		.uleb128 0x1
 3223 15d5 50       		.byte	0x50
 3224 15d6 02       		.uleb128 0x2
 3225 15d7 91       		.byte	0x91
 3226 15d8 5C       		.sleb128 -36
 3227 15d9 00       		.byte	0
 3228 15da 29       		.uleb128 0x29
 3229 15db D8000000 		.4byte	.LVL16
 3230 15df 4E140000 		.4byte	0x144e
 3231 15e3 28       		.uleb128 0x28
 3232 15e4 01       		.uleb128 0x1
 3233 15e5 50       		.byte	0x50
 3234 15e6 01       		.uleb128 0x1
 3235 15e7 34       		.byte	0x34
 3236 15e8 00       		.byte	0
 3237 15e9 00       		.byte	0
 3238 15ea 21       		.uleb128 0x21
 3239 15eb 22140000 		.4byte	0x1422
 3240 15ef F6000000 		.4byte	.LBB57
 3241 15f3 0C000000 		.4byte	.LBE57-.LBB57
 3242 15f7 01       		.byte	0x1
 3243 15f8 C7       		.byte	0xc7
 3244 15f9 07160000 		.4byte	0x1607
 3245 15fd 22       		.uleb128 0x22
 3246 15fe 2F140000 		.4byte	0x142f
 3247 1602 08010000 		.4byte	.LLST13
 3248 1606 00       		.byte	0
 3249 1607 21       		.uleb128 0x21
 3250 1608 08140000 		.4byte	0x1408
 3251 160c 02010000 		.4byte	.LBB59
 3252 1610 08000000 		.4byte	.LBE59-.LBB59
 3253 1614 01       		.byte	0x1
 3254 1615 C8       		.byte	0xc8
 3255 1616 24160000 		.4byte	0x1624
 3256 161a 22       		.uleb128 0x22
 3257 161b 15140000 		.4byte	0x1415
 3258 161f 1C010000 		.4byte	.LLST14
 3259 1623 00       		.byte	0
 3260 1624 2A       		.uleb128 0x2a
 3261 1625 FF130000 		.4byte	0x13ff
 3262 1629 0A010000 		.4byte	.LBB61
 3263 162d 0A000000 		.4byte	.LBE61-.LBB61
 3264 1631 01       		.byte	0x1
 3265 1632 C9       		.byte	0xc9
 3266 1633 21       		.uleb128 0x21
 3267 1634 E5130000 		.4byte	0x13e5
 3268 1638 14010000 		.4byte	.LBB63
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 155


 3269 163c 0A000000 		.4byte	.LBE63-.LBB63
 3270 1640 01       		.byte	0x1
 3271 1641 CA       		.byte	0xca
 3272 1642 50160000 		.4byte	0x1650
 3273 1646 22       		.uleb128 0x22
 3274 1647 F2130000 		.4byte	0x13f2
 3275 164b 30010000 		.4byte	.LLST15
 3276 164f 00       		.byte	0
 3277 1650 21       		.uleb128 0x21
 3278 1651 CB130000 		.4byte	0x13cb
 3279 1655 1E010000 		.4byte	.LBB65
 3280 1659 0E000000 		.4byte	.LBE65-.LBB65
 3281 165d 01       		.byte	0x1
 3282 165e CB       		.byte	0xcb
 3283 165f 6D160000 		.4byte	0x166d
 3284 1663 22       		.uleb128 0x22
 3285 1664 D8130000 		.4byte	0x13d8
 3286 1668 44010000 		.4byte	.LLST16
 3287 166c 00       		.byte	0
 3288 166d 2A       		.uleb128 0x2a
 3289 166e C2130000 		.4byte	0x13c2
 3290 1672 2C010000 		.4byte	.LBB67
 3291 1676 0A000000 		.4byte	.LBE67-.LBB67
 3292 167a 01       		.byte	0x1
 3293 167b CC       		.byte	0xcc
 3294 167c 21       		.uleb128 0x21
 3295 167d A8130000 		.4byte	0x13a8
 3296 1681 36010000 		.4byte	.LBB69
 3297 1685 10000000 		.4byte	.LBE69-.LBB69
 3298 1689 01       		.byte	0x1
 3299 168a CD       		.byte	0xcd
 3300 168b 99160000 		.4byte	0x1699
 3301 168f 22       		.uleb128 0x22
 3302 1690 B5130000 		.4byte	0x13b5
 3303 1694 58010000 		.4byte	.LLST17
 3304 1698 00       		.byte	0
 3305 1699 2A       		.uleb128 0x2a
 3306 169a 9F130000 		.4byte	0x139f
 3307 169e 4C010000 		.4byte	.LBB71
 3308 16a2 08000000 		.4byte	.LBE71-.LBB71
 3309 16a6 01       		.byte	0x1
 3310 16a7 CF       		.byte	0xcf
 3311 16a8 21       		.uleb128 0x21
 3312 16a9 86130000 		.4byte	0x1386
 3313 16ad 54010000 		.4byte	.LBB73
 3314 16b1 0A000000 		.4byte	.LBE73-.LBB73
 3315 16b5 01       		.byte	0x1
 3316 16b6 D0       		.byte	0xd0
 3317 16b7 C5160000 		.4byte	0x16c5
 3318 16bb 22       		.uleb128 0x22
 3319 16bc 93130000 		.4byte	0x1393
 3320 16c0 6C010000 		.4byte	.LLST18
 3321 16c4 00       		.byte	0
 3322 16c5 27       		.uleb128 0x27
 3323 16c6 9A000000 		.4byte	.LVL9
 3324 16ca DC180000 		.4byte	0x18dc
 3325 16ce DD160000 		.4byte	0x16dd
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 156


 3326 16d2 28       		.uleb128 0x28
 3327 16d3 01       		.uleb128 0x1
 3328 16d4 50       		.byte	0x50
 3329 16d5 01       		.uleb128 0x1
 3330 16d6 31       		.byte	0x31
 3331 16d7 28       		.uleb128 0x28
 3332 16d8 01       		.uleb128 0x1
 3333 16d9 51       		.byte	0x51
 3334 16da 01       		.uleb128 0x1
 3335 16db 30       		.byte	0x30
 3336 16dc 00       		.byte	0
 3337 16dd 27       		.uleb128 0x27
 3338 16de A2000000 		.4byte	.LVL10
 3339 16e2 DC180000 		.4byte	0x18dc
 3340 16e6 F5160000 		.4byte	0x16f5
 3341 16ea 28       		.uleb128 0x28
 3342 16eb 01       		.uleb128 0x1
 3343 16ec 50       		.byte	0x50
 3344 16ed 01       		.uleb128 0x1
 3345 16ee 32       		.byte	0x32
 3346 16ef 28       		.uleb128 0x28
 3347 16f0 01       		.uleb128 0x1
 3348 16f1 51       		.byte	0x51
 3349 16f2 01       		.uleb128 0x1
 3350 16f3 30       		.byte	0x30
 3351 16f4 00       		.byte	0
 3352 16f5 27       		.uleb128 0x27
 3353 16f6 AA000000 		.4byte	.LVL11
 3354 16fa DC180000 		.4byte	0x18dc
 3355 16fe 0D170000 		.4byte	0x170d
 3356 1702 28       		.uleb128 0x28
 3357 1703 01       		.uleb128 0x1
 3358 1704 50       		.byte	0x50
 3359 1705 01       		.uleb128 0x1
 3360 1706 33       		.byte	0x33
 3361 1707 28       		.uleb128 0x28
 3362 1708 01       		.uleb128 0x1
 3363 1709 51       		.byte	0x51
 3364 170a 01       		.uleb128 0x1
 3365 170b 30       		.byte	0x30
 3366 170c 00       		.byte	0
 3367 170d 27       		.uleb128 0x27
 3368 170e B2000000 		.4byte	.LVL12
 3369 1712 DC180000 		.4byte	0x18dc
 3370 1716 25170000 		.4byte	0x1725
 3371 171a 28       		.uleb128 0x28
 3372 171b 01       		.uleb128 0x1
 3373 171c 50       		.byte	0x50
 3374 171d 01       		.uleb128 0x1
 3375 171e 34       		.byte	0x34
 3376 171f 28       		.uleb128 0x28
 3377 1720 01       		.uleb128 0x1
 3378 1721 51       		.byte	0x51
 3379 1722 01       		.uleb128 0x1
 3380 1723 30       		.byte	0x30
 3381 1724 00       		.byte	0
 3382 1725 27       		.uleb128 0x27
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 157


 3383 1726 BA000000 		.4byte	.LVL13
 3384 172a DC180000 		.4byte	0x18dc
 3385 172e 3D170000 		.4byte	0x173d
 3386 1732 28       		.uleb128 0x28
 3387 1733 01       		.uleb128 0x1
 3388 1734 50       		.byte	0x50
 3389 1735 01       		.uleb128 0x1
 3390 1736 30       		.byte	0x30
 3391 1737 28       		.uleb128 0x28
 3392 1738 01       		.uleb128 0x1
 3393 1739 51       		.byte	0x51
 3394 173a 01       		.uleb128 0x1
 3395 173b 30       		.byte	0x30
 3396 173c 00       		.byte	0
 3397 173d 27       		.uleb128 0x27
 3398 173e EC000000 		.4byte	.LVL18
 3399 1742 E8180000 		.4byte	0x18e8
 3400 1746 54170000 		.4byte	0x1754
 3401 174a 28       		.uleb128 0x28
 3402 174b 01       		.uleb128 0x1
 3403 174c 50       		.byte	0x50
 3404 174d 05       		.uleb128 0x5
 3405 174e 0C       		.byte	0xc
 3406 174f 400D0300 		.4byte	0x30d40
 3407 1753 00       		.byte	0
 3408 1754 27       		.uleb128 0x27
 3409 1755 F6000000 		.4byte	.LVL20
 3410 1759 4E140000 		.4byte	0x144e
 3411 175d 67170000 		.4byte	0x1767
 3412 1761 28       		.uleb128 0x28
 3413 1762 01       		.uleb128 0x1
 3414 1763 50       		.byte	0x50
 3415 1764 01       		.uleb128 0x1
 3416 1765 34       		.byte	0x34
 3417 1766 00       		.byte	0
 3418 1767 27       		.uleb128 0x27
 3419 1768 4C010000 		.4byte	.LVL29
 3420 176c F4180000 		.4byte	0x18f4
 3421 1770 7A170000 		.4byte	0x177a
 3422 1774 28       		.uleb128 0x28
 3423 1775 01       		.uleb128 0x1
 3424 1776 50       		.byte	0x50
 3425 1777 01       		.uleb128 0x1
 3426 1778 30       		.byte	0x30
 3427 1779 00       		.byte	0
 3428 177a 29       		.uleb128 0x29
 3429 177b 66010000 		.4byte	.LVL32
 3430 177f FF180000 		.4byte	0x18ff
 3431 1783 28       		.uleb128 0x28
 3432 1784 01       		.uleb128 0x1
 3433 1785 50       		.byte	0x50
 3434 1786 01       		.uleb128 0x1
 3435 1787 30       		.byte	0x30
 3436 1788 28       		.uleb128 0x28
 3437 1789 01       		.uleb128 0x1
 3438 178a 51       		.byte	0x51
 3439 178b 02       		.uleb128 0x2
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 158


 3440 178c 08       		.byte	0x8
 3441 178d 64       		.byte	0x64
 3442 178e 00       		.byte	0
 3443 178f 00       		.byte	0
 3444 1790 06       		.uleb128 0x6
 3445 1791 60100000 		.4byte	0x1060
 3446 1795 2B       		.uleb128 0x2b
 3447 1796 A80C0000 		.4byte	.LASF390
 3448 179a 01       		.byte	0x1
 3449 179b 0201     		.2byte	0x102
 3450 179d 00000000 		.4byte	.LFB190
 3451 17a1 C0000000 		.4byte	.LFE190-.LFB190
 3452 17a5 01       		.uleb128 0x1
 3453 17a6 9C       		.byte	0x9c
 3454 17a7 B5180000 		.4byte	0x18b5
 3455 17ab 2C       		.uleb128 0x2c
 3456 17ac 45140000 		.4byte	0x1445
 3457 17b0 1E000000 		.4byte	.LBB75
 3458 17b4 10000000 		.4byte	.LBE75-.LBB75
 3459 17b8 01       		.byte	0x1
 3460 17b9 1001     		.2byte	0x110
 3461 17bb 2C       		.uleb128 0x2c
 3462 17bc 3C140000 		.4byte	0x143c
 3463 17c0 2E000000 		.4byte	.LBB77
 3464 17c4 1C000000 		.4byte	.LBE77-.LBB77
 3465 17c8 01       		.byte	0x1
 3466 17c9 1101     		.2byte	0x111
 3467 17cb 25       		.uleb128 0x25
 3468 17cc 4E000000 		.4byte	.LBB79
 3469 17d0 1E000000 		.4byte	.LBE79-.LBB79
 3470 17d4 01180000 		.4byte	0x1801
 3471 17d8 2D       		.uleb128 0x2d
 3472 17d9 710B0000 		.4byte	.LASF372
 3473 17dd 01       		.byte	0x1
 3474 17de 1801     		.2byte	0x118
 3475 17e0 B5180000 		.4byte	0x18b5
 3476 17e4 02       		.uleb128 0x2
 3477 17e5 91       		.byte	0x91
 3478 17e6 4C       		.sleb128 -52
 3479 17e7 29       		.uleb128 0x29
 3480 17e8 6C000000 		.4byte	.LVL38
 3481 17ec 0B190000 		.4byte	0x190b
 3482 17f0 28       		.uleb128 0x28
 3483 17f1 01       		.uleb128 0x1
 3484 17f2 50       		.byte	0x50
 3485 17f3 05       		.uleb128 0x5
 3486 17f4 0C       		.byte	0xc
 3487 17f5 00003240 		.4byte	0x40320000
 3488 17f9 28       		.uleb128 0x28
 3489 17fa 01       		.uleb128 0x1
 3490 17fb 51       		.byte	0x51
 3491 17fc 02       		.uleb128 0x2
 3492 17fd 75       		.byte	0x75
 3493 17fe 00       		.sleb128 0
 3494 17ff 00       		.byte	0
 3495 1800 00       		.byte	0
 3496 1801 25       		.uleb128 0x25
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 159


 3497 1802 6C000000 		.4byte	.LBB80
 3498 1806 1A000000 		.4byte	.LBE80-.LBB80
 3499 180a 37180000 		.4byte	0x1837
 3500 180e 2D       		.uleb128 0x2d
 3501 180f 200B0000 		.4byte	.LASF373
 3502 1813 01       		.byte	0x1
 3503 1814 2901     		.2byte	0x129
 3504 1816 B5180000 		.4byte	0x18b5
 3505 181a 02       		.uleb128 0x2
 3506 181b 91       		.byte	0x91
 3507 181c 4C       		.sleb128 -52
 3508 181d 29       		.uleb128 0x29
 3509 181e 86000000 		.4byte	.LVL39
 3510 1822 0B190000 		.4byte	0x190b
 3511 1826 28       		.uleb128 0x28
 3512 1827 01       		.uleb128 0x1
 3513 1828 50       		.byte	0x50
 3514 1829 05       		.uleb128 0x5
 3515 182a 0C       		.byte	0xc
 3516 182b 00033240 		.4byte	0x40320300
 3517 182f 28       		.uleb128 0x28
 3518 1830 01       		.uleb128 0x1
 3519 1831 51       		.byte	0x51
 3520 1832 02       		.uleb128 0x2
 3521 1833 75       		.byte	0x75
 3522 1834 00       		.sleb128 0
 3523 1835 00       		.byte	0
 3524 1836 00       		.byte	0
 3525 1837 25       		.uleb128 0x25
 3526 1838 86000000 		.4byte	.LBB81
 3527 183c 1A000000 		.4byte	.LBE81-.LBB81
 3528 1840 6D180000 		.4byte	0x186d
 3529 1844 2D       		.uleb128 0x2d
 3530 1845 21110000 		.4byte	.LASF374
 3531 1849 01       		.byte	0x1
 3532 184a 3A01     		.2byte	0x13a
 3533 184c B5180000 		.4byte	0x18b5
 3534 1850 02       		.uleb128 0x2
 3535 1851 91       		.byte	0x91
 3536 1852 4C       		.sleb128 -52
 3537 1853 29       		.uleb128 0x29
 3538 1854 A0000000 		.4byte	.LVL40
 3539 1858 0B190000 		.4byte	0x190b
 3540 185c 28       		.uleb128 0x28
 3541 185d 01       		.uleb128 0x1
 3542 185e 50       		.byte	0x50
 3543 185f 05       		.uleb128 0x5
 3544 1860 0C       		.byte	0xc
 3545 1861 80063240 		.4byte	0x40320680
 3546 1865 28       		.uleb128 0x28
 3547 1866 01       		.uleb128 0x1
 3548 1867 51       		.byte	0x51
 3549 1868 02       		.uleb128 0x2
 3550 1869 75       		.byte	0x75
 3551 186a 00       		.sleb128 0
 3552 186b 00       		.byte	0
 3553 186c 00       		.byte	0
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 160


 3554 186d 27       		.uleb128 0x27
 3555 186e 0C000000 		.4byte	.LVL33
 3556 1872 FF180000 		.4byte	0x18ff
 3557 1876 86180000 		.4byte	0x1886
 3558 187a 28       		.uleb128 0x28
 3559 187b 01       		.uleb128 0x1
 3560 187c 50       		.byte	0x50
 3561 187d 01       		.uleb128 0x1
 3562 187e 30       		.byte	0x30
 3563 187f 28       		.uleb128 0x28
 3564 1880 01       		.uleb128 0x1
 3565 1881 51       		.byte	0x51
 3566 1882 02       		.uleb128 0x2
 3567 1883 08       		.byte	0x8
 3568 1884 96       		.byte	0x96
 3569 1885 00       		.byte	0
 3570 1886 2E       		.uleb128 0x2e
 3571 1887 10000000 		.4byte	.LVL34
 3572 188b 17190000 		.4byte	0x1917
 3573 188f 2E       		.uleb128 0x2e
 3574 1890 18000000 		.4byte	.LVL35
 3575 1894 23190000 		.4byte	0x1923
 3576 1898 27       		.uleb128 0x27
 3577 1899 1E000000 		.4byte	.LVL36
 3578 189d 2F190000 		.4byte	0x192f
 3579 18a1 AB180000 		.4byte	0x18ab
 3580 18a5 28       		.uleb128 0x28
 3581 18a6 01       		.uleb128 0x1
 3582 18a7 50       		.byte	0x50
 3583 18a8 01       		.uleb128 0x1
 3584 18a9 31       		.byte	0x31
 3585 18aa 00       		.byte	0
 3586 18ab 2E       		.uleb128 0x2e
 3587 18ac 4E000000 		.4byte	.LVL37
 3588 18b0 71140000 		.4byte	0x1471
 3589 18b4 00       		.byte	0
 3590 18b5 06       		.uleb128 0x6
 3591 18b6 A80E0000 		.4byte	0xea8
 3592 18ba 2F       		.uleb128 0x2f
 3593 18bb 7D000000 		.4byte	.LASF391
 3594 18bf 0A       		.byte	0xa
 3595 18c0 A7       		.byte	0xa7
 3596 18c1 C5180000 		.4byte	0x18c5
 3597 18c5 30       		.uleb128 0x30
 3598 18c6 04       		.byte	0x4
 3599 18c7 CB180000 		.4byte	0x18cb
 3600 18cb 06       		.uleb128 0x6
 3601 18cc 020E0000 		.4byte	0xe02
 3602 18d0 31       		.uleb128 0x31
 3603 18d1 8B0C0000 		.4byte	.LASF375
 3604 18d5 8B0C0000 		.4byte	.LASF375
 3605 18d9 02       		.byte	0x2
 3606 18da 0B03     		.2byte	0x30b
 3607 18dc 31       		.uleb128 0x31
 3608 18dd E6000000 		.4byte	.LASF376
 3609 18e1 E6000000 		.4byte	.LASF376
 3610 18e5 02       		.byte	0x2
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 161


 3611 18e6 CD02     		.2byte	0x2cd
 3612 18e8 31       		.uleb128 0x31
 3613 18e9 88040000 		.4byte	.LASF377
 3614 18ed 88040000 		.4byte	.LASF377
 3615 18f1 02       		.byte	0x2
 3616 18f2 0D03     		.2byte	0x30d
 3617 18f4 32       		.uleb128 0x32
 3618 18f5 FF120000 		.4byte	.LASF378
 3619 18f9 FF120000 		.4byte	.LASF378
 3620 18fd 0D       		.byte	0xd
 3621 18fe 90       		.byte	0x90
 3622 18ff 31       		.uleb128 0x31
 3623 1900 28150000 		.4byte	.LASF379
 3624 1904 28150000 		.4byte	.LASF379
 3625 1908 0B       		.byte	0xb
 3626 1909 A003     		.2byte	0x3a0
 3627 190b 31       		.uleb128 0x31
 3628 190c 6E050000 		.4byte	.LASF380
 3629 1910 6E050000 		.4byte	.LASF380
 3630 1914 0C       		.byte	0xc
 3631 1915 1702     		.2byte	0x217
 3632 1917 31       		.uleb128 0x31
 3633 1918 330D0000 		.4byte	.LASF381
 3634 191c 330D0000 		.4byte	.LASF381
 3635 1920 0B       		.byte	0xb
 3636 1921 9603     		.2byte	0x396
 3637 1923 31       		.uleb128 0x31
 3638 1924 6F0C0000 		.4byte	.LASF382
 3639 1928 6F0C0000 		.4byte	.LASF382
 3640 192c 0B       		.byte	0xb
 3641 192d 9503     		.2byte	0x395
 3642 192f 31       		.uleb128 0x31
 3643 1930 4A0B0000 		.4byte	.LASF383
 3644 1934 4A0B0000 		.4byte	.LASF383
 3645 1938 03       		.byte	0x3
 3646 1939 6606     		.2byte	0x666
 3647 193b 00       		.byte	0
 3648              		.section	.debug_abbrev,"",%progbits
 3649              	.Ldebug_abbrev0:
 3650 0000 01       		.uleb128 0x1
 3651 0001 11       		.uleb128 0x11
 3652 0002 01       		.byte	0x1
 3653 0003 25       		.uleb128 0x25
 3654 0004 0E       		.uleb128 0xe
 3655 0005 13       		.uleb128 0x13
 3656 0006 0B       		.uleb128 0xb
 3657 0007 03       		.uleb128 0x3
 3658 0008 0E       		.uleb128 0xe
 3659 0009 1B       		.uleb128 0x1b
 3660 000a 0E       		.uleb128 0xe
 3661 000b 55       		.uleb128 0x55
 3662 000c 17       		.uleb128 0x17
 3663 000d 11       		.uleb128 0x11
 3664 000e 01       		.uleb128 0x1
 3665 000f 10       		.uleb128 0x10
 3666 0010 17       		.uleb128 0x17
 3667 0011 00       		.byte	0
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 162


 3668 0012 00       		.byte	0
 3669 0013 02       		.uleb128 0x2
 3670 0014 24       		.uleb128 0x24
 3671 0015 00       		.byte	0
 3672 0016 0B       		.uleb128 0xb
 3673 0017 0B       		.uleb128 0xb
 3674 0018 3E       		.uleb128 0x3e
 3675 0019 0B       		.uleb128 0xb
 3676 001a 03       		.uleb128 0x3
 3677 001b 08       		.uleb128 0x8
 3678 001c 00       		.byte	0
 3679 001d 00       		.byte	0
 3680 001e 03       		.uleb128 0x3
 3681 001f 24       		.uleb128 0x24
 3682 0020 00       		.byte	0
 3683 0021 0B       		.uleb128 0xb
 3684 0022 0B       		.uleb128 0xb
 3685 0023 3E       		.uleb128 0x3e
 3686 0024 0B       		.uleb128 0xb
 3687 0025 03       		.uleb128 0x3
 3688 0026 0E       		.uleb128 0xe
 3689 0027 00       		.byte	0
 3690 0028 00       		.byte	0
 3691 0029 04       		.uleb128 0x4
 3692 002a 16       		.uleb128 0x16
 3693 002b 00       		.byte	0
 3694 002c 03       		.uleb128 0x3
 3695 002d 0E       		.uleb128 0xe
 3696 002e 3A       		.uleb128 0x3a
 3697 002f 0B       		.uleb128 0xb
 3698 0030 3B       		.uleb128 0x3b
 3699 0031 0B       		.uleb128 0xb
 3700 0032 49       		.uleb128 0x49
 3701 0033 13       		.uleb128 0x13
 3702 0034 00       		.byte	0
 3703 0035 00       		.byte	0
 3704 0036 05       		.uleb128 0x5
 3705 0037 35       		.uleb128 0x35
 3706 0038 00       		.byte	0
 3707 0039 49       		.uleb128 0x49
 3708 003a 13       		.uleb128 0x13
 3709 003b 00       		.byte	0
 3710 003c 00       		.byte	0
 3711 003d 06       		.uleb128 0x6
 3712 003e 26       		.uleb128 0x26
 3713 003f 00       		.byte	0
 3714 0040 49       		.uleb128 0x49
 3715 0041 13       		.uleb128 0x13
 3716 0042 00       		.byte	0
 3717 0043 00       		.byte	0
 3718 0044 07       		.uleb128 0x7
 3719 0045 01       		.uleb128 0x1
 3720 0046 01       		.byte	0x1
 3721 0047 49       		.uleb128 0x49
 3722 0048 13       		.uleb128 0x13
 3723 0049 01       		.uleb128 0x1
 3724 004a 13       		.uleb128 0x13
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 163


 3725 004b 00       		.byte	0
 3726 004c 00       		.byte	0
 3727 004d 08       		.uleb128 0x8
 3728 004e 21       		.uleb128 0x21
 3729 004f 00       		.byte	0
 3730 0050 49       		.uleb128 0x49
 3731 0051 13       		.uleb128 0x13
 3732 0052 2F       		.uleb128 0x2f
 3733 0053 0B       		.uleb128 0xb
 3734 0054 00       		.byte	0
 3735 0055 00       		.byte	0
 3736 0056 09       		.uleb128 0x9
 3737 0057 13       		.uleb128 0x13
 3738 0058 01       		.byte	0x1
 3739 0059 0B       		.uleb128 0xb
 3740 005a 0B       		.uleb128 0xb
 3741 005b 3A       		.uleb128 0x3a
 3742 005c 0B       		.uleb128 0xb
 3743 005d 3B       		.uleb128 0x3b
 3744 005e 0B       		.uleb128 0xb
 3745 005f 01       		.uleb128 0x1
 3746 0060 13       		.uleb128 0x13
 3747 0061 00       		.byte	0
 3748 0062 00       		.byte	0
 3749 0063 0A       		.uleb128 0xa
 3750 0064 0D       		.uleb128 0xd
 3751 0065 00       		.byte	0
 3752 0066 03       		.uleb128 0x3
 3753 0067 0E       		.uleb128 0xe
 3754 0068 3A       		.uleb128 0x3a
 3755 0069 0B       		.uleb128 0xb
 3756 006a 3B       		.uleb128 0x3b
 3757 006b 0B       		.uleb128 0xb
 3758 006c 49       		.uleb128 0x49
 3759 006d 13       		.uleb128 0x13
 3760 006e 38       		.uleb128 0x38
 3761 006f 0B       		.uleb128 0xb
 3762 0070 00       		.byte	0
 3763 0071 00       		.byte	0
 3764 0072 0B       		.uleb128 0xb
 3765 0073 13       		.uleb128 0x13
 3766 0074 01       		.byte	0x1
 3767 0075 0B       		.uleb128 0xb
 3768 0076 05       		.uleb128 0x5
 3769 0077 3A       		.uleb128 0x3a
 3770 0078 0B       		.uleb128 0xb
 3771 0079 3B       		.uleb128 0x3b
 3772 007a 0B       		.uleb128 0xb
 3773 007b 01       		.uleb128 0x1
 3774 007c 13       		.uleb128 0x13
 3775 007d 00       		.byte	0
 3776 007e 00       		.byte	0
 3777 007f 0C       		.uleb128 0xc
 3778 0080 0D       		.uleb128 0xd
 3779 0081 00       		.byte	0
 3780 0082 03       		.uleb128 0x3
 3781 0083 0E       		.uleb128 0xe
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 164


 3782 0084 3A       		.uleb128 0x3a
 3783 0085 0B       		.uleb128 0xb
 3784 0086 3B       		.uleb128 0x3b
 3785 0087 0B       		.uleb128 0xb
 3786 0088 49       		.uleb128 0x49
 3787 0089 13       		.uleb128 0x13
 3788 008a 38       		.uleb128 0x38
 3789 008b 05       		.uleb128 0x5
 3790 008c 00       		.byte	0
 3791 008d 00       		.byte	0
 3792 008e 0D       		.uleb128 0xd
 3793 008f 21       		.uleb128 0x21
 3794 0090 00       		.byte	0
 3795 0091 49       		.uleb128 0x49
 3796 0092 13       		.uleb128 0x13
 3797 0093 2F       		.uleb128 0x2f
 3798 0094 05       		.uleb128 0x5
 3799 0095 00       		.byte	0
 3800 0096 00       		.byte	0
 3801 0097 0E       		.uleb128 0xe
 3802 0098 0D       		.uleb128 0xd
 3803 0099 00       		.byte	0
 3804 009a 03       		.uleb128 0x3
 3805 009b 08       		.uleb128 0x8
 3806 009c 3A       		.uleb128 0x3a
 3807 009d 0B       		.uleb128 0xb
 3808 009e 3B       		.uleb128 0x3b
 3809 009f 0B       		.uleb128 0xb
 3810 00a0 49       		.uleb128 0x49
 3811 00a1 13       		.uleb128 0x13
 3812 00a2 38       		.uleb128 0x38
 3813 00a3 0B       		.uleb128 0xb
 3814 00a4 00       		.byte	0
 3815 00a5 00       		.byte	0
 3816 00a6 0F       		.uleb128 0xf
 3817 00a7 16       		.uleb128 0x16
 3818 00a8 00       		.byte	0
 3819 00a9 03       		.uleb128 0x3
 3820 00aa 0E       		.uleb128 0xe
 3821 00ab 3A       		.uleb128 0x3a
 3822 00ac 0B       		.uleb128 0xb
 3823 00ad 3B       		.uleb128 0x3b
 3824 00ae 05       		.uleb128 0x5
 3825 00af 49       		.uleb128 0x49
 3826 00b0 13       		.uleb128 0x13
 3827 00b1 00       		.byte	0
 3828 00b2 00       		.byte	0
 3829 00b3 10       		.uleb128 0x10
 3830 00b4 04       		.uleb128 0x4
 3831 00b5 01       		.byte	0x1
 3832 00b6 0B       		.uleb128 0xb
 3833 00b7 0B       		.uleb128 0xb
 3834 00b8 49       		.uleb128 0x49
 3835 00b9 13       		.uleb128 0x13
 3836 00ba 3A       		.uleb128 0x3a
 3837 00bb 0B       		.uleb128 0xb
 3838 00bc 3B       		.uleb128 0x3b
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 165


 3839 00bd 05       		.uleb128 0x5
 3840 00be 01       		.uleb128 0x1
 3841 00bf 13       		.uleb128 0x13
 3842 00c0 00       		.byte	0
 3843 00c1 00       		.byte	0
 3844 00c2 11       		.uleb128 0x11
 3845 00c3 28       		.uleb128 0x28
 3846 00c4 00       		.byte	0
 3847 00c5 03       		.uleb128 0x3
 3848 00c6 0E       		.uleb128 0xe
 3849 00c7 1C       		.uleb128 0x1c
 3850 00c8 0B       		.uleb128 0xb
 3851 00c9 00       		.byte	0
 3852 00ca 00       		.byte	0
 3853 00cb 12       		.uleb128 0x12
 3854 00cc 28       		.uleb128 0x28
 3855 00cd 00       		.byte	0
 3856 00ce 03       		.uleb128 0x3
 3857 00cf 0E       		.uleb128 0xe
 3858 00d0 1C       		.uleb128 0x1c
 3859 00d1 06       		.uleb128 0x6
 3860 00d2 00       		.byte	0
 3861 00d3 00       		.byte	0
 3862 00d4 13       		.uleb128 0x13
 3863 00d5 28       		.uleb128 0x28
 3864 00d6 00       		.byte	0
 3865 00d7 03       		.uleb128 0x3
 3866 00d8 0E       		.uleb128 0xe
 3867 00d9 1C       		.uleb128 0x1c
 3868 00da 05       		.uleb128 0x5
 3869 00db 00       		.byte	0
 3870 00dc 00       		.byte	0
 3871 00dd 14       		.uleb128 0x14
 3872 00de 13       		.uleb128 0x13
 3873 00df 01       		.byte	0x1
 3874 00e0 0B       		.uleb128 0xb
 3875 00e1 0B       		.uleb128 0xb
 3876 00e2 3A       		.uleb128 0x3a
 3877 00e3 0B       		.uleb128 0xb
 3878 00e4 3B       		.uleb128 0x3b
 3879 00e5 05       		.uleb128 0x5
 3880 00e6 01       		.uleb128 0x1
 3881 00e7 13       		.uleb128 0x13
 3882 00e8 00       		.byte	0
 3883 00e9 00       		.byte	0
 3884 00ea 15       		.uleb128 0x15
 3885 00eb 0D       		.uleb128 0xd
 3886 00ec 00       		.byte	0
 3887 00ed 03       		.uleb128 0x3
 3888 00ee 0E       		.uleb128 0xe
 3889 00ef 3A       		.uleb128 0x3a
 3890 00f0 0B       		.uleb128 0xb
 3891 00f1 3B       		.uleb128 0x3b
 3892 00f2 05       		.uleb128 0x5
 3893 00f3 49       		.uleb128 0x49
 3894 00f4 13       		.uleb128 0x13
 3895 00f5 38       		.uleb128 0x38
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 166


 3896 00f6 0B       		.uleb128 0xb
 3897 00f7 00       		.byte	0
 3898 00f8 00       		.byte	0
 3899 00f9 16       		.uleb128 0x16
 3900 00fa 04       		.uleb128 0x4
 3901 00fb 01       		.byte	0x1
 3902 00fc 0B       		.uleb128 0xb
 3903 00fd 0B       		.uleb128 0xb
 3904 00fe 49       		.uleb128 0x49
 3905 00ff 13       		.uleb128 0x13
 3906 0100 3A       		.uleb128 0x3a
 3907 0101 0B       		.uleb128 0xb
 3908 0102 3B       		.uleb128 0x3b
 3909 0103 0B       		.uleb128 0xb
 3910 0104 01       		.uleb128 0x1
 3911 0105 13       		.uleb128 0x13
 3912 0106 00       		.byte	0
 3913 0107 00       		.byte	0
 3914 0108 17       		.uleb128 0x17
 3915 0109 2E       		.uleb128 0x2e
 3916 010a 01       		.byte	0x1
 3917 010b 03       		.uleb128 0x3
 3918 010c 0E       		.uleb128 0xe
 3919 010d 3A       		.uleb128 0x3a
 3920 010e 0B       		.uleb128 0xb
 3921 010f 3B       		.uleb128 0x3b
 3922 0110 05       		.uleb128 0x5
 3923 0111 27       		.uleb128 0x27
 3924 0112 19       		.uleb128 0x19
 3925 0113 49       		.uleb128 0x49
 3926 0114 13       		.uleb128 0x13
 3927 0115 20       		.uleb128 0x20
 3928 0116 0B       		.uleb128 0xb
 3929 0117 01       		.uleb128 0x1
 3930 0118 13       		.uleb128 0x13
 3931 0119 00       		.byte	0
 3932 011a 00       		.byte	0
 3933 011b 18       		.uleb128 0x18
 3934 011c 05       		.uleb128 0x5
 3935 011d 00       		.byte	0
 3936 011e 03       		.uleb128 0x3
 3937 011f 0E       		.uleb128 0xe
 3938 0120 3A       		.uleb128 0x3a
 3939 0121 0B       		.uleb128 0xb
 3940 0122 3B       		.uleb128 0x3b
 3941 0123 05       		.uleb128 0x5
 3942 0124 49       		.uleb128 0x49
 3943 0125 13       		.uleb128 0x13
 3944 0126 00       		.byte	0
 3945 0127 00       		.byte	0
 3946 0128 19       		.uleb128 0x19
 3947 0129 34       		.uleb128 0x34
 3948 012a 00       		.byte	0
 3949 012b 03       		.uleb128 0x3
 3950 012c 0E       		.uleb128 0xe
 3951 012d 3A       		.uleb128 0x3a
 3952 012e 0B       		.uleb128 0xb
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 167


 3953 012f 3B       		.uleb128 0x3b
 3954 0130 05       		.uleb128 0x5
 3955 0131 49       		.uleb128 0x49
 3956 0132 13       		.uleb128 0x13
 3957 0133 00       		.byte	0
 3958 0134 00       		.byte	0
 3959 0135 1A       		.uleb128 0x1a
 3960 0136 2E       		.uleb128 0x2e
 3961 0137 01       		.byte	0x1
 3962 0138 03       		.uleb128 0x3
 3963 0139 0E       		.uleb128 0xe
 3964 013a 3A       		.uleb128 0x3a
 3965 013b 0B       		.uleb128 0xb
 3966 013c 3B       		.uleb128 0x3b
 3967 013d 05       		.uleb128 0x5
 3968 013e 27       		.uleb128 0x27
 3969 013f 19       		.uleb128 0x19
 3970 0140 20       		.uleb128 0x20
 3971 0141 0B       		.uleb128 0xb
 3972 0142 01       		.uleb128 0x1
 3973 0143 13       		.uleb128 0x13
 3974 0144 00       		.byte	0
 3975 0145 00       		.byte	0
 3976 0146 1B       		.uleb128 0x1b
 3977 0147 05       		.uleb128 0x5
 3978 0148 00       		.byte	0
 3979 0149 03       		.uleb128 0x3
 3980 014a 08       		.uleb128 0x8
 3981 014b 3A       		.uleb128 0x3a
 3982 014c 0B       		.uleb128 0xb
 3983 014d 3B       		.uleb128 0x3b
 3984 014e 05       		.uleb128 0x5
 3985 014f 49       		.uleb128 0x49
 3986 0150 13       		.uleb128 0x13
 3987 0151 00       		.byte	0
 3988 0152 00       		.byte	0
 3989 0153 1C       		.uleb128 0x1c
 3990 0154 2E       		.uleb128 0x2e
 3991 0155 00       		.byte	0
 3992 0156 03       		.uleb128 0x3
 3993 0157 0E       		.uleb128 0xe
 3994 0158 3A       		.uleb128 0x3a
 3995 0159 0B       		.uleb128 0xb
 3996 015a 3B       		.uleb128 0x3b
 3997 015b 05       		.uleb128 0x5
 3998 015c 27       		.uleb128 0x27
 3999 015d 19       		.uleb128 0x19
 4000 015e 20       		.uleb128 0x20
 4001 015f 0B       		.uleb128 0xb
 4002 0160 00       		.byte	0
 4003 0161 00       		.byte	0
 4004 0162 1D       		.uleb128 0x1d
 4005 0163 2E       		.uleb128 0x2e
 4006 0164 01       		.byte	0x1
 4007 0165 03       		.uleb128 0x3
 4008 0166 0E       		.uleb128 0xe
 4009 0167 3A       		.uleb128 0x3a
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 168


 4010 0168 0B       		.uleb128 0xb
 4011 0169 3B       		.uleb128 0x3b
 4012 016a 0B       		.uleb128 0xb
 4013 016b 27       		.uleb128 0x27
 4014 016c 19       		.uleb128 0x19
 4015 016d 8701     		.uleb128 0x87
 4016 016f 19       		.uleb128 0x19
 4017 0170 11       		.uleb128 0x11
 4018 0171 01       		.uleb128 0x1
 4019 0172 12       		.uleb128 0x12
 4020 0173 06       		.uleb128 0x6
 4021 0174 40       		.uleb128 0x40
 4022 0175 18       		.uleb128 0x18
 4023 0176 9742     		.uleb128 0x2117
 4024 0178 19       		.uleb128 0x19
 4025 0179 01       		.uleb128 0x1
 4026 017a 13       		.uleb128 0x13
 4027 017b 00       		.byte	0
 4028 017c 00       		.byte	0
 4029 017d 1E       		.uleb128 0x1e
 4030 017e 05       		.uleb128 0x5
 4031 017f 00       		.byte	0
 4032 0180 03       		.uleb128 0x3
 4033 0181 0E       		.uleb128 0xe
 4034 0182 3A       		.uleb128 0x3a
 4035 0183 0B       		.uleb128 0xb
 4036 0184 3B       		.uleb128 0x3b
 4037 0185 0B       		.uleb128 0xb
 4038 0186 49       		.uleb128 0x49
 4039 0187 13       		.uleb128 0x13
 4040 0188 02       		.uleb128 0x2
 4041 0189 18       		.uleb128 0x18
 4042 018a 00       		.byte	0
 4043 018b 00       		.byte	0
 4044 018c 1F       		.uleb128 0x1f
 4045 018d 2E       		.uleb128 0x2e
 4046 018e 01       		.byte	0x1
 4047 018f 03       		.uleb128 0x3
 4048 0190 0E       		.uleb128 0xe
 4049 0191 3A       		.uleb128 0x3a
 4050 0192 0B       		.uleb128 0xb
 4051 0193 3B       		.uleb128 0x3b
 4052 0194 0B       		.uleb128 0xb
 4053 0195 27       		.uleb128 0x27
 4054 0196 19       		.uleb128 0x19
 4055 0197 11       		.uleb128 0x11
 4056 0198 01       		.uleb128 0x1
 4057 0199 12       		.uleb128 0x12
 4058 019a 06       		.uleb128 0x6
 4059 019b 40       		.uleb128 0x40
 4060 019c 18       		.uleb128 0x18
 4061 019d 9742     		.uleb128 0x2117
 4062 019f 19       		.uleb128 0x19
 4063 01a0 01       		.uleb128 0x1
 4064 01a1 13       		.uleb128 0x13
 4065 01a2 00       		.byte	0
 4066 01a3 00       		.byte	0
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 169


 4067 01a4 20       		.uleb128 0x20
 4068 01a5 34       		.uleb128 0x34
 4069 01a6 00       		.byte	0
 4070 01a7 03       		.uleb128 0x3
 4071 01a8 0E       		.uleb128 0xe
 4072 01a9 3A       		.uleb128 0x3a
 4073 01aa 0B       		.uleb128 0xb
 4074 01ab 3B       		.uleb128 0x3b
 4075 01ac 0B       		.uleb128 0xb
 4076 01ad 49       		.uleb128 0x49
 4077 01ae 13       		.uleb128 0x13
 4078 01af 02       		.uleb128 0x2
 4079 01b0 17       		.uleb128 0x17
 4080 01b1 00       		.byte	0
 4081 01b2 00       		.byte	0
 4082 01b3 21       		.uleb128 0x21
 4083 01b4 1D       		.uleb128 0x1d
 4084 01b5 01       		.byte	0x1
 4085 01b6 31       		.uleb128 0x31
 4086 01b7 13       		.uleb128 0x13
 4087 01b8 11       		.uleb128 0x11
 4088 01b9 01       		.uleb128 0x1
 4089 01ba 12       		.uleb128 0x12
 4090 01bb 06       		.uleb128 0x6
 4091 01bc 58       		.uleb128 0x58
 4092 01bd 0B       		.uleb128 0xb
 4093 01be 59       		.uleb128 0x59
 4094 01bf 0B       		.uleb128 0xb
 4095 01c0 01       		.uleb128 0x1
 4096 01c1 13       		.uleb128 0x13
 4097 01c2 00       		.byte	0
 4098 01c3 00       		.byte	0
 4099 01c4 22       		.uleb128 0x22
 4100 01c5 05       		.uleb128 0x5
 4101 01c6 00       		.byte	0
 4102 01c7 31       		.uleb128 0x31
 4103 01c8 13       		.uleb128 0x13
 4104 01c9 02       		.uleb128 0x2
 4105 01ca 17       		.uleb128 0x17
 4106 01cb 00       		.byte	0
 4107 01cc 00       		.byte	0
 4108 01cd 23       		.uleb128 0x23
 4109 01ce 0B       		.uleb128 0xb
 4110 01cf 01       		.byte	0x1
 4111 01d0 11       		.uleb128 0x11
 4112 01d1 01       		.uleb128 0x1
 4113 01d2 12       		.uleb128 0x12
 4114 01d3 06       		.uleb128 0x6
 4115 01d4 00       		.byte	0
 4116 01d5 00       		.byte	0
 4117 01d6 24       		.uleb128 0x24
 4118 01d7 34       		.uleb128 0x34
 4119 01d8 00       		.byte	0
 4120 01d9 31       		.uleb128 0x31
 4121 01da 13       		.uleb128 0x13
 4122 01db 02       		.uleb128 0x2
 4123 01dc 17       		.uleb128 0x17
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 170


 4124 01dd 00       		.byte	0
 4125 01de 00       		.byte	0
 4126 01df 25       		.uleb128 0x25
 4127 01e0 0B       		.uleb128 0xb
 4128 01e1 01       		.byte	0x1
 4129 01e2 11       		.uleb128 0x11
 4130 01e3 01       		.uleb128 0x1
 4131 01e4 12       		.uleb128 0x12
 4132 01e5 06       		.uleb128 0x6
 4133 01e6 01       		.uleb128 0x1
 4134 01e7 13       		.uleb128 0x13
 4135 01e8 00       		.byte	0
 4136 01e9 00       		.byte	0
 4137 01ea 26       		.uleb128 0x26
 4138 01eb 34       		.uleb128 0x34
 4139 01ec 00       		.byte	0
 4140 01ed 03       		.uleb128 0x3
 4141 01ee 0E       		.uleb128 0xe
 4142 01ef 3A       		.uleb128 0x3a
 4143 01f0 0B       		.uleb128 0xb
 4144 01f1 3B       		.uleb128 0x3b
 4145 01f2 0B       		.uleb128 0xb
 4146 01f3 49       		.uleb128 0x49
 4147 01f4 13       		.uleb128 0x13
 4148 01f5 02       		.uleb128 0x2
 4149 01f6 18       		.uleb128 0x18
 4150 01f7 00       		.byte	0
 4151 01f8 00       		.byte	0
 4152 01f9 27       		.uleb128 0x27
 4153 01fa 898201   		.uleb128 0x4109
 4154 01fd 01       		.byte	0x1
 4155 01fe 11       		.uleb128 0x11
 4156 01ff 01       		.uleb128 0x1
 4157 0200 31       		.uleb128 0x31
 4158 0201 13       		.uleb128 0x13
 4159 0202 01       		.uleb128 0x1
 4160 0203 13       		.uleb128 0x13
 4161 0204 00       		.byte	0
 4162 0205 00       		.byte	0
 4163 0206 28       		.uleb128 0x28
 4164 0207 8A8201   		.uleb128 0x410a
 4165 020a 00       		.byte	0
 4166 020b 02       		.uleb128 0x2
 4167 020c 18       		.uleb128 0x18
 4168 020d 9142     		.uleb128 0x2111
 4169 020f 18       		.uleb128 0x18
 4170 0210 00       		.byte	0
 4171 0211 00       		.byte	0
 4172 0212 29       		.uleb128 0x29
 4173 0213 898201   		.uleb128 0x4109
 4174 0216 01       		.byte	0x1
 4175 0217 11       		.uleb128 0x11
 4176 0218 01       		.uleb128 0x1
 4177 0219 31       		.uleb128 0x31
 4178 021a 13       		.uleb128 0x13
 4179 021b 00       		.byte	0
 4180 021c 00       		.byte	0
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 171


 4181 021d 2A       		.uleb128 0x2a
 4182 021e 1D       		.uleb128 0x1d
 4183 021f 00       		.byte	0
 4184 0220 31       		.uleb128 0x31
 4185 0221 13       		.uleb128 0x13
 4186 0222 11       		.uleb128 0x11
 4187 0223 01       		.uleb128 0x1
 4188 0224 12       		.uleb128 0x12
 4189 0225 06       		.uleb128 0x6
 4190 0226 58       		.uleb128 0x58
 4191 0227 0B       		.uleb128 0xb
 4192 0228 59       		.uleb128 0x59
 4193 0229 0B       		.uleb128 0xb
 4194 022a 00       		.byte	0
 4195 022b 00       		.byte	0
 4196 022c 2B       		.uleb128 0x2b
 4197 022d 2E       		.uleb128 0x2e
 4198 022e 01       		.byte	0x1
 4199 022f 3F       		.uleb128 0x3f
 4200 0230 19       		.uleb128 0x19
 4201 0231 03       		.uleb128 0x3
 4202 0232 0E       		.uleb128 0xe
 4203 0233 3A       		.uleb128 0x3a
 4204 0234 0B       		.uleb128 0xb
 4205 0235 3B       		.uleb128 0x3b
 4206 0236 05       		.uleb128 0x5
 4207 0237 27       		.uleb128 0x27
 4208 0238 19       		.uleb128 0x19
 4209 0239 11       		.uleb128 0x11
 4210 023a 01       		.uleb128 0x1
 4211 023b 12       		.uleb128 0x12
 4212 023c 06       		.uleb128 0x6
 4213 023d 40       		.uleb128 0x40
 4214 023e 18       		.uleb128 0x18
 4215 023f 9742     		.uleb128 0x2117
 4216 0241 19       		.uleb128 0x19
 4217 0242 01       		.uleb128 0x1
 4218 0243 13       		.uleb128 0x13
 4219 0244 00       		.byte	0
 4220 0245 00       		.byte	0
 4221 0246 2C       		.uleb128 0x2c
 4222 0247 1D       		.uleb128 0x1d
 4223 0248 00       		.byte	0
 4224 0249 31       		.uleb128 0x31
 4225 024a 13       		.uleb128 0x13
 4226 024b 11       		.uleb128 0x11
 4227 024c 01       		.uleb128 0x1
 4228 024d 12       		.uleb128 0x12
 4229 024e 06       		.uleb128 0x6
 4230 024f 58       		.uleb128 0x58
 4231 0250 0B       		.uleb128 0xb
 4232 0251 59       		.uleb128 0x59
 4233 0252 05       		.uleb128 0x5
 4234 0253 00       		.byte	0
 4235 0254 00       		.byte	0
 4236 0255 2D       		.uleb128 0x2d
 4237 0256 34       		.uleb128 0x34
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 172


 4238 0257 00       		.byte	0
 4239 0258 03       		.uleb128 0x3
 4240 0259 0E       		.uleb128 0xe
 4241 025a 3A       		.uleb128 0x3a
 4242 025b 0B       		.uleb128 0xb
 4243 025c 3B       		.uleb128 0x3b
 4244 025d 05       		.uleb128 0x5
 4245 025e 49       		.uleb128 0x49
 4246 025f 13       		.uleb128 0x13
 4247 0260 02       		.uleb128 0x2
 4248 0261 18       		.uleb128 0x18
 4249 0262 00       		.byte	0
 4250 0263 00       		.byte	0
 4251 0264 2E       		.uleb128 0x2e
 4252 0265 898201   		.uleb128 0x4109
 4253 0268 00       		.byte	0
 4254 0269 11       		.uleb128 0x11
 4255 026a 01       		.uleb128 0x1
 4256 026b 31       		.uleb128 0x31
 4257 026c 13       		.uleb128 0x13
 4258 026d 00       		.byte	0
 4259 026e 00       		.byte	0
 4260 026f 2F       		.uleb128 0x2f
 4261 0270 34       		.uleb128 0x34
 4262 0271 00       		.byte	0
 4263 0272 03       		.uleb128 0x3
 4264 0273 0E       		.uleb128 0xe
 4265 0274 3A       		.uleb128 0x3a
 4266 0275 0B       		.uleb128 0xb
 4267 0276 3B       		.uleb128 0x3b
 4268 0277 0B       		.uleb128 0xb
 4269 0278 49       		.uleb128 0x49
 4270 0279 13       		.uleb128 0x13
 4271 027a 3F       		.uleb128 0x3f
 4272 027b 19       		.uleb128 0x19
 4273 027c 3C       		.uleb128 0x3c
 4274 027d 19       		.uleb128 0x19
 4275 027e 00       		.byte	0
 4276 027f 00       		.byte	0
 4277 0280 30       		.uleb128 0x30
 4278 0281 0F       		.uleb128 0xf
 4279 0282 00       		.byte	0
 4280 0283 0B       		.uleb128 0xb
 4281 0284 0B       		.uleb128 0xb
 4282 0285 49       		.uleb128 0x49
 4283 0286 13       		.uleb128 0x13
 4284 0287 00       		.byte	0
 4285 0288 00       		.byte	0
 4286 0289 31       		.uleb128 0x31
 4287 028a 2E       		.uleb128 0x2e
 4288 028b 00       		.byte	0
 4289 028c 3F       		.uleb128 0x3f
 4290 028d 19       		.uleb128 0x19
 4291 028e 3C       		.uleb128 0x3c
 4292 028f 19       		.uleb128 0x19
 4293 0290 6E       		.uleb128 0x6e
 4294 0291 0E       		.uleb128 0xe
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 173


 4295 0292 03       		.uleb128 0x3
 4296 0293 0E       		.uleb128 0xe
 4297 0294 3A       		.uleb128 0x3a
 4298 0295 0B       		.uleb128 0xb
 4299 0296 3B       		.uleb128 0x3b
 4300 0297 05       		.uleb128 0x5
 4301 0298 00       		.byte	0
 4302 0299 00       		.byte	0
 4303 029a 32       		.uleb128 0x32
 4304 029b 2E       		.uleb128 0x2e
 4305 029c 00       		.byte	0
 4306 029d 3F       		.uleb128 0x3f
 4307 029e 19       		.uleb128 0x19
 4308 029f 3C       		.uleb128 0x3c
 4309 02a0 19       		.uleb128 0x19
 4310 02a1 6E       		.uleb128 0x6e
 4311 02a2 0E       		.uleb128 0xe
 4312 02a3 03       		.uleb128 0x3
 4313 02a4 0E       		.uleb128 0xe
 4314 02a5 3A       		.uleb128 0x3a
 4315 02a6 0B       		.uleb128 0xb
 4316 02a7 3B       		.uleb128 0x3b
 4317 02a8 0B       		.uleb128 0xb
 4318 02a9 00       		.byte	0
 4319 02aa 00       		.byte	0
 4320 02ab 00       		.byte	0
 4321              		.section	.debug_loc,"",%progbits
 4322              	.Ldebug_loc0:
 4323              	.LLST0:
 4324 0000 CE000000 		.4byte	.LVL14
 4325 0004 D4000000 		.4byte	.LVL15
 4326 0008 0100     		.2byte	0x1
 4327 000a 50       		.byte	0x50
 4328 000b D8000000 		.4byte	.LVL16
 4329 000f E0000000 		.4byte	.LVL17
 4330 0013 0100     		.2byte	0x1
 4331 0015 50       		.byte	0x50
 4332 0016 EC000000 		.4byte	.LVL18
 4333 001a F2000000 		.4byte	.LVL19
 4334 001e 0100     		.2byte	0x1
 4335 0020 50       		.byte	0x50
 4336 0021 F6000000 		.4byte	.LVL20
 4337 0025 48010000 		.4byte	.LVL28
 4338 0029 0100     		.2byte	0x1
 4339 002b 50       		.byte	0x50
 4340 002c 00000000 		.4byte	0
 4341 0030 00000000 		.4byte	0
 4342              	.LLST1:
 4343 0034 04000000 		.4byte	.LVL1
 4344 0038 12000000 		.4byte	.LVL2
 4345 003c 0200     		.2byte	0x2
 4346 003e 30       		.byte	0x30
 4347 003f 9F       		.byte	0x9f
 4348 0040 00000000 		.4byte	0
 4349 0044 00000000 		.4byte	0
 4350              	.LLST2:
 4351 0048 12000000 		.4byte	.LVL2
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 174


 4352 004c 26000000 		.4byte	.LVL3
 4353 0050 0200     		.2byte	0x2
 4354 0052 30       		.byte	0x30
 4355 0053 9F       		.byte	0x9f
 4356 0054 00000000 		.4byte	0
 4357 0058 00000000 		.4byte	0
 4358              	.LLST3:
 4359 005c 26000000 		.4byte	.LVL3
 4360 0060 3E000000 		.4byte	.LVL4
 4361 0064 0200     		.2byte	0x2
 4362 0066 31       		.byte	0x31
 4363 0067 9F       		.byte	0x9f
 4364 0068 00000000 		.4byte	0
 4365 006c 00000000 		.4byte	0
 4366              	.LLST4:
 4367 0070 3E000000 		.4byte	.LVL4
 4368 0074 4C000000 		.4byte	.LVL5
 4369 0078 0200     		.2byte	0x2
 4370 007a 30       		.byte	0x30
 4371 007b 9F       		.byte	0x9f
 4372 007c 00000000 		.4byte	0
 4373 0080 00000000 		.4byte	0
 4374              	.LLST5:
 4375 0084 4C000000 		.4byte	.LVL5
 4376 0088 64000000 		.4byte	.LVL6
 4377 008c 0200     		.2byte	0x2
 4378 008e 30       		.byte	0x30
 4379 008f 9F       		.byte	0x9f
 4380 0090 00000000 		.4byte	0
 4381 0094 00000000 		.4byte	0
 4382              	.LLST7:
 4383 0098 4C000000 		.4byte	.LVL5
 4384 009c 64000000 		.4byte	.LVL6
 4385 00a0 0600     		.2byte	0x6
 4386 00a2 0C       		.byte	0xc
 4387 00a3 01004A00 		.4byte	0x4a0001
 4388 00a7 9F       		.byte	0x9f
 4389 00a8 00000000 		.4byte	0
 4390 00ac 00000000 		.4byte	0
 4391              	.LLST8:
 4392 00b0 64000000 		.4byte	.LVL6
 4393 00b4 7A000000 		.4byte	.LVL7
 4394 00b8 0200     		.2byte	0x2
 4395 00ba 30       		.byte	0x30
 4396 00bb 9F       		.byte	0x9f
 4397 00bc 00000000 		.4byte	0
 4398 00c0 00000000 		.4byte	0
 4399              	.LLST10:
 4400 00c4 64000000 		.4byte	.LVL6
 4401 00c8 7A000000 		.4byte	.LVL7
 4402 00cc 0600     		.2byte	0x6
 4403 00ce 0C       		.byte	0xc
 4404 00cf 01004A00 		.4byte	0x4a0001
 4405 00d3 9F       		.byte	0x9f
 4406 00d4 00000000 		.4byte	0
 4407 00d8 00000000 		.4byte	0
 4408              	.LLST11:
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 175


 4409 00dc 7A000000 		.4byte	.LVL7
 4410 00e0 92000000 		.4byte	.LVL8
 4411 00e4 0200     		.2byte	0x2
 4412 00e6 30       		.byte	0x30
 4413 00e7 9F       		.byte	0x9f
 4414 00e8 00000000 		.4byte	0
 4415 00ec 00000000 		.4byte	0
 4416              	.LLST12:
 4417 00f0 7A000000 		.4byte	.LVL7
 4418 00f4 92000000 		.4byte	.LVL8
 4419 00f8 0600     		.2byte	0x6
 4420 00fa 0C       		.byte	0xc
 4421 00fb 01004A00 		.4byte	0x4a0001
 4422 00ff 9F       		.byte	0x9f
 4423 0100 00000000 		.4byte	0
 4424 0104 00000000 		.4byte	0
 4425              	.LLST13:
 4426 0108 F6000000 		.4byte	.LVL20
 4427 010c 02010000 		.4byte	.LVL21
 4428 0110 0200     		.2byte	0x2
 4429 0112 30       		.byte	0x30
 4430 0113 9F       		.byte	0x9f
 4431 0114 00000000 		.4byte	0
 4432 0118 00000000 		.4byte	0
 4433              	.LLST14:
 4434 011c 02010000 		.4byte	.LVL21
 4435 0120 0A010000 		.4byte	.LVL22
 4436 0124 0200     		.2byte	0x2
 4437 0126 30       		.byte	0x30
 4438 0127 9F       		.byte	0x9f
 4439 0128 00000000 		.4byte	0
 4440 012c 00000000 		.4byte	0
 4441              	.LLST15:
 4442 0130 14010000 		.4byte	.LVL23
 4443 0134 1E010000 		.4byte	.LVL24
 4444 0138 0200     		.2byte	0x2
 4445 013a 30       		.byte	0x30
 4446 013b 9F       		.byte	0x9f
 4447 013c 00000000 		.4byte	0
 4448 0140 00000000 		.4byte	0
 4449              	.LLST16:
 4450 0144 1E010000 		.4byte	.LVL24
 4451 0148 2C010000 		.4byte	.LVL25
 4452 014c 0200     		.2byte	0x2
 4453 014e 32       		.byte	0x32
 4454 014f 9F       		.byte	0x9f
 4455 0150 00000000 		.4byte	0
 4456 0154 00000000 		.4byte	0
 4457              	.LLST17:
 4458 0158 36010000 		.4byte	.LVL26
 4459 015c 46010000 		.4byte	.LVL27
 4460 0160 0200     		.2byte	0x2
 4461 0162 31       		.byte	0x31
 4462 0163 9F       		.byte	0x9f
 4463 0164 00000000 		.4byte	0
 4464 0168 00000000 		.4byte	0
 4465              	.LLST18:
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 176


 4466 016c 54010000 		.4byte	.LVL30
 4467 0170 5E010000 		.4byte	.LVL31
 4468 0174 0200     		.2byte	0x2
 4469 0176 31       		.byte	0x31
 4470 0177 9F       		.byte	0x9f
 4471 0178 00000000 		.4byte	0
 4472 017c 00000000 		.4byte	0
 4473              		.section	.debug_aranges,"",%progbits
 4474 0000 2C000000 		.4byte	0x2c
 4475 0004 0200     		.2byte	0x2
 4476 0006 00000000 		.4byte	.Ldebug_info0
 4477 000a 04       		.byte	0x4
 4478 000b 00       		.byte	0
 4479 000c 0000     		.2byte	0
 4480 000e 0000     		.2byte	0
 4481 0010 00000000 		.4byte	.LFB187
 4482 0014 02000000 		.4byte	.LFE187-.LFB187
 4483 0018 00000000 		.4byte	.LFB188
 4484 001c A4010000 		.4byte	.LFE188-.LFB188
 4485 0020 00000000 		.4byte	.LFB190
 4486 0024 C0000000 		.4byte	.LFE190-.LFB190
 4487 0028 00000000 		.4byte	0
 4488 002c 00000000 		.4byte	0
 4489              		.section	.debug_ranges,"",%progbits
 4490              	.Ldebug_ranges0:
 4491 0000 00000000 		.4byte	.LFB187
 4492 0004 02000000 		.4byte	.LFE187
 4493 0008 00000000 		.4byte	.LFB188
 4494 000c A4010000 		.4byte	.LFE188
 4495 0010 00000000 		.4byte	.LFB190
 4496 0014 C0000000 		.4byte	.LFE190
 4497 0018 00000000 		.4byte	0
 4498 001c 00000000 		.4byte	0
 4499              		.section	.debug_line,"",%progbits
 4500              	.Ldebug_line0:
 4501 0000 32040000 		.section	.debug_str,"MS",%progbits,1
 4501      02007603 
 4501      00000201 
 4501      FB0E0D00 
 4501      01010101 
 4502              	.LASF245:
 4503 0000 43595F53 		.ascii	"CY_SYSPM_LDO_VOLTAGE_1_1V\000"
 4503      5953504D 
 4503      5F4C444F 
 4503      5F564F4C 
 4503      54414745 
 4504              	.LASF140:
 4505 001a 4241434B 		.ascii	"BACKUP_Type\000"
 4505      55505F54 
 4505      79706500 
 4506              	.LASF10:
 4507 0026 6C6F6E67 		.ascii	"long int\000"
 4507      20696E74 
 4507      00
 4508              	.LASF20:
 4509 002f 52455345 		.ascii	"RESERVED\000"
 4509      52564544 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 177


 4509      00
 4510              	.LASF133:
 4511 0038 5644445F 		.ascii	"VDD_ACTIVE\000"
 4511      41435449 
 4511      564500
 4512              	.LASF129:
 4513 0043 494E5452 		.ascii	"INTR_CAUSE0\000"
 4513      5F434155 
 4513      53453000 
 4514              	.LASF130:
 4515 004f 494E5452 		.ascii	"INTR_CAUSE1\000"
 4515      5F434155 
 4515      53453100 
 4516              	.LASF131:
 4517 005b 494E5452 		.ascii	"INTR_CAUSE2\000"
 4517      5F434155 
 4517      53453200 
 4518              	.LASF132:
 4519 0067 494E5452 		.ascii	"INTR_CAUSE3\000"
 4519      5F434155 
 4519      53453300 
 4520              	.LASF139:
 4521 0073 53525353 		.ascii	"SRSS_Type\000"
 4521      5F547970 
 4521      6500
 4522              	.LASF391:
 4523 007d 63795F64 		.ascii	"cy_device\000"
 4523      65766963 
 4523      6500
 4524              	.LASF350:
 4525 0087 636C6B48 		.ascii	"clkHf\000"
 4525      6600
 4526              	.LASF340:
 4527 008d 43595F53 		.ascii	"CY_SYSCLK_BAK_IN_WCO\000"
 4527      5953434C 
 4527      4B5F4241 
 4527      4B5F494E 
 4527      5F57434F 
 4528              	.LASF213:
 4529 00a2 63707573 		.ascii	"cpussCm0ClockCtlOffset\000"
 4529      73436D30 
 4529      436C6F63 
 4529      6B43746C 
 4529      4F666673 
 4530              	.LASF172:
 4531 00b9 70657269 		.ascii	"periClockNr\000"
 4531      436C6F63 
 4531      6B4E7200 
 4532              	.LASF242:
 4533 00c5 43595F53 		.ascii	"CY_SYSPM_LDO_VOLTAGE_ULP\000"
 4533      5953504D 
 4533      5F4C444F 
 4533      5F564F4C 
 4533      54414745 
 4534              	.LASF146:
 4535 00de 75646242 		.ascii	"udbBase\000"
 4535      61736500 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 178


 4536              	.LASF376:
 4537 00e6 43795F53 		.ascii	"Cy_SysClk_ClkPathSetSource\000"
 4537      7973436C 
 4537      6B5F436C 
 4537      6B506174 
 4537      68536574 
 4538              	.LASF236:
 4539 0101 63666749 		.ascii	"cfgIn\000"
 4539      6E00
 4540              	.LASF145:
 4541 0107 70657269 		.ascii	"periBase\000"
 4541      42617365 
 4541      00
 4542              	.LASF32:
 4543 0110 4D435744 		.ascii	"MCWDT_STRUCT_V1_Type\000"
 4543      545F5354 
 4543      52554354 
 4543      5F56315F 
 4543      54797065 
 4544              	.LASF221:
 4545 0125 63707573 		.ascii	"cpussCm0NmiCtlOffset\000"
 4545      73436D30 
 4545      4E6D6943 
 4545      746C4F66 
 4545      66736574 
 4546              	.LASF191:
 4547 013a 64774368 		.ascii	"dwChSize\000"
 4547      53697A65 
 4547      00
 4548              	.LASF367:
 4549 0143 43795F53 		.ascii	"Cy_SysClk_ClkTimerSetSource\000"
 4549      7973436C 
 4549      6B5F436C 
 4549      6B54696D 
 4549      65725365 
 4550              	.LASF248:
 4551 015f 43595F53 		.ascii	"CY_SYSCLK_TIMEOUT\000"
 4551      5953434C 
 4551      4B5F5449 
 4551      4D454F55 
 4551      5400
 4552              	.LASF333:
 4553 0171 63795F65 		.ascii	"cy_en_clkpump_in_sources_t\000"
 4553      6E5F636C 
 4553      6B70756D 
 4553      705F696E 
 4553      5F736F75 
 4554              	.LASF307:
 4555 018c 43595F53 		.ascii	"CY_SYSCLK_CLKLF_IN_WCO\000"
 4555      5953434C 
 4555      4B5F434C 
 4555      4B4C465F 
 4555      494E5F57 
 4556              	.LASF243:
 4557 01a3 43595F53 		.ascii	"CY_SYSPM_LDO_VOLTAGE_LP\000"
 4557      5953504D 
 4557      5F4C444F 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 179


 4557      5F564F4C 
 4557      54414745 
 4558              	.LASF281:
 4559 01bb 63636F5F 		.ascii	"cco_Freq\000"
 4559      46726571 
 4559      00
 4560              	.LASF38:
 4561 01c4 5057525F 		.ascii	"PWR_LVD_STATUS\000"
 4561      4C56445F 
 4561      53544154 
 4561      555300
 4562              	.LASF82:
 4563 01d3 5245535F 		.ascii	"RES_CAUSE2\000"
 4563      43415553 
 4563      453200
 4564              	.LASF362:
 4565 01de 43795F53 		.ascii	"Cy_SysClk_ClkPumpEnable\000"
 4565      7973436C 
 4565      6B5F436C 
 4565      6B50756D 
 4565      70456E61 
 4566              	.LASF173:
 4567 01f6 736D6966 		.ascii	"smifDeviceNr\000"
 4567      44657669 
 4567      63654E72 
 4567      00
 4568              	.LASF203:
 4569 0203 70657269 		.ascii	"periDivCmdPaTypeSelPos\000"
 4569      44697643 
 4569      6D645061 
 4569      54797065 
 4569      53656C50 
 4570              	.LASF387:
 4571 021a 4379436C 		.ascii	"CyClockStartupError\000"
 4571      6F636B53 
 4571      74617274 
 4571      75704572 
 4571      726F7200 
 4572              	.LASF77:
 4573 022e 53525353 		.ascii	"SRSS_INTR_MASK\000"
 4573      5F494E54 
 4573      525F4D41 
 4573      534B00
 4574              	.LASF126:
 4575 023d 4346475F 		.ascii	"CFG_SIO\000"
 4575      53494F00 
 4576              	.LASF69:
 4577 0245 434C4B5F 		.ascii	"CLK_FLL_STATUS\000"
 4577      464C4C5F 
 4577      53544154 
 4577      555300
 4578              	.LASF238:
 4579 0254 63666753 		.ascii	"cfgSIO\000"
 4579      494F00
 4580              	.LASF365:
 4581 025b 43795F53 		.ascii	"Cy_SysClk_ClkTimerEnable\000"
 4581      7973436C 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 180


 4581      6B5F436C 
 4581      6B54696D 
 4581      6572456E 
 4582              	.LASF53:
 4583 0274 434C4B5F 		.ascii	"CLK_ILO_CONFIG\000"
 4583      494C4F5F 
 4583      434F4E46 
 4583      494700
 4584              	.LASF143:
 4585 0283 63707573 		.ascii	"cpussBase\000"
 4585      73426173 
 4585      6500
 4586              	.LASF54:
 4587 028d 434C4B5F 		.ascii	"CLK_IMO_CONFIG\000"
 4587      494D4F5F 
 4587      434F4E46 
 4587      494700
 4588              	.LASF276:
 4589 029c 6C6F636B 		.ascii	"lockTolerance\000"
 4589      546F6C65 
 4589      72616E63 
 4589      6500
 4590              	.LASF273:
 4591 02aa 72656644 		.ascii	"refDiv\000"
 4591      697600
 4592              	.LASF344:
 4593 02b1 43595F53 		.ascii	"CY_SYSTICK_CLOCK_SOURCE_CLK_IMO\000"
 4593      59535449 
 4593      434B5F43 
 4593      4C4F434B 
 4593      5F534F55 
 4594              	.LASF317:
 4595 02d1 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH0\000"
 4595      5953434C 
 4595      4B5F5055 
 4595      4D505F49 
 4595      4E5F434C 
 4596              	.LASF318:
 4597 02ec 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH1\000"
 4597      5953434C 
 4597      4B5F5055 
 4597      4D505F49 
 4597      4E5F434C 
 4598              	.LASF319:
 4599 0307 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH2\000"
 4599      5953434C 
 4599      4B5F5055 
 4599      4D505F49 
 4599      4E5F434C 
 4600              	.LASF320:
 4601 0322 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH3\000"
 4601      5953434C 
 4601      4B5F5055 
 4601      4D505F49 
 4601      4E5F434C 
 4602              	.LASF321:
 4603 033d 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH4\000"
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 181


 4603      5953434C 
 4603      4B5F5055 
 4603      4D505F49 
 4603      4E5F434C 
 4604              	.LASF322:
 4605 0358 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH5\000"
 4605      5953434C 
 4605      4B5F5055 
 4605      4D505F49 
 4605      4E5F434C 
 4606              	.LASF323:
 4607 0373 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH6\000"
 4607      5953434C 
 4607      4B5F5055 
 4607      4D505F49 
 4607      4E5F434C 
 4608              	.LASF324:
 4609 038e 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH7\000"
 4609      5953434C 
 4609      4B5F5055 
 4609      4D505F49 
 4609      4E5F434C 
 4610              	.LASF56:
 4611 03a9 434C4B5F 		.ascii	"CLK_OUTPUT_SLOW\000"
 4611      4F555450 
 4611      55545F53 
 4611      4C4F5700 
 4612              	.LASF326:
 4613 03b9 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH9\000"
 4613      5953434C 
 4613      4B5F5055 
 4613      4D505F49 
 4613      4E5F434C 
 4614              	.LASF168:
 4615 03d4 63707573 		.ascii	"cpussNotConnectedIrq\000"
 4615      734E6F74 
 4615      436F6E6E 
 4615      65637465 
 4615      64497271 
 4616              	.LASF280:
 4617 03e9 6F757470 		.ascii	"outputMode\000"
 4617      75744D6F 
 4617      646500
 4618              	.LASF7:
 4619 03f4 73686F72 		.ascii	"short int\000"
 4619      7420696E 
 4619      7400
 4620              	.LASF50:
 4621 03fe 434C4B5F 		.ascii	"CLK_SELECT\000"
 4621      53454C45 
 4621      435400
 4622              	.LASF167:
 4623 0409 63707573 		.ascii	"cpussFmIrq\000"
 4623      73466D49 
 4623      727100
 4624              	.LASF103:
 4625 0414 5254435F 		.ascii	"RTC_TIME\000"
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 182


 4625      54494D45 
 4625      00
 4626              	.LASF371:
 4627 041d 666C6C43 		.ascii	"fllConfig\000"
 4627      6F6E6669 
 4627      6700
 4628              	.LASF202:
 4629 0427 70657269 		.ascii	"periDivCmdPaDivSelPos\000"
 4629      44697643 
 4629      6D645061 
 4629      44697653 
 4629      656C506F 
 4630              	.LASF369:
 4631 043d 43795F53 		.ascii	"Cy_SysPm_PmicUnlock\000"
 4631      7973506D 
 4631      5F506D69 
 4631      63556E6C 
 4631      6F636B00 
 4632              	.LASF110:
 4633 0451 494E5452 		.ascii	"INTR_SET\000"
 4633      5F534554 
 4633      00
 4634              	.LASF179:
 4635 045a 63727970 		.ascii	"cryptoMemSize\000"
 4635      746F4D65 
 4635      6D53697A 
 4635      6500
 4636              	.LASF225:
 4637 0468 63707573 		.ascii	"cpussRam1Ctl0\000"
 4637      7352616D 
 4637      3143746C 
 4637      3000
 4638              	.LASF246:
 4639 0476 43595F53 		.ascii	"CY_SYSCLK_SUCCESS\000"
 4639      5953434C 
 4639      4B5F5355 
 4639      43434553 
 4639      5300
 4640              	.LASF377:
 4641 0488 43795F53 		.ascii	"Cy_SysClk_FllEnable\000"
 4641      7973436C 
 4641      6B5F466C 
 4641      6C456E61 
 4641      626C6500 
 4642              	.LASF227:
 4643 049c 69706353 		.ascii	"ipcStructSize\000"
 4643      74727563 
 4643      7453697A 
 4643      6500
 4644              	.LASF85:
 4645 04aa 5057525F 		.ascii	"PWR_TRIM_BODOVP_CTL\000"
 4645      5452494D 
 4645      5F424F44 
 4645      4F56505F 
 4645      43544C00 
 4646              	.LASF199:
 4647 04be 70657269 		.ascii	"periTrGrSize\000"
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 183


 4647      54724772 
 4647      53697A65 
 4647      00
 4648              	.LASF272:
 4649 04cb 666C6C4D 		.ascii	"fllMult\000"
 4649      756C7400 
 4650              	.LASF161:
 4651 04d3 70726F74 		.ascii	"protVersion\000"
 4651      56657273 
 4651      696F6E00 
 4652              	.LASF79:
 4653 04df 53525353 		.ascii	"SRSS_INTR_CFG\000"
 4653      5F494E54 
 4653      525F4346 
 4653      4700
 4654              	.LASF305:
 4655 04ed 63795F65 		.ascii	"cy_en_clkhf_dividers_t\000"
 4655      6E5F636C 
 4655      6B68665F 
 4655      64697669 
 4655      64657273 
 4656              	.LASF363:
 4657 0504 43795F53 		.ascii	"Cy_SysClk_ClkPumpSetDivider\000"
 4657      7973436C 
 4657      6B5F436C 
 4657      6B50756D 
 4657      70536574 
 4658              	.LASF201:
 4659 0520 70657269 		.ascii	"periDivCmdTypeSelPos\000"
 4659      44697643 
 4659      6D645479 
 4659      70655365 
 4659      6C506F73 
 4660              	.LASF355:
 4661 0535 43795F53 		.ascii	"Cy_SysClk_ClkSlowSetDivider\000"
 4661      7973436C 
 4661      6B5F436C 
 4661      6B536C6F 
 4661      77536574 
 4662              	.LASF218:
 4663 0551 63707573 		.ascii	"cpussTrimRamCtlOffset\000"
 4663      73547269 
 4663      6D52616D 
 4663      43746C4F 
 4663      66667365 
 4664              	.LASF124:
 4665 0567 4346475F 		.ascii	"CFG_IN\000"
 4665      494E00
 4666              	.LASF380:
 4667 056e 43795F47 		.ascii	"Cy_GPIO_Port_Init\000"
 4667      50494F5F 
 4667      506F7274 
 4667      5F496E69 
 4667      7400
 4668              	.LASF33:
 4669 0580 5057525F 		.ascii	"PWR_CTL\000"
 4669      43544C00 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 184


 4670              	.LASF89:
 4671 0588 5057525F 		.ascii	"PWR_TRIM_WAKE_CTL\000"
 4671      5452494D 
 4671      5F57414B 
 4671      455F4354 
 4671      4C00
 4672              	.LASF39:
 4673 059a 5057525F 		.ascii	"PWR_HIB_DATA\000"
 4673      4849425F 
 4673      44415441 
 4673      00
 4674              	.LASF343:
 4675 05a7 43595F53 		.ascii	"CY_SYSTICK_CLOCK_SOURCE_CLK_LF\000"
 4675      59535449 
 4675      434B5F43 
 4675      4C4F434B 
 4675      5F534F55 
 4676              	.LASF22:
 4677 05c6 4D435744 		.ascii	"MCWDT_CNTHIGH\000"
 4677      545F434E 
 4677      54484947 
 4677      4800
 4678              	.LASF345:
 4679 05d4 43595F53 		.ascii	"CY_SYSTICK_CLOCK_SOURCE_CLK_ECO\000"
 4679      59535449 
 4679      434B5F43 
 4679      4C4F434B 
 4679      5F534F55 
 4680              	.LASF19:
 4681 05f4 75696E74 		.ascii	"uint32_t\000"
 4681      33325F74 
 4681      00
 4682              	.LASF339:
 4683 05fd 63795F65 		.ascii	"cy_en_clkpump_divide_t\000"
 4683      6E5F636C 
 4683      6B70756D 
 4683      705F6469 
 4683      76696465 
 4684              	.LASF366:
 4685 0614 43795F53 		.ascii	"Cy_SysClk_ClkTimerSetDivider\000"
 4685      7973436C 
 4685      6B5F436C 
 4685      6B54696D 
 4685      65725365 
 4686              	.LASF294:
 4687 0631 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH10\000"
 4687      5953434C 
 4687      4B5F434C 
 4687      4B48465F 
 4687      494E5F43 
 4688              	.LASF256:
 4689 064e 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_DSI\000"
 4689      5953434C 
 4689      4B5F434C 
 4689      4B504154 
 4689      485F494E 
 4690              	.LASF138:
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 185


 4691 0667 4750494F 		.ascii	"GPIO_V1_Type\000"
 4691      5F56315F 
 4691      54797065 
 4691      00
 4692              	.LASF211:
 4693 0674 6770696F 		.ascii	"gpioPrtCfgOutOffset\000"
 4693      50727443 
 4693      66674F75 
 4693      744F6666 
 4693      73657400 
 4694              	.LASF298:
 4695 0688 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH14\000"
 4695      5953434C 
 4695      4B5F434C 
 4695      4B48465F 
 4695      494E5F43 
 4696              	.LASF109:
 4697 06a5 494E5452 		.ascii	"INTR\000"
 4697      00
 4698              	.LASF93:
 4699 06aa 434C4B5F 		.ascii	"CLK_TRIM_ILO_CTL\000"
 4699      5452494D 
 4699      5F494C4F 
 4699      5F43544C 
 4699      00
 4700              	.LASF29:
 4701 06bb 4D435744 		.ascii	"MCWDT_INTR_MASKED\000"
 4701      545F494E 
 4701      54525F4D 
 4701      41534B45 
 4701      4400
 4702              	.LASF231:
 4703 06cd 666C6F61 		.ascii	"float\000"
 4703      7400
 4704              	.LASF364:
 4705 06d3 43795F53 		.ascii	"Cy_SysClk_ClkPumpSetSource\000"
 4705      7973436C 
 4705      6B5F436C 
 4705      6B50756D 
 4705      70536574 
 4706              	.LASF154:
 4707 06ee 63727970 		.ascii	"cryptoVersion\000"
 4707      746F5665 
 4707      7273696F 
 4707      6E00
 4708              	.LASF183:
 4709 06fc 666C6173 		.ascii	"flashProgramDelay\000"
 4709      6850726F 
 4709      6772616D 
 4709      44656C61 
 4709      7900
 4710              	.LASF120:
 4711 070e 4F55545F 		.ascii	"OUT_CLR\000"
 4711      434C5200 
 4712              	.LASF31:
 4713 0716 52455345 		.ascii	"RESERVED1\000"
 4713      52564544 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 186


 4713      3100
 4714              	.LASF17:
 4715 0720 696E7431 		.ascii	"int16_t\000"
 4715      365F7400 
 4716              	.LASF210:
 4717 0728 6770696F 		.ascii	"gpioPrtCfgInOffset\000"
 4717      50727443 
 4717      6667496E 
 4717      4F666673 
 4717      657400
 4718              	.LASF95:
 4719 073b 434C4B5F 		.ascii	"CLK_TRIM_ECO_CTL\000"
 4719      5452494D 
 4719      5F45434F 
 4719      5F43544C 
 4719      00
 4720              	.LASF279:
 4721 074c 73657474 		.ascii	"settlingCount\000"
 4721      6C696E67 
 4721      436F756E 
 4721      7400
 4722              	.LASF91:
 4723 075a 5057525F 		.ascii	"PWR_TRIM_LVD_CTL\000"
 4723      5452494D 
 4723      5F4C5644 
 4723      5F43544C 
 4723      00
 4724              	.LASF13:
 4725 076b 6C6F6E67 		.ascii	"long long unsigned int\000"
 4725      206C6F6E 
 4725      6720756E 
 4725      7369676E 
 4725      65642069 
 4726              	.LASF207:
 4727 0782 70657269 		.ascii	"periDiv24_5CtlOffset\000"
 4727      44697632 
 4727      345F3543 
 4727      746C4F66 
 4727      66736574 
 4728              	.LASF115:
 4729 0797 504D4943 		.ascii	"PMIC_CTL\000"
 4729      5F43544C 
 4729      00
 4730              	.LASF240:
 4731 07a0 73656C31 		.ascii	"sel1Active\000"
 4731      41637469 
 4731      766500
 4732              	.LASF166:
 4733 07ab 63707573 		.ascii	"cpussIpc0Irq\000"
 4733      73497063 
 4733      30497271 
 4733      00
 4734              	.LASF277:
 4735 07b8 69676169 		.ascii	"igain\000"
 4735      6E00
 4736              	.LASF284:
 4737 07be 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH0\000"
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 187


 4737      5953434C 
 4737      4B5F434C 
 4737      4B48465F 
 4737      494E5F43 
 4738              	.LASF285:
 4739 07da 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH1\000"
 4739      5953434C 
 4739      4B5F434C 
 4739      4B48465F 
 4739      494E5F43 
 4740              	.LASF286:
 4741 07f6 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH2\000"
 4741      5953434C 
 4741      4B5F434C 
 4741      4B48465F 
 4741      494E5F43 
 4742              	.LASF287:
 4743 0812 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH3\000"
 4743      5953434C 
 4743      4B5F434C 
 4743      4B48465F 
 4743      494E5F43 
 4744              	.LASF288:
 4745 082e 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH4\000"
 4745      5953434C 
 4745      4B5F434C 
 4745      4B48465F 
 4745      494E5F43 
 4746              	.LASF289:
 4747 084a 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH5\000"
 4747      5953434C 
 4747      4B5F434C 
 4747      4B48465F 
 4747      494E5F43 
 4748              	.LASF290:
 4749 0866 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH6\000"
 4749      5953434C 
 4749      4B5F434C 
 4749      4B48465F 
 4749      494E5F43 
 4750              	.LASF291:
 4751 0882 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH7\000"
 4751      5953434C 
 4751      4B5F434C 
 4751      4B48465F 
 4751      494E5F43 
 4752              	.LASF292:
 4753 089e 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH8\000"
 4753      5953434C 
 4753      4B5F434C 
 4753      4B48465F 
 4753      494E5F43 
 4754              	.LASF293:
 4755 08ba 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH9\000"
 4755      5953434C 
 4755      4B5F434C 
 4755      4B48465F 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 188


 4755      494E5F43 
 4756              	.LASF8:
 4757 08d6 5F5F7569 		.ascii	"__uint16_t\000"
 4757      6E743136 
 4757      5F7400
 4758              	.LASF37:
 4759 08e1 5057525F 		.ascii	"PWR_BUCK_CTL2\000"
 4759      4255434B 
 4759      5F43544C 
 4759      3200
 4760              	.LASF356:
 4761 08ef 43795F53 		.ascii	"Cy_SysClk_ClkPeriSetDivider\000"
 4761      7973436C 
 4761      6B5F436C 
 4761      6B506572 
 4761      69536574 
 4762              	.LASF316:
 4763 090b 63795F65 		.ascii	"cy_en_clktimer_in_sources_t\000"
 4763      6E5F636C 
 4763      6B74696D 
 4763      65725F69 
 4763      6E5F736F 
 4764              	.LASF313:
 4765 0927 43595F53 		.ascii	"CY_SYSCLK_CLKTIMER_IN_HF0_DIV2\000"
 4765      5953434C 
 4765      4B5F434C 
 4765      4B54494D 
 4765      45525F49 
 4766              	.LASF314:
 4767 0946 43595F53 		.ascii	"CY_SYSCLK_CLKTIMER_IN_HF0_DIV4\000"
 4767      5953434C 
 4767      4B5F434C 
 4767      4B54494D 
 4767      45525F49 
 4768              	.LASF65:
 4769 0965 434C4B5F 		.ascii	"CLK_FLL_CONFIG\000"
 4769      464C4C5F 
 4769      434F4E46 
 4769      494700
 4770              	.LASF125:
 4771 0974 4346475F 		.ascii	"CFG_OUT\000"
 4771      4F555400 
 4772              	.LASF105:
 4773 097c 414C4D31 		.ascii	"ALM1_TIME\000"
 4773      5F54494D 
 4773      4500
 4774              	.LASF315:
 4775 0986 43595F53 		.ascii	"CY_SYSCLK_CLKTIMER_IN_HF0_DIV8\000"
 4775      5953434C 
 4775      4B5F434C 
 4775      4B54494D 
 4775      45525F49 
 4776              	.LASF61:
 4777 09a5 434C4B5F 		.ascii	"CLK_ECO_STATUS\000"
 4777      45434F5F 
 4777      53544154 
 4777      555300
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 189


 4778              	.LASF188:
 4779 09b4 666C6173 		.ascii	"flashCtlMainWs3Freq\000"
 4779      6843746C 
 4779      4D61696E 
 4779      57733346 
 4779      72657100 
 4780              	.LASF264:
 4781 09c8 43595F53 		.ascii	"CY_SYSCLK_FLLPLL_OUTPUT_OUTPUT\000"
 4781      5953434C 
 4781      4B5F464C 
 4781      4C504C4C 
 4781      5F4F5554 
 4782              	.LASF302:
 4783 09e7 43595F53 		.ascii	"CY_SYSCLK_CLKHF_DIVIDE_BY_2\000"
 4783      5953434C 
 4783      4B5F434C 
 4783      4B48465F 
 4783      44495649 
 4784              	.LASF170:
 4785 0a03 73727373 		.ascii	"srssNumPll\000"
 4785      4E756D50 
 4785      6C6C00
 4786              	.LASF303:
 4787 0a0e 43595F53 		.ascii	"CY_SYSCLK_CLKHF_DIVIDE_BY_4\000"
 4787      5953434C 
 4787      4B5F434C 
 4787      4B48465F 
 4787      44495649 
 4788              	.LASF260:
 4789 0a2a 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_PILO\000"
 4789      5953434C 
 4789      4B5F434C 
 4789      4B504154 
 4789      485F494E 
 4790              	.LASF304:
 4791 0a44 43595F53 		.ascii	"CY_SYSCLK_CLKHF_DIVIDE_BY_8\000"
 4791      5953434C 
 4791      4B5F434C 
 4791      4B48465F 
 4791      44495649 
 4792              	.LASF121:
 4793 0a60 4F55545F 		.ascii	"OUT_SET\000"
 4793      53455400 
 4794              	.LASF250:
 4795 0a68 63795F65 		.ascii	"cy_en_sysclk_status_t\000"
 4795      6E5F7379 
 4795      73636C6B 
 4795      5F737461 
 4795      7475735F 
 4796              	.LASF66:
 4797 0a7e 434C4B5F 		.ascii	"CLK_FLL_CONFIG2\000"
 4797      464C4C5F 
 4797      434F4E46 
 4797      49473200 
 4798              	.LASF67:
 4799 0a8e 434C4B5F 		.ascii	"CLK_FLL_CONFIG3\000"
 4799      464C4C5F 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 190


 4799      434F4E46 
 4799      49473300 
 4800              	.LASF68:
 4801 0a9e 434C4B5F 		.ascii	"CLK_FLL_CONFIG4\000"
 4801      464C4C5F 
 4801      434F4E46 
 4801      49473400 
 4802              	.LASF60:
 4803 0aae 434C4B5F 		.ascii	"CLK_ECO_CONFIG\000"
 4803      45434F5F 
 4803      434F4E46 
 4803      494700
 4804              	.LASF57:
 4805 0abd 434C4B5F 		.ascii	"CLK_CAL_CNT1\000"
 4805      43414C5F 
 4805      434E5431 
 4805      00
 4806              	.LASF58:
 4807 0aca 434C4B5F 		.ascii	"CLK_CAL_CNT2\000"
 4807      43414C5F 
 4807      434E5432 
 4807      00
 4808              	.LASF181:
 4809 0ad7 666C6173 		.ascii	"flashPipeRequired\000"
 4809      68506970 
 4809      65526571 
 4809      75697265 
 4809      6400
 4810              	.LASF196:
 4811 0ae9 70657269 		.ascii	"periTrCmdOffset\000"
 4811      5472436D 
 4811      644F6666 
 4811      73657400 
 4812              	.LASF300:
 4813 0af9 63795F65 		.ascii	"cy_en_clkhf_in_sources_t\000"
 4813      6E5F636C 
 4813      6B68665F 
 4813      696E5F73 
 4813      6F757263 
 4814              	.LASF235:
 4815 0b12 696E7472 		.ascii	"intrCfg\000"
 4815      43666700 
 4816              	.LASF282:
 4817 0b1a 5F426F6F 		.ascii	"_Bool\000"
 4817      6C00
 4818              	.LASF373:
 4819 0b20 706F7274 		.ascii	"port6_cfg\000"
 4819      365F6366 
 4819      6700
 4820              	.LASF312:
 4821 0b2a 43595F53 		.ascii	"CY_SYSCLK_CLKTIMER_IN_HF0_NODIV\000"
 4821      5953434C 
 4821      4B5F434C 
 4821      4B54494D 
 4821      45525F49 
 4822              	.LASF383:
 4823 0b4a 43795F53 		.ascii	"Cy_SysPm_LdoSetVoltage\000"
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 191


 4823      7973506D 
 4823      5F4C646F 
 4823      53657456 
 4823      6F6C7461 
 4824              	.LASF28:
 4825 0b61 4D435744 		.ascii	"MCWDT_INTR_MASK\000"
 4825      545F494E 
 4825      54525F4D 
 4825      41534B00 
 4826              	.LASF372:
 4827 0b71 706F7274 		.ascii	"port0_cfg\000"
 4827      305F6366 
 4827      6700
 4828              	.LASF258:
 4829 0b7b 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_WCO\000"
 4829      5953434C 
 4829      4B5F434C 
 4829      4B504154 
 4829      485F494E 
 4830              	.LASF106:
 4831 0b94 414C4D31 		.ascii	"ALM1_DATE\000"
 4831      5F444154 
 4831      4500
 4832              	.LASF134:
 4833 0b9e 5644445F 		.ascii	"VDD_INTR\000"
 4833      494E5452 
 4833      00
 4834              	.LASF149:
 4835 0ba7 6770696F 		.ascii	"gpioBase\000"
 4835      42617365 
 4835      00
 4836              	.LASF73:
 4837 0bb0 434C4B5F 		.ascii	"CLK_PLL_STATUS\000"
 4837      504C4C5F 
 4837      53544154 
 4837      555300
 4838              	.LASF265:
 4839 0bbf 63795F65 		.ascii	"cy_en_fll_pll_output_mode_t\000"
 4839      6E5F666C 
 4839      6C5F706C 
 4839      6C5F6F75 
 4839      74707574 
 4840              	.LASF114:
 4841 0bdb 5449434B 		.ascii	"TICKS\000"
 4841      5300
 4842              	.LASF271:
 4843 0be1 63795F65 		.ascii	"cy_en_fll_cco_ranges_t\000"
 4843      6E5F666C 
 4843      6C5F6363 
 4843      6F5F7261 
 4843      6E676573 
 4844              	.LASF220:
 4845 0bf8 63707573 		.ascii	"cpussSysTickCtlOffset\000"
 4845      73537973 
 4845      5469636B 
 4845      43746C4F 
 4845      66667365 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 192


 4846              	.LASF185:
 4847 0c0e 666C6173 		.ascii	"flashCtlMainWs0Freq\000"
 4847      6843746C 
 4847      4D61696E 
 4847      57733046 
 4847      72657100 
 4848              	.LASF97:
 4849 0c22 434C4B5F 		.ascii	"CLK_TRIM_PILO_CTL2\000"
 4849      5452494D 
 4849      5F50494C 
 4849      4F5F4354 
 4849      4C3200
 4850              	.LASF98:
 4851 0c35 434C4B5F 		.ascii	"CLK_TRIM_PILO_CTL3\000"
 4851      5452494D 
 4851      5F50494C 
 4851      4F5F4354 
 4851      4C3300
 4852              	.LASF348:
 4853 0c48 43795F53 		.ascii	"Cy_SysClk_ClkHfEnable\000"
 4853      7973436C 
 4853      6B5F436C 
 4853      6B486645 
 4853      6E61626C 
 4854              	.LASF194:
 4855 0c5e 64775374 		.ascii	"dwStatusChIdxPos\000"
 4855      61747573 
 4855      43684964 
 4855      78506F73 
 4855      00
 4856              	.LASF382:
 4857 0c6f 43795F53 		.ascii	"Cy_SysLib_ResetBackupDomain\000"
 4857      79734C69 
 4857      625F5265 
 4857      73657442 
 4857      61636B75 
 4858              	.LASF375:
 4859 0c8b 43795F53 		.ascii	"Cy_SysClk_FllManualConfigure\000"
 4859      7973436C 
 4859      6B5F466C 
 4859      6C4D616E 
 4859      75616C43 
 4860              	.LASF390:
 4861 0ca8 43795F53 		.ascii	"Cy_SystemInit\000"
 4861      79737465 
 4861      6D496E69 
 4861      7400
 4862              	.LASF266:
 4863 0cb6 43595F53 		.ascii	"CY_SYSCLK_FLL_CCO_RANGE0\000"
 4863      5953434C 
 4863      4B5F464C 
 4863      4C5F4343 
 4863      4F5F5241 
 4864              	.LASF267:
 4865 0ccf 43595F53 		.ascii	"CY_SYSCLK_FLL_CCO_RANGE1\000"
 4865      5953434C 
 4865      4B5F464C 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 193


 4865      4C5F4343 
 4865      4F5F5241 
 4866              	.LASF268:
 4867 0ce8 43595F53 		.ascii	"CY_SYSCLK_FLL_CCO_RANGE2\000"
 4867      5953434C 
 4867      4B5F464C 
 4867      4C5F4343 
 4867      4F5F5241 
 4868              	.LASF269:
 4869 0d01 43595F53 		.ascii	"CY_SYSCLK_FLL_CCO_RANGE3\000"
 4869      5953434C 
 4869      4B5F464C 
 4869      4C5F4343 
 4869      4F5F5241 
 4870              	.LASF270:
 4871 0d1a 43595F53 		.ascii	"CY_SYSCLK_FLL_CCO_RANGE4\000"
 4871      5953434C 
 4871      4B5F464C 
 4871      4C5F4343 
 4871      4F5F5241 
 4872              	.LASF381:
 4873 0d33 43795F53 		.ascii	"Cy_SysLib_GetResetReason\000"
 4873      79734C69 
 4873      625F4765 
 4873      74526573 
 4873      65745265 
 4874              	.LASF119:
 4875 0d4c 4241434B 		.ascii	"BACKUP_V1_Type\000"
 4875      55505F56 
 4875      315F5479 
 4875      706500
 4876              	.LASF144:
 4877 0d5b 666C6173 		.ascii	"flashcBase\000"
 4877      68634261 
 4877      736500
 4878              	.LASF15:
 4879 0d66 63686172 		.ascii	"char\000"
 4879      00
 4880              	.LASF118:
 4881 0d6b 5452494D 		.ascii	"TRIM\000"
 4881      00
 4882              	.LASF176:
 4883 0d70 75646250 		.ascii	"udbPresent\000"
 4883      72657365 
 4883      6E7400
 4884              	.LASF177:
 4885 0d7b 73797350 		.ascii	"sysPmSimoPresent\000"
 4885      6D53696D 
 4885      6F507265 
 4885      73656E74 
 4885      00
 4886              	.LASF35:
 4887 0d8c 5057525F 		.ascii	"PWR_LVD_CTL\000"
 4887      4C56445F 
 4887      43544C00 
 4888              	.LASF237:
 4889 0d98 6366674F 		.ascii	"cfgOut\000"
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 194


 4889      757400
 4890              	.LASF275:
 4891 0d9f 656E6162 		.ascii	"enableOutputDiv\000"
 4891      6C654F75 
 4891      74707574 
 4891      44697600 
 4892              	.LASF42:
 4893 0daf 5744545F 		.ascii	"WDT_CNT\000"
 4893      434E5400 
 4894              	.LASF0:
 4895 0db7 756E7369 		.ascii	"unsigned int\000"
 4895      676E6564 
 4895      20696E74 
 4895      00
 4896              	.LASF195:
 4897 0dc4 64775374 		.ascii	"dwStatusChIdxMsk\000"
 4897      61747573 
 4897      43684964 
 4897      784D736B 
 4897      00
 4898              	.LASF76:
 4899 0dd5 53525353 		.ascii	"SRSS_INTR_SET\000"
 4899      5F494E54 
 4899      525F5345 
 4899      5400
 4900              	.LASF16:
 4901 0de3 75696E74 		.ascii	"uint8_t\000"
 4901      385F7400 
 4902              	.LASF51:
 4903 0deb 434C4B5F 		.ascii	"CLK_TIMER_CTL\000"
 4903      54494D45 
 4903      525F4354 
 4903      4C00
 4904              	.LASF370:
 4905 0df9 73746174 		.ascii	"status\000"
 4905      757300
 4906              	.LASF349:
 4907 0e00 43795F53 		.ascii	"Cy_SysClk_ClkHfSetDivider\000"
 4907      7973436C 
 4907      6B5F436C 
 4907      6B486653 
 4907      65744469 
 4908              	.LASF385:
 4909 0e1a 47656E65 		.ascii	"Generated_Source\\PSoC6\\cyfitter_cfg.c\000"
 4909      72617465 
 4909      645F536F 
 4909      75726365 
 4909      5C50536F 
 4910              	.LASF253:
 4911 0e40 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_ECO\000"
 4911      5953434C 
 4911      4B5F434C 
 4911      4B504154 
 4911      485F494E 
 4912              	.LASF200:
 4913 0e59 70657269 		.ascii	"periDivCmdDivSelMsk\000"
 4913      44697643 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 195


 4913      6D644469 
 4913      7653656C 
 4913      4D736B00 
 4914              	.LASF117:
 4915 0e6d 42524547 		.ascii	"BREG\000"
 4915      00
 4916              	.LASF43:
 4917 0e72 5744545F 		.ascii	"WDT_MATCH\000"
 4917      4D415443 
 4917      4800
 4918              	.LASF206:
 4919 0e7c 70657269 		.ascii	"periDiv16_5CtlOffset\000"
 4919      44697631 
 4919      365F3543 
 4919      746C4F66 
 4919      66736574 
 4920              	.LASF21:
 4921 0e91 4D435744 		.ascii	"MCWDT_CNTLOW\000"
 4921      545F434E 
 4921      544C4F57 
 4921      00
 4922              	.LASF224:
 4923 0e9e 63707573 		.ascii	"cpussRam0Ctl0\000"
 4923      7352616D 
 4923      3043746C 
 4923      3000
 4924              	.LASF342:
 4925 0eac 63795F65 		.ascii	"cy_en_clkbak_in_sources_t\000"
 4925      6E5F636C 
 4925      6B62616B 
 4925      5F696E5F 
 4925      736F7572 
 4926              	.LASF1:
 4927 0ec6 6C6F6E67 		.ascii	"long long int\000"
 4927      206C6F6E 
 4927      6720696E 
 4927      7400
 4928              	.LASF151:
 4929 0ed4 69706342 		.ascii	"ipcBase\000"
 4929      61736500 
 4930              	.LASF192:
 4931 0edc 64774368 		.ascii	"dwChCtlPrioPos\000"
 4931      43746C50 
 4931      72696F50 
 4931      6F7300
 4932              	.LASF152:
 4933 0eeb 63727970 		.ascii	"cryptoBase\000"
 4933      746F4261 
 4933      736500
 4934              	.LASF360:
 4935 0ef6 43795F53 		.ascii	"Cy_SysClk_ClkBakSetSource\000"
 4935      7973436C 
 4935      6B5F436C 
 4935      6B42616B 
 4935      53657453 
 4936              	.LASF99:
 4937 0f10 53525353 		.ascii	"SRSS_V1_Type\000"
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 196


 4937      5F56315F 
 4937      54797065 
 4937      00
 4938              	.LASF182:
 4939 0f1d 666C6173 		.ascii	"flashWriteDelay\000"
 4939      68577269 
 4939      74654465 
 4939      6C617900 
 4940              	.LASF55:
 4941 0f2d 434C4B5F 		.ascii	"CLK_OUTPUT_FAST\000"
 4941      4F555450 
 4941      55545F46 
 4941      41535400 
 4942              	.LASF384:
 4943 0f3d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4943      43313120 
 4943      352E342E 
 4943      31203230 
 4943      31363036 
 4944 0f70 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4944      20726576 
 4944      6973696F 
 4944      6E203233 
 4944      37373135 
 4945 0fa3 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4945      67202D66 
 4945      66756E63 
 4945      74696F6E 
 4945      2D736563 
 4946              	.LASF6:
 4947 0fcf 5F5F696E 		.ascii	"__int16_t\000"
 4947      7431365F 
 4947      7400
 4948              	.LASF386:
 4949 0fd9 443A5C63 		.ascii	"D:\\cypress\\client\\shanghai kinetic\\software\\03"
 4949      79707265 
 4949      73735C63 
 4949      6C69656E 
 4949      745C7368 
 4950 1007 32305C44 		.ascii	"20\\Design01.cydsn\\CE219521_PSoC_6_MCU_GPIO_Interr"
 4950      65736967 
 4950      6E30312E 
 4950      63796473 
 4950      6E5C4345 
 4951 1038 75707430 		.ascii	"upt01.cydsn\000"
 4951      312E6379 
 4951      64736E00 
 4952              	.LASF328:
 4953 1044 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH11\000"
 4953      5953434C 
 4953      4B5F5055 
 4953      4D505F49 
 4953      4E5F434C 
 4954              	.LASF295:
 4955 1060 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH11\000"
 4955      5953434C 
 4955      4B5F434C 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 197


 4955      4B48465F 
 4955      494E5F43 
 4956              	.LASF296:
 4957 107d 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH12\000"
 4957      5953434C 
 4957      4B5F434C 
 4957      4B48465F 
 4957      494E5F43 
 4958              	.LASF297:
 4959 109a 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH13\000"
 4959      5953434C 
 4959      4B5F434C 
 4959      4B48465F 
 4959      494E5F43 
 4960              	.LASF148:
 4961 10b7 6873696F 		.ascii	"hsiomBase\000"
 4961      6D426173 
 4961      6500
 4962              	.LASF299:
 4963 10c1 43595F53 		.ascii	"CY_SYSCLK_CLKHF_IN_CLKPATH15\000"
 4963      5953434C 
 4963      4B5F434C 
 4963      4B48465F 
 4963      494E5F43 
 4964              	.LASF198:
 4965 10de 70657269 		.ascii	"periTrGrOffset\000"
 4965      54724772 
 4965      4F666673 
 4965      657400
 4966              	.LASF164:
 4967 10ed 63707573 		.ascii	"cpussDwChNr\000"
 4967      73447743 
 4967      684E7200 
 4968              	.LASF353:
 4969 10f9 43795F53 		.ascii	"Cy_SysClk_ClkHfSetSource\000"
 4969      7973436C 
 4969      6B5F436C 
 4969      6B486653 
 4969      6574536F 
 4970              	.LASF71:
 4971 1112 434C4B5F 		.ascii	"CLK_PLL_CONFIG\000"
 4971      504C4C5F 
 4971      434F4E46 
 4971      494700
 4972              	.LASF374:
 4973 1121 706F7274 		.ascii	"port13_cfg\000"
 4973      31335F63 
 4973      666700
 4974              	.LASF162:
 4975 112c 63707573 		.ascii	"cpussIpcNr\000"
 4975      73497063 
 4975      4E7200
 4976              	.LASF215:
 4977 1137 63707573 		.ascii	"cpussCm4StatusOffset\000"
 4977      73436D34 
 4977      53746174 
 4977      75734F66 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 198


 4977      66736574 
 4978              	.LASF174:
 4979 114c 70617373 		.ascii	"passSarChannels\000"
 4979      53617243 
 4979      68616E6E 
 4979      656C7300 
 4980              	.LASF34:
 4981 115c 5057525F 		.ascii	"PWR_HIBERNATE\000"
 4981      48494245 
 4981      524E4154 
 4981      4500
 4982              	.LASF226:
 4983 116a 63707573 		.ascii	"cpussRam2Ctl0\000"
 4983      7352616D 
 4983      3243746C 
 4983      3000
 4984              	.LASF63:
 4985 1178 434C4B5F 		.ascii	"CLK_PILO_CONFIG\000"
 4985      50494C4F 
 4985      5F434F4E 
 4985      46494700 
 4986              	.LASF334:
 4987 1188 43595F53 		.ascii	"CY_SYSCLK_PUMP_NO_DIV\000"
 4987      5953434C 
 4987      4B5F5055 
 4987      4D505F4E 
 4987      4F5F4449 
 4988              	.LASF84:
 4989 119e 5057525F 		.ascii	"PWR_TRIM_REF_CTL\000"
 4989      5452494D 
 4989      5F524546 
 4989      5F43544C 
 4989      00
 4990              	.LASF100:
 4991 11af 5254435F 		.ascii	"RTC_RW\000"
 4991      525700
 4992              	.LASF136:
 4993 11b6 5644445F 		.ascii	"VDD_INTR_MASKED\000"
 4993      494E5452 
 4993      5F4D4153 
 4993      4B454400 
 4994              	.LASF205:
 4995 11c6 70657269 		.ascii	"periDiv16CtlOffset\000"
 4995      44697631 
 4995      3643746C 
 4995      4F666673 
 4995      657400
 4996              	.LASF26:
 4997 11d9 4D435744 		.ascii	"MCWDT_INTR\000"
 4997      545F494E 
 4997      545200
 4998              	.LASF30:
 4999 11e4 4D435744 		.ascii	"MCWDT_LOCK\000"
 4999      545F4C4F 
 4999      434B00
 5000              	.LASF9:
 5001 11ef 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 199


 5001      7420756E 
 5001      7369676E 
 5001      65642069 
 5001      6E7400
 5002              	.LASF2:
 5003 1202 6C6F6E67 		.ascii	"long double\000"
 5003      20646F75 
 5003      626C6500 
 5004              	.LASF18:
 5005 120e 75696E74 		.ascii	"uint16_t\000"
 5005      31365F74 
 5005      00
 5006              	.LASF147:
 5007 1217 70726F74 		.ascii	"protBase\000"
 5007      42617365 
 5007      00
 5008              	.LASF137:
 5009 1220 5644445F 		.ascii	"VDD_INTR_SET\000"
 5009      494E5452 
 5009      5F534554 
 5009      00
 5010              	.LASF197:
 5011 122d 70657269 		.ascii	"periTrCmdGrSelMsk\000"
 5011      5472436D 
 5011      64477253 
 5011      656C4D73 
 5011      6B00
 5012              	.LASF249:
 5013 123f 43595F53 		.ascii	"CY_SYSCLK_INVALID_STATE\000"
 5013      5953434C 
 5013      4B5F494E 
 5013      56414C49 
 5013      445F5354 
 5014              	.LASF338:
 5015 1257 43595F53 		.ascii	"CY_SYSCLK_PUMP_DIV_16\000"
 5015      5953434C 
 5015      4B5F5055 
 5015      4D505F44 
 5015      49565F31 
 5016              	.LASF171:
 5017 126d 73727373 		.ascii	"srssNumHfroot\000"
 5017      4E756D48 
 5017      66726F6F 
 5017      7400
 5018              	.LASF257:
 5019 127b 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_ILO\000"
 5019      5953434C 
 5019      4B5F434C 
 5019      4B504154 
 5019      485F494E 
 5020              	.LASF48:
 5021 1294 434C4B5F 		.ascii	"CLK_ROOT_SELECT\000"
 5021      524F4F54 
 5021      5F53454C 
 5021      45435400 
 5022              	.LASF159:
 5023 12a4 69706356 		.ascii	"ipcVersion\000"
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 200


 5023      65727369 
 5023      6F6E00
 5024              	.LASF155:
 5025 12af 64775665 		.ascii	"dwVersion\000"
 5025      7273696F 
 5025      6E00
 5026              	.LASF187:
 5027 12b9 666C6173 		.ascii	"flashCtlMainWs2Freq\000"
 5027      6843746C 
 5027      4D61696E 
 5027      57733246 
 5027      72657100 
 5028              	.LASF14:
 5029 12cd 73697A65 		.ascii	"sizetype\000"
 5029      74797065 
 5029      00
 5030              	.LASF247:
 5031 12d6 43595F53 		.ascii	"CY_SYSCLK_BAD_PARAM\000"
 5031      5953434C 
 5031      4B5F4241 
 5031      445F5041 
 5031      52414D00 
 5032              	.LASF222:
 5033 12ea 63707573 		.ascii	"cpussCm4NmiCtlOffset\000"
 5033      73436D34 
 5033      4E6D6943 
 5033      746C4F66 
 5033      66736574 
 5034              	.LASF378:
 5035 12ff 43795F53 		.ascii	"Cy_SysTick_SetClockSource\000"
 5035      79735469 
 5035      636B5F53 
 5035      6574436C 
 5035      6F636B53 
 5036              	.LASF204:
 5037 1319 70657269 		.ascii	"periDiv8CtlOffset\000"
 5037      44697638 
 5037      43746C4F 
 5037      66667365 
 5037      7400
 5038              	.LASF40:
 5039 132b 52455345 		.ascii	"RESERVED2\000"
 5039      52564544 
 5039      3200
 5040              	.LASF44:
 5041 1335 52455345 		.ascii	"RESERVED3\000"
 5041      52564544 
 5041      3300
 5042              	.LASF49:
 5043 133f 52455345 		.ascii	"RESERVED4\000"
 5043      52564544 
 5043      3400
 5044              	.LASF52:
 5045 1349 52455345 		.ascii	"RESERVED5\000"
 5045      52564544 
 5045      3500
 5046              	.LASF59:
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 201


 5047 1353 52455345 		.ascii	"RESERVED6\000"
 5047      52564544 
 5047      3600
 5048              	.LASF62:
 5049 135d 52455345 		.ascii	"RESERVED7\000"
 5049      52564544 
 5049      3700
 5050              	.LASF64:
 5051 1367 52455345 		.ascii	"RESERVED8\000"
 5051      52564544 
 5051      3800
 5052              	.LASF70:
 5053 1371 52455345 		.ascii	"RESERVED9\000"
 5053      52564544 
 5053      3900
 5054              	.LASF351:
 5055 137b 64697669 		.ascii	"divider\000"
 5055      64657200 
 5056              	.LASF47:
 5057 1383 434C4B5F 		.ascii	"CLK_PATH_SELECT\000"
 5057      50415448 
 5057      5F53454C 
 5057      45435400 
 5058              	.LASF239:
 5059 1393 73656C30 		.ascii	"sel0Active\000"
 5059      41637469 
 5059      766500
 5060              	.LASF153:
 5061 139e 63707573 		.ascii	"cpussVersion\000"
 5061      73566572 
 5061      73696F6E 
 5061      00
 5062              	.LASF212:
 5063 13ab 6770696F 		.ascii	"gpioPrtCfgSioOffset\000"
 5063      50727443 
 5063      66675369 
 5063      6F4F6666 
 5063      73657400 
 5064              	.LASF157:
 5065 13bf 6770696F 		.ascii	"gpioVersion\000"
 5065      56657273 
 5065      696F6E00 
 5066              	.LASF96:
 5067 13cb 434C4B5F 		.ascii	"CLK_TRIM_PILO_CTL\000"
 5067      5452494D 
 5067      5F50494C 
 5067      4F5F4354 
 5067      4C00
 5068              	.LASF78:
 5069 13dd 53525353 		.ascii	"SRSS_INTR_MASKED\000"
 5069      5F494E54 
 5069      525F4D41 
 5069      534B4544 
 5069      00
 5070              	.LASF36:
 5071 13ee 5057525F 		.ascii	"PWR_BUCK_CTL\000"
 5071      4255434B 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 202


 5071      5F43544C 
 5071      00
 5072              	.LASF156:
 5073 13fb 666C6173 		.ascii	"flashcVersion\000"
 5073      68635665 
 5073      7273696F 
 5073      6E00
 5074              	.LASF178:
 5075 1409 70726F74 		.ascii	"protBusMasterMask\000"
 5075      4275734D 
 5075      61737465 
 5075      724D6173 
 5075      6B00
 5076              	.LASF361:
 5077 141b 43795F53 		.ascii	"Cy_SysClk_IloEnable\000"
 5077      7973436C 
 5077      6B5F496C 
 5077      6F456E61 
 5077      626C6500 
 5078              	.LASF128:
 5079 142f 4750494F 		.ascii	"GPIO_PRT_V1_Type\000"
 5079      5F505254 
 5079      5F56315F 
 5079      54797065 
 5079      00
 5080              	.LASF341:
 5081 1440 43595F53 		.ascii	"CY_SYSCLK_BAK_IN_CLKLF\000"
 5081      5953434C 
 5081      4B5F4241 
 5081      4B5F494E 
 5081      5F434C4B 
 5082              	.LASF251:
 5083 1457 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_IMO\000"
 5083      5953434C 
 5083      4B5F434C 
 5083      4B504154 
 5083      485F494E 
 5084              	.LASF45:
 5085 1470 4D435744 		.ascii	"MCWDT_STRUCT\000"
 5085      545F5354 
 5085      52554354 
 5085      00
 5086              	.LASF230:
 5087 147d 63686172 		.ascii	"char_t\000"
 5087      5F7400
 5088              	.LASF116:
 5089 1484 52455345 		.ascii	"RESET\000"
 5089      5400
 5090              	.LASF274:
 5091 148a 63636F52 		.ascii	"ccoRange\000"
 5091      616E6765 
 5091      00
 5092              	.LASF86:
 5093 1493 434C4B5F 		.ascii	"CLK_TRIM_CCO_CTL\000"
 5093      5452494D 
 5093      5F43434F 
 5093      5F43544C 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 203


 5093      00
 5094              	.LASF301:
 5095 14a4 43595F53 		.ascii	"CY_SYSCLK_CLKHF_NO_DIVIDE\000"
 5095      5953434C 
 5095      4B5F434C 
 5095      4B48465F 
 5095      4E4F5F44 
 5096              	.LASF127:
 5097 14be 4346475F 		.ascii	"CFG_IN_GPIO5V\000"
 5097      494E5F47 
 5097      50494F35 
 5097      5600
 5098              	.LASF27:
 5099 14cc 4D435744 		.ascii	"MCWDT_INTR_SET\000"
 5099      545F494E 
 5099      54525F53 
 5099      455400
 5100              	.LASF311:
 5101 14db 43595F53 		.ascii	"CY_SYSCLK_CLKTIMER_IN_IMO\000"
 5101      5953434C 
 5101      4B5F434C 
 5101      4B54494D 
 5101      45525F49 
 5102              	.LASF184:
 5103 14f5 666C6173 		.ascii	"flashEraseDelay\000"
 5103      68457261 
 5103      73654465 
 5103      6C617900 
 5104              	.LASF254:
 5105 1505 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_ALTHF\000"
 5105      5953434C 
 5105      4B5F434C 
 5105      4B504154 
 5105      485F494E 
 5106              	.LASF101:
 5107 1520 43414C5F 		.ascii	"CAL_CTL\000"
 5107      43544C00 
 5108              	.LASF379:
 5109 1528 43795F53 		.ascii	"Cy_SysLib_SetWaitStates\000"
 5109      79734C69 
 5109      625F5365 
 5109      74576169 
 5109      74537461 
 5110              	.LASF122:
 5111 1540 4F55545F 		.ascii	"OUT_INV\000"
 5111      494E5600 
 5112              	.LASF217:
 5113 1548 63707573 		.ascii	"cpussCm4PwrCtlOffset\000"
 5113      73436D34 
 5113      50777243 
 5113      746C4F66 
 5113      66736574 
 5114              	.LASF5:
 5115 155d 5F5F7569 		.ascii	"__uint8_t\000"
 5115      6E74385F 
 5115      7400
 5116              	.LASF354:
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 204


 5117 1567 736F7572 		.ascii	"source\000"
 5117      636500
 5118              	.LASF255:
 5119 156e 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_DSIMUX\000"
 5119      5953434C 
 5119      4B5F434C 
 5119      4B504154 
 5119      485F494E 
 5120              	.LASF208:
 5121 158a 6770696F 		.ascii	"gpioPrtIntrCfgOffset\000"
 5121      50727449 
 5121      6E747243 
 5121      66674F66 
 5121      66736574 
 5122              	.LASF262:
 5123 159f 43595F53 		.ascii	"CY_SYSCLK_FLLPLL_OUTPUT_AUTO1\000"
 5123      5953434C 
 5123      4B5F464C 
 5123      4C504C4C 
 5123      5F4F5554 
 5124              	.LASF214:
 5125 15bd 63707573 		.ascii	"cpussCm4ClockCtlOffset\000"
 5125      73436D34 
 5125      436C6F63 
 5125      6B43746C 
 5125      4F666673 
 5126              	.LASF112:
 5127 15d4 494E5452 		.ascii	"INTR_MASKED\000"
 5127      5F4D4153 
 5127      4B454400 
 5128              	.LASF368:
 5129 15e0 43795F53 		.ascii	"Cy_SysPm_PmicDisableOutput\000"
 5129      7973506D 
 5129      5F506D69 
 5129      63446973 
 5129      61626C65 
 5130              	.LASF219:
 5131 15fb 63707573 		.ascii	"cpussTrimRomCtlOffset\000"
 5131      73547269 
 5131      6D526F6D 
 5131      43746C4F 
 5131      66667365 
 5132              	.LASF283:
 5133 1611 63795F73 		.ascii	"cy_stc_fll_manual_config_t\000"
 5133      74635F66 
 5133      6C6C5F6D 
 5133      616E7561 
 5133      6C5F636F 
 5134              	.LASF263:
 5135 162c 43595F53 		.ascii	"CY_SYSCLK_FLLPLL_OUTPUT_INPUT\000"
 5135      5953434C 
 5135      4B5F464C 
 5135      4C504C4C 
 5135      5F4F5554 
 5136              	.LASF165:
 5137 164a 63707573 		.ascii	"cpussFlashPaSize\000"
 5137      73466C61 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 205


 5137      73685061 
 5137      53697A65 
 5137      00
 5138              	.LASF388:
 5139 165b 6572726F 		.ascii	"errorCode\000"
 5139      72436F64 
 5139      6500
 5140              	.LASF158:
 5141 1665 6873696F 		.ascii	"hsiomVersion\000"
 5141      6D566572 
 5141      73696F6E 
 5141      00
 5142              	.LASF81:
 5143 1672 5245535F 		.ascii	"RES_CAUSE\000"
 5143      43415553 
 5143      4500
 5144              	.LASF12:
 5145 167c 6C6F6E67 		.ascii	"long unsigned int\000"
 5145      20756E73 
 5145      69676E65 
 5145      6420696E 
 5145      7400
 5146              	.LASF352:
 5147 168e 72657456 		.ascii	"retVal\000"
 5147      616C00
 5148              	.LASF261:
 5149 1695 43595F53 		.ascii	"CY_SYSCLK_FLLPLL_OUTPUT_AUTO\000"
 5149      5953434C 
 5149      4B5F464C 
 5149      4C504C4C 
 5149      5F4F5554 
 5150              	.LASF223:
 5151 16b2 63707573 		.ascii	"cpussRomCtl\000"
 5151      73526F6D 
 5151      43746C00 
 5152              	.LASF389:
 5153 16be 436C6F63 		.ascii	"ClockInit\000"
 5153      6B496E69 
 5153      7400
 5154              	.LASF113:
 5155 16c8 4F534343 		.ascii	"OSCCNT\000"
 5155      4E5400
 5156              	.LASF310:
 5157 16cf 63795F65 		.ascii	"cy_en_clklf_in_sources_t\000"
 5157      6E5F636C 
 5157      6B6C665F 
 5157      696E5F73 
 5157      6F757263 
 5158              	.LASF278:
 5159 16e8 70676169 		.ascii	"pgain\000"
 5159      6E00
 5160              	.LASF216:
 5161 16ee 63707573 		.ascii	"cpussCm0StatusOffset\000"
 5161      73436D30 
 5161      53746174 
 5161      75734F66 
 5161      66736574 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 206


 5162              	.LASF41:
 5163 1703 5744545F 		.ascii	"WDT_CTL\000"
 5163      43544C00 
 5164              	.LASF4:
 5165 170b 756E7369 		.ascii	"unsigned char\000"
 5165      676E6564 
 5165      20636861 
 5165      7200
 5166              	.LASF11:
 5167 1719 5F5F7569 		.ascii	"__uint32_t\000"
 5167      6E743332 
 5167      5F7400
 5168              	.LASF142:
 5169 1724 4750494F 		.ascii	"GPIO_Type\000"
 5169      5F547970 
 5169      6500
 5170              	.LASF228:
 5171 172e 6970634C 		.ascii	"ipcLockStatusOffset\000"
 5171      6F636B53 
 5171      74617475 
 5171      734F6666 
 5171      73657400 
 5172              	.LASF308:
 5173 1742 43595F53 		.ascii	"CY_SYSCLK_CLKLF_IN_ALTLF\000"
 5173      5953434C 
 5173      4B5F434C 
 5173      4B4C465F 
 5173      494E5F41 
 5174              	.LASF241:
 5175 175b 63795F73 		.ascii	"cy_stc_gpio_prt_config_t\000"
 5175      74635F67 
 5175      70696F5F 
 5175      7072745F 
 5175      636F6E66 
 5176              	.LASF123:
 5177 1774 494E5452 		.ascii	"INTR_CFG\000"
 5177      5F434647 
 5177      00
 5178              	.LASF252:
 5179 177d 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_EXT\000"
 5179      5953434C 
 5179      4B5F434C 
 5179      4B504154 
 5179      485F494E 
 5180              	.LASF72:
 5181 1796 52455345 		.ascii	"RESERVED10\000"
 5181      52564544 
 5181      313000
 5182              	.LASF74:
 5183 17a1 52455345 		.ascii	"RESERVED11\000"
 5183      52564544 
 5183      313100
 5184              	.LASF80:
 5185 17ac 52455345 		.ascii	"RESERVED12\000"
 5185      52564544 
 5185      313200
 5186              	.LASF83:
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 207


 5187 17b7 52455345 		.ascii	"RESERVED13\000"
 5187      52564544 
 5187      313300
 5188              	.LASF88:
 5189 17c2 52455345 		.ascii	"RESERVED14\000"
 5189      52564544 
 5189      313400
 5190              	.LASF90:
 5191 17cd 52455345 		.ascii	"RESERVED15\000"
 5191      52564544 
 5191      313500
 5192              	.LASF92:
 5193 17d8 52455345 		.ascii	"RESERVED16\000"
 5193      52564544 
 5193      313600
 5194              	.LASF327:
 5195 17e3 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH10\000"
 5195      5953434C 
 5195      4B5F5055 
 5195      4D505F49 
 5195      4E5F434C 
 5196              	.LASF190:
 5197 17ff 64774368 		.ascii	"dwChOffset\000"
 5197      4F666673 
 5197      657400
 5198              	.LASF329:
 5199 180a 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH12\000"
 5199      5953434C 
 5199      4B5F5055 
 5199      4D505F49 
 5199      4E5F434C 
 5200              	.LASF330:
 5201 1826 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH13\000"
 5201      5953434C 
 5201      4B5F5055 
 5201      4D505F49 
 5201      4E5F434C 
 5202              	.LASF331:
 5203 1842 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH14\000"
 5203      5953434C 
 5203      4B5F5055 
 5203      4D505F49 
 5203      4E5F434C 
 5204              	.LASF332:
 5205 185e 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH15\000"
 5205      5953434C 
 5205      4B5F5055 
 5205      4D505F49 
 5205      4E5F434C 
 5206              	.LASF104:
 5207 187a 5254435F 		.ascii	"RTC_DATE\000"
 5207      44415445 
 5207      00
 5208              	.LASF25:
 5209 1883 4D435744 		.ascii	"MCWDT_CTL\000"
 5209      545F4354 
 5209      4C00
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 208


 5210              	.LASF357:
 5211 188d 43795F53 		.ascii	"Cy_SysClk_ClkFastSetDivider\000"
 5211      7973436C 
 5211      6B5F436C 
 5211      6B466173 
 5211      74536574 
 5212              	.LASF358:
 5213 18a9 43795F53 		.ascii	"Cy_SysClk_ClkLfSetSource\000"
 5213      7973436C 
 5213      6B5F436C 
 5213      6B4C6653 
 5213      6574536F 
 5214              	.LASF111:
 5215 18c2 494E5452 		.ascii	"INTR_MASK\000"
 5215      5F4D4153 
 5215      4B00
 5216              	.LASF24:
 5217 18cc 4D435744 		.ascii	"MCWDT_CONFIG\000"
 5217      545F434F 
 5217      4E464947 
 5217      00
 5218              	.LASF180:
 5219 18d9 666C6173 		.ascii	"flashRwwRequired\000"
 5219      68527777 
 5219      52657175 
 5219      69726564 
 5219      00
 5220              	.LASF94:
 5221 18ea 5057525F 		.ascii	"PWR_TRIM_PWRSYS_CTL\000"
 5221      5452494D 
 5221      5F505752 
 5221      5359535F 
 5221      43544C00 
 5222              	.LASF209:
 5223 18fe 6770696F 		.ascii	"gpioPrtCfgOffset\000"
 5223      50727443 
 5223      66674F66 
 5223      66736574 
 5223      00
 5224              	.LASF309:
 5225 190f 43595F53 		.ascii	"CY_SYSCLK_CLKLF_IN_PILO\000"
 5225      5953434C 
 5225      4B5F434C 
 5225      4B4C465F 
 5225      494E5F50 
 5226              	.LASF175:
 5227 1927 65704D6F 		.ascii	"epMonitorNr\000"
 5227      6E69746F 
 5227      724E7200 
 5228              	.LASF186:
 5229 1933 666C6173 		.ascii	"flashCtlMainWs1Freq\000"
 5229      6843746C 
 5229      4D61696E 
 5229      57733146 
 5229      72657100 
 5230              	.LASF141:
 5231 1947 4750494F 		.ascii	"GPIO_PRT_Type\000"
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 209


 5231      5F505254 
 5231      5F547970 
 5231      6500
 5232              	.LASF135:
 5233 1955 5644445F 		.ascii	"VDD_INTR_MASK\000"
 5233      494E5452 
 5233      5F4D4153 
 5233      4B00
 5234              	.LASF3:
 5235 1963 7369676E 		.ascii	"signed char\000"
 5235      65642063 
 5235      68617200 
 5236              	.LASF87:
 5237 196f 434C4B5F 		.ascii	"CLK_TRIM_CCO_CTL2\000"
 5237      5452494D 
 5237      5F43434F 
 5237      5F43544C 
 5237      3200
 5238              	.LASF163:
 5239 1981 63707573 		.ascii	"cpussIpcIrqNr\000"
 5239      73497063 
 5239      4972714E 
 5239      7200
 5240              	.LASF193:
 5241 198f 64774368 		.ascii	"dwChCtlPreemptablePos\000"
 5241      43746C50 
 5241      7265656D 
 5241      70746162 
 5241      6C65506F 
 5242              	.LASF229:
 5243 19a5 63795F73 		.ascii	"cy_stc_device_t\000"
 5243      74635F64 
 5243      65766963 
 5243      655F7400 
 5244              	.LASF347:
 5245 19b5 43595F53 		.ascii	"CY_SYSTICK_CLOCK_SOURCE_CLK_CPU\000"
 5245      59535449 
 5245      434B5F43 
 5245      4C4F434B 
 5245      5F534F55 
 5246              	.LASF346:
 5247 19d5 43595F53 		.ascii	"CY_SYSTICK_CLOCK_SOURCE_CLK_TIMER\000"
 5247      59535449 
 5247      434B5F43 
 5247      4C4F434B 
 5247      5F534F55 
 5248              	.LASF75:
 5249 19f7 53525353 		.ascii	"SRSS_INTR\000"
 5249      5F494E54 
 5249      5200
 5250              	.LASF107:
 5251 1a01 414C4D32 		.ascii	"ALM2_TIME\000"
 5251      5F54494D 
 5251      4500
 5252              	.LASF160:
 5253 1a0b 70657269 		.ascii	"periVersion\000"
 5253      56657273 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 210


 5253      696F6E00 
 5254              	.LASF233:
 5255 1a17 75696E74 		.ascii	"uint8\000"
 5255      3800
 5256              	.LASF232:
 5257 1a1d 646F7562 		.ascii	"double\000"
 5257      6C6500
 5258              	.LASF150:
 5259 1a24 70617373 		.ascii	"passBase\000"
 5259      42617365 
 5259      00
 5260              	.LASF46:
 5261 1a2d 434C4B5F 		.ascii	"CLK_DSI_SELECT\000"
 5261      4453495F 
 5261      53454C45 
 5261      435400
 5262              	.LASF244:
 5263 1a3c 43595F53 		.ascii	"CY_SYSPM_LDO_VOLTAGE_0_9V\000"
 5263      5953504D 
 5263      5F4C444F 
 5263      5F564F4C 
 5263      54414745 
 5264              	.LASF23:
 5265 1a56 4D435744 		.ascii	"MCWDT_MATCH\000"
 5265      545F4D41 
 5265      54434800 
 5266              	.LASF169:
 5267 1a62 73727373 		.ascii	"srssNumClkpath\000"
 5267      4E756D43 
 5267      6C6B7061 
 5267      746800
 5268              	.LASF102:
 5269 1a71 53544154 		.ascii	"STATUS\000"
 5269      555300
 5270              	.LASF189:
 5271 1a78 666C6173 		.ascii	"flashCtlMainWs4Freq\000"
 5271      6843746C 
 5271      4D61696E 
 5271      57733446 
 5271      72657100 
 5272              	.LASF359:
 5273 1a8c 43795F53 		.ascii	"Cy_SysClk_IloHibernateOn\000"
 5273      7973436C 
 5273      6B5F496C 
 5273      6F486962 
 5273      65726E61 
 5274              	.LASF335:
 5275 1aa5 43595F53 		.ascii	"CY_SYSCLK_PUMP_DIV_2\000"
 5275      5953434C 
 5275      4B5F5055 
 5275      4D505F44 
 5275      49565F32 
 5276              	.LASF336:
 5277 1aba 43595F53 		.ascii	"CY_SYSCLK_PUMP_DIV_4\000"
 5277      5953434C 
 5277      4B5F5055 
 5277      4D505F44 
ARM GAS  C:\Users\SimonChen\AppData\Local\Temp\ccD98YNQ.s 			page 211


 5277      49565F34 
 5278              	.LASF337:
 5279 1acf 43595F53 		.ascii	"CY_SYSCLK_PUMP_DIV_8\000"
 5279      5953434C 
 5279      4B5F5055 
 5279      4D505F44 
 5279      49565F38 
 5280              	.LASF325:
 5281 1ae4 43595F53 		.ascii	"CY_SYSCLK_PUMP_IN_CLKPATH8\000"
 5281      5953434C 
 5281      4B5F5055 
 5281      4D505F49 
 5281      4E5F434C 
 5282              	.LASF234:
 5283 1aff 696E7472 		.ascii	"intrMask\000"
 5283      4D61736B 
 5283      00
 5284              	.LASF108:
 5285 1b08 414C4D32 		.ascii	"ALM2_DATE\000"
 5285      5F444154 
 5285      4500
 5286              	.LASF306:
 5287 1b12 43595F53 		.ascii	"CY_SYSCLK_CLKLF_IN_ILO\000"
 5287      5953434C 
 5287      4B5F434C 
 5287      4B4C465F 
 5287      494E5F49 
 5288              	.LASF259:
 5289 1b29 43595F53 		.ascii	"CY_SYSCLK_CLKPATH_IN_ALTLF\000"
 5289      5953434C 
 5289      4B5F434C 
 5289      4B504154 
 5289      485F494E 
 5290              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
